// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Page HttpOperation should render docs tab correctly 1`] = `
<Page
  node={
    Object {
      "data": Object {
        "id": "?http-operation-id?",
        "iid": "PUT_todos",
        "method": "put",
        "path": "/todos/{todoId}",
        "request": Object {
          "body": Object {
            "contents": Array [
              Object {
                "examples": Array [
                  Object {
                    "key": "Incomplete",
                    "value": Object {
                      "completed": false,
                      "name": "Docs Module",
                    },
                  },
                  Object {
                    "key": "Completed",
                    "value": Object {
                      "completed": true,
                      "name": "Studio",
                    },
                  },
                ],
                "mediaType": "application/json",
                "schema": Object {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "properties": Object {
                    "completed": Object {
                      "type": Array [
                        "boolean",
                        "null",
                      ],
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "name",
                    "completed",
                  ],
                  "title": "Todo Partial",
                  "type": "object",
                  "x-tags": Array [
                    "Todos",
                  ],
                },
              },
            ],
          },
          "headers": Array [
            Object {
              "name": "account-id",
              "required": true,
              "schema": Object {
                "description": "Your Stoplight account id",
                "type": "string",
              },
              "style": "simple",
            },
          ],
          "path": Array [
            Object {
              "name": "todoId",
              "required": true,
              "schema": Object {
                "type": "string",
              },
              "style": "simple",
            },
          ],
          "query": Array [
            Object {
              "deprecated": true,
              "description": "How many todos to limit?",
              "name": "limit",
              "schema": Object {
                "default": "300",
                "enum": Array [
                  0,
                  1,
                  3,
                ],
                "exclusiveMaximum": 10,
                "exclusiveMinimum": 0,
                "maxItems": 10,
                "maximum": 10,
                "minimum": 5,
                "type": "string",
              },
              "style": "form",
            },
            Object {
              "name": "completed",
              "schema": Object {
                "description": "Only return completed",
                "type": "boolean",
              },
              "style": "form",
            },
            Object {
              "name": "type",
              "schema": Object {
                "enum": Array [
                  "something",
                  "another",
                ],
                "type": "string",
              },
              "style": "form",
            },
          ],
        },
        "responses": Array [
          Object {
            "code": "200",
            "contents": Array [
              Object {
                "examples": Array [
                  Object {
                    "key": "application/json",
                    "value": Object {
                      "completed": true,
                      "completed_at": null,
                      "created_at": "2014-08-28T14:14:28.494Z",
                      "id": 9000,
                      "name": "It's Over 9000!!!",
                      "updated_at": "2015-08-28T14:14:28.494Z",
                    },
                  },
                ],
                "mediaType": "application/json",
                "schema": Object {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "allOf": Array [
                    Object {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": Object {
                        "completed": Object {
                          "type": Array [
                            "boolean",
                            "null",
                          ],
                        },
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "name",
                        "completed",
                      ],
                      "title": "Todo Partial",
                      "type": "object",
                      "x-tags": Array [
                        "Todos",
                      ],
                    },
                    Object {
                      "properties": Object {
                        "completed_at": Object {
                          "format": "date-time",
                          "type": Array [
                            "string",
                            "null",
                          ],
                        },
                        "created_at": Object {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": Object {
                          "maximum": 1000000,
                          "minimum": 0,
                          "type": "integer",
                        },
                        "updated_at": Object {
                          "format": "date-time",
                          "type": "string",
                        },
                        "user": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "description": "Here lies the user model",
                          "properties": Object {
                            "age": Object {
                              "maximum": 150,
                              "minimum": 0,
                              "type": "number",
                            },
                            "name": Object {
                              "description": "The user's full name.",
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "name",
                            "age",
                          ],
                          "title": "User",
                          "type": "object",
                          "x-tags": Array [
                            "Todos",
                          ],
                        },
                      },
                      "required": Array [
                        "id",
                        "user",
                      ],
                      "type": "object",
                    },
                  ],
                  "title": "Todo Full",
                  "x-tags": Array [
                    "Todos",
                  ],
                },
              },
            ],
            "description": "",
            "headers": Array [],
          },
          Object {
            "code": "401",
            "contents": Array [
              Object {
                "examples": Array [
                  Object {
                    "key": "application/json",
                    "value": Object {
                      "code": "401",
                      "message": "Not Authorized",
                    },
                  },
                ],
                "mediaType": "application/json",
                "schema": Object {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "anyOf": Array [
                    Object {
                      "properties": Object {
                        "code": Object {
                          "type": "string",
                        },
                        "message": Object {
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "code",
                      ],
                      "type": "object",
                    },
                    Object {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "description": "",
                      "properties": Object {
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "name",
                      ],
                      "title": "Category",
                      "type": "object",
                      "x-tags": Array [
                        "Pets",
                      ],
                    },
                  ],
                  "description": "A standard error object.",
                  "title": "Error",
                  "x-tags": Array [
                    "Common",
                  ],
                },
              },
            ],
            "description": "Our shared 401 response.",
            "headers": Array [],
          },
          Object {
            "code": "404",
            "contents": Array [
              Object {
                "examples": Array [
                  Object {
                    "key": "application/json",
                    "value": Object {
                      "code": "404",
                      "message": "Not Found",
                    },
                  },
                ],
                "mediaType": "application/json",
                "schema": Object {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "anyOf": Array [
                    Object {
                      "properties": Object {
                        "code": Object {
                          "type": "string",
                        },
                        "message": Object {
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "code",
                      ],
                      "type": "object",
                    },
                    Object {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "description": "",
                      "properties": Object {
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "name",
                      ],
                      "title": "Category",
                      "type": "object",
                      "x-tags": Array [
                        "Pets",
                      ],
                    },
                  ],
                  "description": "A standard error object.",
                  "title": "Error",
                  "x-tags": Array [
                    "Common",
                  ],
                },
              },
            ],
            "description": "Our shared 404 response.",
            "headers": Array [],
          },
          Object {
            "code": "500",
            "contents": Array [
              Object {
                "examples": Array [
                  Object {
                    "key": "application/json",
                    "value": Object {
                      "code": "500",
                      "message": "Server Error",
                    },
                  },
                ],
                "mediaType": "application/json",
                "schema": Object {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "anyOf": Array [
                    Object {
                      "properties": Object {
                        "code": Object {
                          "type": "string",
                        },
                        "message": Object {
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "code",
                      ],
                      "type": "object",
                    },
                    Object {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "description": "",
                      "properties": Object {
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "name",
                      ],
                      "title": "Category",
                      "type": "object",
                      "x-tags": Array [
                        "Pets",
                      ],
                    },
                  ],
                  "description": "A standard error object.",
                  "title": "Error",
                  "x-tags": Array [
                    "Common",
                  ],
                },
              },
            ],
            "description": "Our shared 500 response.",
            "headers": Array [],
          },
        ],
        "security": Array [
          Array [
            Object {
              "description": "Use \`?apikey=123\` to authenticate requests. It's super secure.",
              "in": "query",
              "key": "api_key",
              "name": "API Key",
              "type": "apiKey",
            },
          ],
          Array [
            Object {
              "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
              "key": "basicKey",
              "scheme": "basic",
              "type": "http",
            },
          ],
          Array [
            Object {
              "bearerFormat": "Authorization",
              "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
              "key": "bearerKey",
              "scheme": "bearer",
              "type": "http",
            },
          ],
          Array [
            Object {
              "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
              "key": "openIdConnectKey",
              "openIdConnectUrl": "http://openIdConnect.com",
              "type": "openIdConnect",
            },
          ],
          Array [
            Object {
              "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
              "flows": Object {
                "authorizationCode": Object {
                  "authorizationUrl": "http://authorizationUrl.com",
                  "refreshUrl": "http://refreshUrl.com",
                  "scopes": Object {
                    "read:pets": "read your pets",
                    "write:pets": "modify pets in your account",
                  },
                  "tokenUrl": "http://tokenUrl.com",
                },
                "clientCredentials": Object {
                  "refreshUrl": "http://refreshUrl.com",
                  "scopes": Object {
                    "read:pets": "read your pets",
                    "write:pets": "modify pets in your account",
                  },
                  "tokenUrl": "http://tokenUrl.com",
                },
                "implicit": Object {
                  "authorizationUrl": "http://authorizationUrl.com",
                  "refreshUrl": "http://refreshUrl.com",
                  "scopes": Object {
                    "read:pets": "read your pets",
                    "write:pets": "modify pets in your account",
                  },
                },
                "password": Object {
                  "refreshUrl": "http://refreshUrl.com",
                  "scopes": Object {
                    "read:pets": "read your pets",
                    "write:pets": "modify pets in your account",
                  },
                  "tokenUrl": "http://tokenUrl.com",
                },
              },
              "key": "oauth2Key",
              "type": "oauth2",
            },
          ],
        ],
        "servers": Array [
          Object {
            "url": "http://todos.stoplight.io",
          },
        ],
        "summary": "Update Todo",
        "tags": Array [
          Object {
            "name": "Todos",
          },
        ],
      },
      "id": 1,
      "name": "Put Todos",
      "srn": "sl/org/project",
      "type": "http_operation",
    }
  }
  tabs={[Function]}
>
  <PageComponent
    node={
      Object {
        "data": Object {
          "id": "?http-operation-id?",
          "iid": "PUT_todos",
          "method": "put",
          "path": "/todos/{todoId}",
          "request": Object {
            "body": Object {
              "contents": Array [
                Object {
                  "examples": Array [
                    Object {
                      "key": "Incomplete",
                      "value": Object {
                        "completed": false,
                        "name": "Docs Module",
                      },
                    },
                    Object {
                      "key": "Completed",
                      "value": Object {
                        "completed": true,
                        "name": "Studio",
                      },
                    },
                  ],
                  "mediaType": "application/json",
                  "schema": Object {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "properties": Object {
                      "completed": Object {
                        "type": Array [
                          "boolean",
                          "null",
                        ],
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "name",
                      "completed",
                    ],
                    "title": "Todo Partial",
                    "type": "object",
                    "x-tags": Array [
                      "Todos",
                    ],
                  },
                },
              ],
            },
            "headers": Array [
              Object {
                "name": "account-id",
                "required": true,
                "schema": Object {
                  "description": "Your Stoplight account id",
                  "type": "string",
                },
                "style": "simple",
              },
            ],
            "path": Array [
              Object {
                "name": "todoId",
                "required": true,
                "schema": Object {
                  "type": "string",
                },
                "style": "simple",
              },
            ],
            "query": Array [
              Object {
                "deprecated": true,
                "description": "How many todos to limit?",
                "name": "limit",
                "schema": Object {
                  "default": "300",
                  "enum": Array [
                    0,
                    1,
                    3,
                  ],
                  "exclusiveMaximum": 10,
                  "exclusiveMinimum": 0,
                  "maxItems": 10,
                  "maximum": 10,
                  "minimum": 5,
                  "type": "string",
                },
                "style": "form",
              },
              Object {
                "name": "completed",
                "schema": Object {
                  "description": "Only return completed",
                  "type": "boolean",
                },
                "style": "form",
              },
              Object {
                "name": "type",
                "schema": Object {
                  "enum": Array [
                    "something",
                    "another",
                  ],
                  "type": "string",
                },
                "style": "form",
              },
            ],
          },
          "responses": Array [
            Object {
              "code": "200",
              "contents": Array [
                Object {
                  "examples": Array [
                    Object {
                      "key": "application/json",
                      "value": Object {
                        "completed": true,
                        "completed_at": null,
                        "created_at": "2014-08-28T14:14:28.494Z",
                        "id": 9000,
                        "name": "It's Over 9000!!!",
                        "updated_at": "2015-08-28T14:14:28.494Z",
                      },
                    },
                  ],
                  "mediaType": "application/json",
                  "schema": Object {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "allOf": Array [
                      Object {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": Object {
                          "completed": Object {
                            "type": Array [
                              "boolean",
                              "null",
                            ],
                          },
                          "name": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "name",
                          "completed",
                        ],
                        "title": "Todo Partial",
                        "type": "object",
                        "x-tags": Array [
                          "Todos",
                        ],
                      },
                      Object {
                        "properties": Object {
                          "completed_at": Object {
                            "format": "date-time",
                            "type": Array [
                              "string",
                              "null",
                            ],
                          },
                          "created_at": Object {
                            "format": "date-time",
                            "type": "string",
                          },
                          "id": Object {
                            "maximum": 1000000,
                            "minimum": 0,
                            "type": "integer",
                          },
                          "updated_at": Object {
                            "format": "date-time",
                            "type": "string",
                          },
                          "user": Object {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "description": "Here lies the user model",
                            "properties": Object {
                              "age": Object {
                                "maximum": 150,
                                "minimum": 0,
                                "type": "number",
                              },
                              "name": Object {
                                "description": "The user's full name.",
                                "type": "string",
                              },
                            },
                            "required": Array [
                              "name",
                              "age",
                            ],
                            "title": "User",
                            "type": "object",
                            "x-tags": Array [
                              "Todos",
                            ],
                          },
                        },
                        "required": Array [
                          "id",
                          "user",
                        ],
                        "type": "object",
                      },
                    ],
                    "title": "Todo Full",
                    "x-tags": Array [
                      "Todos",
                    ],
                  },
                },
              ],
              "description": "",
              "headers": Array [],
            },
            Object {
              "code": "401",
              "contents": Array [
                Object {
                  "examples": Array [
                    Object {
                      "key": "application/json",
                      "value": Object {
                        "code": "401",
                        "message": "Not Authorized",
                      },
                    },
                  ],
                  "mediaType": "application/json",
                  "schema": Object {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "anyOf": Array [
                      Object {
                        "properties": Object {
                          "code": Object {
                            "type": "string",
                          },
                          "message": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "code",
                        ],
                        "type": "object",
                      },
                      Object {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "description": "",
                        "properties": Object {
                          "name": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "name",
                        ],
                        "title": "Category",
                        "type": "object",
                        "x-tags": Array [
                          "Pets",
                        ],
                      },
                    ],
                    "description": "A standard error object.",
                    "title": "Error",
                    "x-tags": Array [
                      "Common",
                    ],
                  },
                },
              ],
              "description": "Our shared 401 response.",
              "headers": Array [],
            },
            Object {
              "code": "404",
              "contents": Array [
                Object {
                  "examples": Array [
                    Object {
                      "key": "application/json",
                      "value": Object {
                        "code": "404",
                        "message": "Not Found",
                      },
                    },
                  ],
                  "mediaType": "application/json",
                  "schema": Object {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "anyOf": Array [
                      Object {
                        "properties": Object {
                          "code": Object {
                            "type": "string",
                          },
                          "message": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "code",
                        ],
                        "type": "object",
                      },
                      Object {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "description": "",
                        "properties": Object {
                          "name": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "name",
                        ],
                        "title": "Category",
                        "type": "object",
                        "x-tags": Array [
                          "Pets",
                        ],
                      },
                    ],
                    "description": "A standard error object.",
                    "title": "Error",
                    "x-tags": Array [
                      "Common",
                    ],
                  },
                },
              ],
              "description": "Our shared 404 response.",
              "headers": Array [],
            },
            Object {
              "code": "500",
              "contents": Array [
                Object {
                  "examples": Array [
                    Object {
                      "key": "application/json",
                      "value": Object {
                        "code": "500",
                        "message": "Server Error",
                      },
                    },
                  ],
                  "mediaType": "application/json",
                  "schema": Object {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "anyOf": Array [
                      Object {
                        "properties": Object {
                          "code": Object {
                            "type": "string",
                          },
                          "message": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "code",
                        ],
                        "type": "object",
                      },
                      Object {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "description": "",
                        "properties": Object {
                          "name": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "name",
                        ],
                        "title": "Category",
                        "type": "object",
                        "x-tags": Array [
                          "Pets",
                        ],
                      },
                    ],
                    "description": "A standard error object.",
                    "title": "Error",
                    "x-tags": Array [
                      "Common",
                    ],
                  },
                },
              ],
              "description": "Our shared 500 response.",
              "headers": Array [],
            },
          ],
          "security": Array [
            Array [
              Object {
                "description": "Use \`?apikey=123\` to authenticate requests. It's super secure.",
                "in": "query",
                "key": "api_key",
                "name": "API Key",
                "type": "apiKey",
              },
            ],
            Array [
              Object {
                "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                "key": "basicKey",
                "scheme": "basic",
                "type": "http",
              },
            ],
            Array [
              Object {
                "bearerFormat": "Authorization",
                "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                "key": "bearerKey",
                "scheme": "bearer",
                "type": "http",
              },
            ],
            Array [
              Object {
                "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                "key": "openIdConnectKey",
                "openIdConnectUrl": "http://openIdConnect.com",
                "type": "openIdConnect",
              },
            ],
            Array [
              Object {
                "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                "flows": Object {
                  "authorizationCode": Object {
                    "authorizationUrl": "http://authorizationUrl.com",
                    "refreshUrl": "http://refreshUrl.com",
                    "scopes": Object {
                      "read:pets": "read your pets",
                      "write:pets": "modify pets in your account",
                    },
                    "tokenUrl": "http://tokenUrl.com",
                  },
                  "clientCredentials": Object {
                    "refreshUrl": "http://refreshUrl.com",
                    "scopes": Object {
                      "read:pets": "read your pets",
                      "write:pets": "modify pets in your account",
                    },
                    "tokenUrl": "http://tokenUrl.com",
                  },
                  "implicit": Object {
                    "authorizationUrl": "http://authorizationUrl.com",
                    "refreshUrl": "http://refreshUrl.com",
                    "scopes": Object {
                      "read:pets": "read your pets",
                      "write:pets": "modify pets in your account",
                    },
                  },
                  "password": Object {
                    "refreshUrl": "http://refreshUrl.com",
                    "scopes": Object {
                      "read:pets": "read your pets",
                      "write:pets": "modify pets in your account",
                    },
                    "tokenUrl": "http://tokenUrl.com",
                  },
                },
                "key": "oauth2Key",
                "type": "oauth2",
              },
            ],
          ],
          "servers": Array [
            Object {
              "url": "http://todos.stoplight.io",
            },
          ],
          "summary": "Update Todo",
          "tags": Array [
            Object {
              "name": "Todos",
            },
          ],
        },
        "id": 1,
        "name": "Put Todos",
        "srn": "sl/org/project",
        "type": "http_operation",
      }
    }
    tabs={[Function]}
  >
    <div
      className="Page flex flex-col bg-white dark:bg-transparent"
    >
      <Component
        id="sl/org/project"
      >
        <PageHeader
          className="Page__header px-12 pt-12"
          node={
            Object {
              "data": Object {
                "id": "?http-operation-id?",
                "iid": "PUT_todos",
                "method": "put",
                "path": "/todos/{todoId}",
                "request": Object {
                  "body": Object {
                    "contents": Array [
                      Object {
                        "examples": Array [
                          Object {
                            "key": "Incomplete",
                            "value": Object {
                              "completed": false,
                              "name": "Docs Module",
                            },
                          },
                          Object {
                            "key": "Completed",
                            "value": Object {
                              "completed": true,
                              "name": "Studio",
                            },
                          },
                        ],
                        "mediaType": "application/json",
                        "schema": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "properties": Object {
                            "completed": Object {
                              "type": Array [
                                "boolean",
                                "null",
                              ],
                            },
                            "name": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "name",
                            "completed",
                          ],
                          "title": "Todo Partial",
                          "type": "object",
                          "x-tags": Array [
                            "Todos",
                          ],
                        },
                      },
                    ],
                  },
                  "headers": Array [
                    Object {
                      "name": "account-id",
                      "required": true,
                      "schema": Object {
                        "description": "Your Stoplight account id",
                        "type": "string",
                      },
                      "style": "simple",
                    },
                  ],
                  "path": Array [
                    Object {
                      "name": "todoId",
                      "required": true,
                      "schema": Object {
                        "type": "string",
                      },
                      "style": "simple",
                    },
                  ],
                  "query": Array [
                    Object {
                      "deprecated": true,
                      "description": "How many todos to limit?",
                      "name": "limit",
                      "schema": Object {
                        "default": "300",
                        "enum": Array [
                          0,
                          1,
                          3,
                        ],
                        "exclusiveMaximum": 10,
                        "exclusiveMinimum": 0,
                        "maxItems": 10,
                        "maximum": 10,
                        "minimum": 5,
                        "type": "string",
                      },
                      "style": "form",
                    },
                    Object {
                      "name": "completed",
                      "schema": Object {
                        "description": "Only return completed",
                        "type": "boolean",
                      },
                      "style": "form",
                    },
                    Object {
                      "name": "type",
                      "schema": Object {
                        "enum": Array [
                          "something",
                          "another",
                        ],
                        "type": "string",
                      },
                      "style": "form",
                    },
                  ],
                },
                "responses": Array [
                  Object {
                    "code": "200",
                    "contents": Array [
                      Object {
                        "examples": Array [
                          Object {
                            "key": "application/json",
                            "value": Object {
                              "completed": true,
                              "completed_at": null,
                              "created_at": "2014-08-28T14:14:28.494Z",
                              "id": 9000,
                              "name": "It's Over 9000!!!",
                              "updated_at": "2015-08-28T14:14:28.494Z",
                            },
                          },
                        ],
                        "mediaType": "application/json",
                        "schema": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "allOf": Array [
                            Object {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "properties": Object {
                                "completed": Object {
                                  "type": Array [
                                    "boolean",
                                    "null",
                                  ],
                                },
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                                "completed",
                              ],
                              "title": "Todo Partial",
                              "type": "object",
                              "x-tags": Array [
                                "Todos",
                              ],
                            },
                            Object {
                              "properties": Object {
                                "completed_at": Object {
                                  "format": "date-time",
                                  "type": Array [
                                    "string",
                                    "null",
                                  ],
                                },
                                "created_at": Object {
                                  "format": "date-time",
                                  "type": "string",
                                },
                                "id": Object {
                                  "maximum": 1000000,
                                  "minimum": 0,
                                  "type": "integer",
                                },
                                "updated_at": Object {
                                  "format": "date-time",
                                  "type": "string",
                                },
                                "user": Object {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "description": "Here lies the user model",
                                  "properties": Object {
                                    "age": Object {
                                      "maximum": 150,
                                      "minimum": 0,
                                      "type": "number",
                                    },
                                    "name": Object {
                                      "description": "The user's full name.",
                                      "type": "string",
                                    },
                                  },
                                  "required": Array [
                                    "name",
                                    "age",
                                  ],
                                  "title": "User",
                                  "type": "object",
                                  "x-tags": Array [
                                    "Todos",
                                  ],
                                },
                              },
                              "required": Array [
                                "id",
                                "user",
                              ],
                              "type": "object",
                            },
                          ],
                          "title": "Todo Full",
                          "x-tags": Array [
                            "Todos",
                          ],
                        },
                      },
                    ],
                    "description": "",
                    "headers": Array [],
                  },
                  Object {
                    "code": "401",
                    "contents": Array [
                      Object {
                        "examples": Array [
                          Object {
                            "key": "application/json",
                            "value": Object {
                              "code": "401",
                              "message": "Not Authorized",
                            },
                          },
                        ],
                        "mediaType": "application/json",
                        "schema": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "anyOf": Array [
                            Object {
                              "properties": Object {
                                "code": Object {
                                  "type": "string",
                                },
                                "message": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "code",
                              ],
                              "type": "object",
                            },
                            Object {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "description": "",
                              "properties": Object {
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                              ],
                              "title": "Category",
                              "type": "object",
                              "x-tags": Array [
                                "Pets",
                              ],
                            },
                          ],
                          "description": "A standard error object.",
                          "title": "Error",
                          "x-tags": Array [
                            "Common",
                          ],
                        },
                      },
                    ],
                    "description": "Our shared 401 response.",
                    "headers": Array [],
                  },
                  Object {
                    "code": "404",
                    "contents": Array [
                      Object {
                        "examples": Array [
                          Object {
                            "key": "application/json",
                            "value": Object {
                              "code": "404",
                              "message": "Not Found",
                            },
                          },
                        ],
                        "mediaType": "application/json",
                        "schema": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "anyOf": Array [
                            Object {
                              "properties": Object {
                                "code": Object {
                                  "type": "string",
                                },
                                "message": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "code",
                              ],
                              "type": "object",
                            },
                            Object {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "description": "",
                              "properties": Object {
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                              ],
                              "title": "Category",
                              "type": "object",
                              "x-tags": Array [
                                "Pets",
                              ],
                            },
                          ],
                          "description": "A standard error object.",
                          "title": "Error",
                          "x-tags": Array [
                            "Common",
                          ],
                        },
                      },
                    ],
                    "description": "Our shared 404 response.",
                    "headers": Array [],
                  },
                  Object {
                    "code": "500",
                    "contents": Array [
                      Object {
                        "examples": Array [
                          Object {
                            "key": "application/json",
                            "value": Object {
                              "code": "500",
                              "message": "Server Error",
                            },
                          },
                        ],
                        "mediaType": "application/json",
                        "schema": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "anyOf": Array [
                            Object {
                              "properties": Object {
                                "code": Object {
                                  "type": "string",
                                },
                                "message": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "code",
                              ],
                              "type": "object",
                            },
                            Object {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "description": "",
                              "properties": Object {
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                              ],
                              "title": "Category",
                              "type": "object",
                              "x-tags": Array [
                                "Pets",
                              ],
                            },
                          ],
                          "description": "A standard error object.",
                          "title": "Error",
                          "x-tags": Array [
                            "Common",
                          ],
                        },
                      },
                    ],
                    "description": "Our shared 500 response.",
                    "headers": Array [],
                  },
                ],
                "security": Array [
                  Array [
                    Object {
                      "description": "Use \`?apikey=123\` to authenticate requests. It's super secure.",
                      "in": "query",
                      "key": "api_key",
                      "name": "API Key",
                      "type": "apiKey",
                    },
                  ],
                  Array [
                    Object {
                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                      "key": "basicKey",
                      "scheme": "basic",
                      "type": "http",
                    },
                  ],
                  Array [
                    Object {
                      "bearerFormat": "Authorization",
                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                      "key": "bearerKey",
                      "scheme": "bearer",
                      "type": "http",
                    },
                  ],
                  Array [
                    Object {
                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                      "key": "openIdConnectKey",
                      "openIdConnectUrl": "http://openIdConnect.com",
                      "type": "openIdConnect",
                    },
                  ],
                  Array [
                    Object {
                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                      "flows": Object {
                        "authorizationCode": Object {
                          "authorizationUrl": "http://authorizationUrl.com",
                          "refreshUrl": "http://refreshUrl.com",
                          "scopes": Object {
                            "read:pets": "read your pets",
                            "write:pets": "modify pets in your account",
                          },
                          "tokenUrl": "http://tokenUrl.com",
                        },
                        "clientCredentials": Object {
                          "refreshUrl": "http://refreshUrl.com",
                          "scopes": Object {
                            "read:pets": "read your pets",
                            "write:pets": "modify pets in your account",
                          },
                          "tokenUrl": "http://tokenUrl.com",
                        },
                        "implicit": Object {
                          "authorizationUrl": "http://authorizationUrl.com",
                          "refreshUrl": "http://refreshUrl.com",
                          "scopes": Object {
                            "read:pets": "read your pets",
                            "write:pets": "modify pets in your account",
                          },
                        },
                        "password": Object {
                          "refreshUrl": "http://refreshUrl.com",
                          "scopes": Object {
                            "read:pets": "read your pets",
                            "write:pets": "modify pets in your account",
                          },
                          "tokenUrl": "http://tokenUrl.com",
                        },
                      },
                      "key": "oauth2Key",
                      "type": "oauth2",
                    },
                  ],
                ],
                "servers": Array [
                  Object {
                    "url": "http://todos.stoplight.io",
                  },
                ],
                "summary": "Update Todo",
                "tags": Array [
                  Object {
                    "name": "Todos",
                  },
                ],
              },
              "id": 1,
              "name": "Put Todos",
              "srn": "sl/org/project",
              "type": "http_operation",
            }
          }
        >
          <PageHeaderComponent
            className="Page__header px-12 pt-12"
            node={
              Object {
                "data": Object {
                  "id": "?http-operation-id?",
                  "iid": "PUT_todos",
                  "method": "put",
                  "path": "/todos/{todoId}",
                  "request": Object {
                    "body": Object {
                      "contents": Array [
                        Object {
                          "examples": Array [
                            Object {
                              "key": "Incomplete",
                              "value": Object {
                                "completed": false,
                                "name": "Docs Module",
                              },
                            },
                            Object {
                              "key": "Completed",
                              "value": Object {
                                "completed": true,
                                "name": "Studio",
                              },
                            },
                          ],
                          "mediaType": "application/json",
                          "schema": Object {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "properties": Object {
                              "completed": Object {
                                "type": Array [
                                  "boolean",
                                  "null",
                                ],
                              },
                              "name": Object {
                                "type": "string",
                              },
                            },
                            "required": Array [
                              "name",
                              "completed",
                            ],
                            "title": "Todo Partial",
                            "type": "object",
                            "x-tags": Array [
                              "Todos",
                            ],
                          },
                        },
                      ],
                    },
                    "headers": Array [
                      Object {
                        "name": "account-id",
                        "required": true,
                        "schema": Object {
                          "description": "Your Stoplight account id",
                          "type": "string",
                        },
                        "style": "simple",
                      },
                    ],
                    "path": Array [
                      Object {
                        "name": "todoId",
                        "required": true,
                        "schema": Object {
                          "type": "string",
                        },
                        "style": "simple",
                      },
                    ],
                    "query": Array [
                      Object {
                        "deprecated": true,
                        "description": "How many todos to limit?",
                        "name": "limit",
                        "schema": Object {
                          "default": "300",
                          "enum": Array [
                            0,
                            1,
                            3,
                          ],
                          "exclusiveMaximum": 10,
                          "exclusiveMinimum": 0,
                          "maxItems": 10,
                          "maximum": 10,
                          "minimum": 5,
                          "type": "string",
                        },
                        "style": "form",
                      },
                      Object {
                        "name": "completed",
                        "schema": Object {
                          "description": "Only return completed",
                          "type": "boolean",
                        },
                        "style": "form",
                      },
                      Object {
                        "name": "type",
                        "schema": Object {
                          "enum": Array [
                            "something",
                            "another",
                          ],
                          "type": "string",
                        },
                        "style": "form",
                      },
                    ],
                  },
                  "responses": Array [
                    Object {
                      "code": "200",
                      "contents": Array [
                        Object {
                          "examples": Array [
                            Object {
                              "key": "application/json",
                              "value": Object {
                                "completed": true,
                                "completed_at": null,
                                "created_at": "2014-08-28T14:14:28.494Z",
                                "id": 9000,
                                "name": "It's Over 9000!!!",
                                "updated_at": "2015-08-28T14:14:28.494Z",
                              },
                            },
                          ],
                          "mediaType": "application/json",
                          "schema": Object {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "allOf": Array [
                              Object {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "properties": Object {
                                  "completed": Object {
                                    "type": Array [
                                      "boolean",
                                      "null",
                                    ],
                                  },
                                  "name": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "name",
                                  "completed",
                                ],
                                "title": "Todo Partial",
                                "type": "object",
                                "x-tags": Array [
                                  "Todos",
                                ],
                              },
                              Object {
                                "properties": Object {
                                  "completed_at": Object {
                                    "format": "date-time",
                                    "type": Array [
                                      "string",
                                      "null",
                                    ],
                                  },
                                  "created_at": Object {
                                    "format": "date-time",
                                    "type": "string",
                                  },
                                  "id": Object {
                                    "maximum": 1000000,
                                    "minimum": 0,
                                    "type": "integer",
                                  },
                                  "updated_at": Object {
                                    "format": "date-time",
                                    "type": "string",
                                  },
                                  "user": Object {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "description": "Here lies the user model",
                                    "properties": Object {
                                      "age": Object {
                                        "maximum": 150,
                                        "minimum": 0,
                                        "type": "number",
                                      },
                                      "name": Object {
                                        "description": "The user's full name.",
                                        "type": "string",
                                      },
                                    },
                                    "required": Array [
                                      "name",
                                      "age",
                                    ],
                                    "title": "User",
                                    "type": "object",
                                    "x-tags": Array [
                                      "Todos",
                                    ],
                                  },
                                },
                                "required": Array [
                                  "id",
                                  "user",
                                ],
                                "type": "object",
                              },
                            ],
                            "title": "Todo Full",
                            "x-tags": Array [
                              "Todos",
                            ],
                          },
                        },
                      ],
                      "description": "",
                      "headers": Array [],
                    },
                    Object {
                      "code": "401",
                      "contents": Array [
                        Object {
                          "examples": Array [
                            Object {
                              "key": "application/json",
                              "value": Object {
                                "code": "401",
                                "message": "Not Authorized",
                              },
                            },
                          ],
                          "mediaType": "application/json",
                          "schema": Object {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "anyOf": Array [
                              Object {
                                "properties": Object {
                                  "code": Object {
                                    "type": "string",
                                  },
                                  "message": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "code",
                                ],
                                "type": "object",
                              },
                              Object {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "description": "",
                                "properties": Object {
                                  "name": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "name",
                                ],
                                "title": "Category",
                                "type": "object",
                                "x-tags": Array [
                                  "Pets",
                                ],
                              },
                            ],
                            "description": "A standard error object.",
                            "title": "Error",
                            "x-tags": Array [
                              "Common",
                            ],
                          },
                        },
                      ],
                      "description": "Our shared 401 response.",
                      "headers": Array [],
                    },
                    Object {
                      "code": "404",
                      "contents": Array [
                        Object {
                          "examples": Array [
                            Object {
                              "key": "application/json",
                              "value": Object {
                                "code": "404",
                                "message": "Not Found",
                              },
                            },
                          ],
                          "mediaType": "application/json",
                          "schema": Object {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "anyOf": Array [
                              Object {
                                "properties": Object {
                                  "code": Object {
                                    "type": "string",
                                  },
                                  "message": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "code",
                                ],
                                "type": "object",
                              },
                              Object {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "description": "",
                                "properties": Object {
                                  "name": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "name",
                                ],
                                "title": "Category",
                                "type": "object",
                                "x-tags": Array [
                                  "Pets",
                                ],
                              },
                            ],
                            "description": "A standard error object.",
                            "title": "Error",
                            "x-tags": Array [
                              "Common",
                            ],
                          },
                        },
                      ],
                      "description": "Our shared 404 response.",
                      "headers": Array [],
                    },
                    Object {
                      "code": "500",
                      "contents": Array [
                        Object {
                          "examples": Array [
                            Object {
                              "key": "application/json",
                              "value": Object {
                                "code": "500",
                                "message": "Server Error",
                              },
                            },
                          ],
                          "mediaType": "application/json",
                          "schema": Object {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "anyOf": Array [
                              Object {
                                "properties": Object {
                                  "code": Object {
                                    "type": "string",
                                  },
                                  "message": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "code",
                                ],
                                "type": "object",
                              },
                              Object {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "description": "",
                                "properties": Object {
                                  "name": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "name",
                                ],
                                "title": "Category",
                                "type": "object",
                                "x-tags": Array [
                                  "Pets",
                                ],
                              },
                            ],
                            "description": "A standard error object.",
                            "title": "Error",
                            "x-tags": Array [
                              "Common",
                            ],
                          },
                        },
                      ],
                      "description": "Our shared 500 response.",
                      "headers": Array [],
                    },
                  ],
                  "security": Array [
                    Array [
                      Object {
                        "description": "Use \`?apikey=123\` to authenticate requests. It's super secure.",
                        "in": "query",
                        "key": "api_key",
                        "name": "API Key",
                        "type": "apiKey",
                      },
                    ],
                    Array [
                      Object {
                        "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                        "key": "basicKey",
                        "scheme": "basic",
                        "type": "http",
                      },
                    ],
                    Array [
                      Object {
                        "bearerFormat": "Authorization",
                        "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                        "key": "bearerKey",
                        "scheme": "bearer",
                        "type": "http",
                      },
                    ],
                    Array [
                      Object {
                        "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                        "key": "openIdConnectKey",
                        "openIdConnectUrl": "http://openIdConnect.com",
                        "type": "openIdConnect",
                      },
                    ],
                    Array [
                      Object {
                        "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                        "flows": Object {
                          "authorizationCode": Object {
                            "authorizationUrl": "http://authorizationUrl.com",
                            "refreshUrl": "http://refreshUrl.com",
                            "scopes": Object {
                              "read:pets": "read your pets",
                              "write:pets": "modify pets in your account",
                            },
                            "tokenUrl": "http://tokenUrl.com",
                          },
                          "clientCredentials": Object {
                            "refreshUrl": "http://refreshUrl.com",
                            "scopes": Object {
                              "read:pets": "read your pets",
                              "write:pets": "modify pets in your account",
                            },
                            "tokenUrl": "http://tokenUrl.com",
                          },
                          "implicit": Object {
                            "authorizationUrl": "http://authorizationUrl.com",
                            "refreshUrl": "http://refreshUrl.com",
                            "scopes": Object {
                              "read:pets": "read your pets",
                              "write:pets": "modify pets in your account",
                            },
                          },
                          "password": Object {
                            "refreshUrl": "http://refreshUrl.com",
                            "scopes": Object {
                              "read:pets": "read your pets",
                              "write:pets": "modify pets in your account",
                            },
                            "tokenUrl": "http://tokenUrl.com",
                          },
                        },
                        "key": "oauth2Key",
                        "type": "oauth2",
                      },
                    ],
                  ],
                  "servers": Array [
                    Object {
                      "url": "http://todos.stoplight.io",
                    },
                  ],
                  "summary": "Update Todo",
                  "tags": Array [
                    Object {
                      "name": "Todos",
                    },
                  ],
                },
                "id": 1,
                "name": "Put Todos",
                "srn": "sl/org/project",
                "type": "http_operation",
              }
            }
          >
            <div
              className="Page__header px-12 pt-12"
            >
              <div
                className="flex items-center"
              >
                <Component
                  className="mr-5"
                  method="put"
                >
                  <span
                    className="HttpOperation__Method flex h-8 items-center mr-6 px-3 rounded text-white uppercase bg-warning dark:bg-warning mr-5"
                  >
                    put
                  </span>
                </Component>
                <h2
                  className="font-medium text-2xl flex-1"
                >
                  Put Todos
                </h2>
              </div>
              <Component
                className="flex-1 mt-5 mb-1"
                host="http://todos.stoplight.io"
                path="/todos/{todoId}"
              >
                <div
                  className="HttpOperation__Path flex-1 mt-5 mb-1 inline-flex items-center bg-darken-2 py-2 px-3 rounded select-all"
                >
                  <div
                    className="text-darken-7 dark:text-gray-6 mr-1"
                  >
                    http://todos.stoplight.io
                  </div>
                  <div
                    className="font-semibold"
                  >
                    /todos/{todoId}
                  </div>
                </div>
              </Component>
            </div>
          </PageHeaderComponent>
        </PageHeader>
        <Component
          node={
            Object {
              "data": Object {
                "id": "?http-operation-id?",
                "iid": "PUT_todos",
                "method": "put",
                "path": "/todos/{todoId}",
                "request": Object {
                  "body": Object {
                    "contents": Array [
                      Object {
                        "examples": Array [
                          Object {
                            "key": "Incomplete",
                            "value": Object {
                              "completed": false,
                              "name": "Docs Module",
                            },
                          },
                          Object {
                            "key": "Completed",
                            "value": Object {
                              "completed": true,
                              "name": "Studio",
                            },
                          },
                        ],
                        "mediaType": "application/json",
                        "schema": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "properties": Object {
                            "completed": Object {
                              "type": Array [
                                "boolean",
                                "null",
                              ],
                            },
                            "name": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "name",
                            "completed",
                          ],
                          "title": "Todo Partial",
                          "type": "object",
                          "x-tags": Array [
                            "Todos",
                          ],
                        },
                      },
                    ],
                  },
                  "headers": Array [
                    Object {
                      "name": "account-id",
                      "required": true,
                      "schema": Object {
                        "description": "Your Stoplight account id",
                        "type": "string",
                      },
                      "style": "simple",
                    },
                  ],
                  "path": Array [
                    Object {
                      "name": "todoId",
                      "required": true,
                      "schema": Object {
                        "type": "string",
                      },
                      "style": "simple",
                    },
                  ],
                  "query": Array [
                    Object {
                      "deprecated": true,
                      "description": "How many todos to limit?",
                      "name": "limit",
                      "schema": Object {
                        "default": "300",
                        "enum": Array [
                          0,
                          1,
                          3,
                        ],
                        "exclusiveMaximum": 10,
                        "exclusiveMinimum": 0,
                        "maxItems": 10,
                        "maximum": 10,
                        "minimum": 5,
                        "type": "string",
                      },
                      "style": "form",
                    },
                    Object {
                      "name": "completed",
                      "schema": Object {
                        "description": "Only return completed",
                        "type": "boolean",
                      },
                      "style": "form",
                    },
                    Object {
                      "name": "type",
                      "schema": Object {
                        "enum": Array [
                          "something",
                          "another",
                        ],
                        "type": "string",
                      },
                      "style": "form",
                    },
                  ],
                },
                "responses": Array [
                  Object {
                    "code": "200",
                    "contents": Array [
                      Object {
                        "examples": Array [
                          Object {
                            "key": "application/json",
                            "value": Object {
                              "completed": true,
                              "completed_at": null,
                              "created_at": "2014-08-28T14:14:28.494Z",
                              "id": 9000,
                              "name": "It's Over 9000!!!",
                              "updated_at": "2015-08-28T14:14:28.494Z",
                            },
                          },
                        ],
                        "mediaType": "application/json",
                        "schema": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "allOf": Array [
                            Object {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "properties": Object {
                                "completed": Object {
                                  "type": Array [
                                    "boolean",
                                    "null",
                                  ],
                                },
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                                "completed",
                              ],
                              "title": "Todo Partial",
                              "type": "object",
                              "x-tags": Array [
                                "Todos",
                              ],
                            },
                            Object {
                              "properties": Object {
                                "completed_at": Object {
                                  "format": "date-time",
                                  "type": Array [
                                    "string",
                                    "null",
                                  ],
                                },
                                "created_at": Object {
                                  "format": "date-time",
                                  "type": "string",
                                },
                                "id": Object {
                                  "maximum": 1000000,
                                  "minimum": 0,
                                  "type": "integer",
                                },
                                "updated_at": Object {
                                  "format": "date-time",
                                  "type": "string",
                                },
                                "user": Object {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "description": "Here lies the user model",
                                  "properties": Object {
                                    "age": Object {
                                      "maximum": 150,
                                      "minimum": 0,
                                      "type": "number",
                                    },
                                    "name": Object {
                                      "description": "The user's full name.",
                                      "type": "string",
                                    },
                                  },
                                  "required": Array [
                                    "name",
                                    "age",
                                  ],
                                  "title": "User",
                                  "type": "object",
                                  "x-tags": Array [
                                    "Todos",
                                  ],
                                },
                              },
                              "required": Array [
                                "id",
                                "user",
                              ],
                              "type": "object",
                            },
                          ],
                          "title": "Todo Full",
                          "x-tags": Array [
                            "Todos",
                          ],
                        },
                      },
                    ],
                    "description": "",
                    "headers": Array [],
                  },
                  Object {
                    "code": "401",
                    "contents": Array [
                      Object {
                        "examples": Array [
                          Object {
                            "key": "application/json",
                            "value": Object {
                              "code": "401",
                              "message": "Not Authorized",
                            },
                          },
                        ],
                        "mediaType": "application/json",
                        "schema": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "anyOf": Array [
                            Object {
                              "properties": Object {
                                "code": Object {
                                  "type": "string",
                                },
                                "message": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "code",
                              ],
                              "type": "object",
                            },
                            Object {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "description": "",
                              "properties": Object {
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                              ],
                              "title": "Category",
                              "type": "object",
                              "x-tags": Array [
                                "Pets",
                              ],
                            },
                          ],
                          "description": "A standard error object.",
                          "title": "Error",
                          "x-tags": Array [
                            "Common",
                          ],
                        },
                      },
                    ],
                    "description": "Our shared 401 response.",
                    "headers": Array [],
                  },
                  Object {
                    "code": "404",
                    "contents": Array [
                      Object {
                        "examples": Array [
                          Object {
                            "key": "application/json",
                            "value": Object {
                              "code": "404",
                              "message": "Not Found",
                            },
                          },
                        ],
                        "mediaType": "application/json",
                        "schema": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "anyOf": Array [
                            Object {
                              "properties": Object {
                                "code": Object {
                                  "type": "string",
                                },
                                "message": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "code",
                              ],
                              "type": "object",
                            },
                            Object {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "description": "",
                              "properties": Object {
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                              ],
                              "title": "Category",
                              "type": "object",
                              "x-tags": Array [
                                "Pets",
                              ],
                            },
                          ],
                          "description": "A standard error object.",
                          "title": "Error",
                          "x-tags": Array [
                            "Common",
                          ],
                        },
                      },
                    ],
                    "description": "Our shared 404 response.",
                    "headers": Array [],
                  },
                  Object {
                    "code": "500",
                    "contents": Array [
                      Object {
                        "examples": Array [
                          Object {
                            "key": "application/json",
                            "value": Object {
                              "code": "500",
                              "message": "Server Error",
                            },
                          },
                        ],
                        "mediaType": "application/json",
                        "schema": Object {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "anyOf": Array [
                            Object {
                              "properties": Object {
                                "code": Object {
                                  "type": "string",
                                },
                                "message": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "code",
                              ],
                              "type": "object",
                            },
                            Object {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "description": "",
                              "properties": Object {
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                              ],
                              "title": "Category",
                              "type": "object",
                              "x-tags": Array [
                                "Pets",
                              ],
                            },
                          ],
                          "description": "A standard error object.",
                          "title": "Error",
                          "x-tags": Array [
                            "Common",
                          ],
                        },
                      },
                    ],
                    "description": "Our shared 500 response.",
                    "headers": Array [],
                  },
                ],
                "security": Array [
                  Array [
                    Object {
                      "description": "Use \`?apikey=123\` to authenticate requests. It's super secure.",
                      "in": "query",
                      "key": "api_key",
                      "name": "API Key",
                      "type": "apiKey",
                    },
                  ],
                  Array [
                    Object {
                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                      "key": "basicKey",
                      "scheme": "basic",
                      "type": "http",
                    },
                  ],
                  Array [
                    Object {
                      "bearerFormat": "Authorization",
                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                      "key": "bearerKey",
                      "scheme": "bearer",
                      "type": "http",
                    },
                  ],
                  Array [
                    Object {
                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                      "key": "openIdConnectKey",
                      "openIdConnectUrl": "http://openIdConnect.com",
                      "type": "openIdConnect",
                    },
                  ],
                  Array [
                    Object {
                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                      "flows": Object {
                        "authorizationCode": Object {
                          "authorizationUrl": "http://authorizationUrl.com",
                          "refreshUrl": "http://refreshUrl.com",
                          "scopes": Object {
                            "read:pets": "read your pets",
                            "write:pets": "modify pets in your account",
                          },
                          "tokenUrl": "http://tokenUrl.com",
                        },
                        "clientCredentials": Object {
                          "refreshUrl": "http://refreshUrl.com",
                          "scopes": Object {
                            "read:pets": "read your pets",
                            "write:pets": "modify pets in your account",
                          },
                          "tokenUrl": "http://tokenUrl.com",
                        },
                        "implicit": Object {
                          "authorizationUrl": "http://authorizationUrl.com",
                          "refreshUrl": "http://refreshUrl.com",
                          "scopes": Object {
                            "read:pets": "read your pets",
                            "write:pets": "modify pets in your account",
                          },
                        },
                        "password": Object {
                          "refreshUrl": "http://refreshUrl.com",
                          "scopes": Object {
                            "read:pets": "read your pets",
                            "write:pets": "modify pets in your account",
                          },
                          "tokenUrl": "http://tokenUrl.com",
                        },
                      },
                      "key": "oauth2Key",
                      "type": "oauth2",
                    },
                  ],
                ],
                "servers": Array [
                  Object {
                    "url": "http://todos.stoplight.io",
                  },
                ],
                "summary": "Update Todo",
                "tags": Array [
                  Object {
                    "name": "Todos",
                  },
                ],
              },
              "id": 1,
              "name": "Put Todos",
              "srn": "sl/org/project",
              "type": "http_operation",
            }
          }
        >
          <div
            className="flex w-full Page__docs"
          >
            <MarkdownViewer
              className="Page__content flex-1 p-12"
              markdown={
                Object {
                  "children": Array [
                    Object {
                      "lang": "json",
                      "meta": "http_operation",
                      "type": "code",
                      "value": "{
    \\"id\\": \\"?http-operation-id?\\",
    \\"iid\\": \\"PUT_todos\\",
    \\"method\\": \\"put\\",
    \\"path\\": \\"/todos/{todoId}\\",
    \\"summary\\": \\"Update Todo\\",
    \\"responses\\": [
        {
            \\"code\\": \\"200\\",
            \\"description\\": \\"\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Full\\",
                        \\"allOf\\": [
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Todo Partial\\",
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"completed\\": {
                                        \\"type\\": [
                                            \\"boolean\\",
                                            \\"null\\"
                                        ]
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\",
                                    \\"completed\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Todos\\"
                                ]
                            },
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"id\\": {
                                        \\"type\\": \\"integer\\",
                                        \\"minimum\\": 0,
                                        \\"maximum\\": 1000000
                                    },
                                    \\"completed_at\\": {
                                        \\"type\\": [
                                            \\"string\\",
                                            \\"null\\"
                                        ],
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"created_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"updated_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"user\\": {
                                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                        \\"title\\": \\"User\\",
                                        \\"type\\": \\"object\\",
                                        \\"properties\\": {
                                            \\"name\\": {
                                                \\"type\\": \\"string\\",
                                                \\"description\\": \\"The user's full name.\\"
                                            },
                                            \\"age\\": {
                                                \\"type\\": \\"number\\",
                                                \\"minimum\\": 0,
                                                \\"maximum\\": 150
                                            }
                                        },
                                        \\"required\\": [
                                            \\"name\\",
                                            \\"age\\"
                                        ],
                                        \\"x-tags\\": [
                                            \\"Todos\\"
                                        ],
                                        \\"description\\": \\"Here lies the user model\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"id\\",
                                    \\"user\\"
                                ]
                            }
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"id\\": 9000,
                                \\"name\\": \\"It's Over 9000!!!\\",
                                \\"completed\\": true,
                                \\"completed_at\\": null,
                                \\"created_at\\": \\"2014-08-28T14:14:28.494Z\\",
                                \\"updated_at\\": \\"2015-08-28T14:14:28.494Z\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"401\\",
            \\"description\\": \\"Our shared 401 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"401\\",
                                \\"message\\": \\"Not Authorized\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"404\\",
            \\"description\\": \\"Our shared 404 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"404\\",
                                \\"message\\": \\"Not Found\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"500\\",
            \\"description\\": \\"Our shared 500 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"500\\",
                                \\"message\\": \\"Server Error\\"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    \\"servers\\": [
        {
            \\"url\\": \\"http://todos.stoplight.io\\"
        }
    ],
    \\"request\\": {
        \\"body\\": {
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Partial\\",
                        \\"type\\": \\"object\\",
                        \\"properties\\": {
                            \\"name\\": {
                                \\"type\\": \\"string\\"
                            },
                            \\"completed\\": {
                                \\"type\\": [
                                    \\"boolean\\",
                                    \\"null\\"
                                ]
                            }
                        },
                        \\"required\\": [
                            \\"name\\",
                            \\"completed\\"
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"Incomplete\\",
                            \\"value\\": {
                                \\"name\\": \\"Docs Module\\",
                                \\"completed\\": false
                            }
                        },
                        {
                            \\"key\\": \\"Completed\\",
                            \\"value\\": {
                                \\"name\\": \\"Studio\\",
                                \\"completed\\": true
                            }
                        }
                    ]
                }
            ]
        },
        \\"query\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"default\\": \\"300\\",
                    \\"enum\\": [
                        0,
                        1,
                        3
                    ],
                    \\"exclusiveMinimum\\": 0,
                    \\"exclusiveMaximum\\": 10,
                    \\"minimum\\": 5,
                    \\"maximum\\": 10,
                    \\"maxItems\\": 10
                },
                \\"deprecated\\": true,
                \\"description\\": \\"How many todos to limit?\\",
                \\"name\\": \\"limit\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Only return completed\\"
                },
                \\"name\\": \\"completed\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"enum\\": [
                        \\"something\\",
                        \\"another\\"
                    ]
                },
                \\"name\\": \\"type\\",
                \\"style\\": \\"form\\"
            }
        ],
        \\"headers\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Your Stoplight account id\\"
                },
                \\"name\\": \\"account-id\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ],
        \\"path\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\"
                },
                \\"name\\": \\"todoId\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ]
    },
    \\"tags\\": [
        {
            \\"name\\": \\"Todos\\"
        }
    ],
    \\"security\\": [
        [
            {
                \\"key\\": \\"api_key\\",
                \\"type\\": \\"apiKey\\",
                \\"name\\": \\"API Key\\",
                \\"in\\": \\"query\\",
                \\"description\\": \\"Use \`?apikey=123\` to authenticate requests. It's super secure.\\"
            }
        ],
        [
            {
                \\"key\\": \\"basicKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"basic\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\"
            }
        ],
        [
            {
                \\"key\\": \\"bearerKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"bearer\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"bearerFormat\\": \\"Authorization\\"
            }
        ],
        [
            {
                \\"key\\": \\"openIdConnectKey\\",
                \\"type\\": \\"openIdConnect\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"openIdConnectUrl\\": \\"http://openIdConnect.com\\"
            }
        ],
        [
            {
                \\"key\\": \\"oauth2Key\\",
                \\"type\\": \\"oauth2\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"flows\\": {
                    \\"implicit\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    },
                    \\"password\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"clientCredentials\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"authorizationCode\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    }
                }
            }
        ]
    ]
}",
                    },
                  ],
                  "type": "root",
                }
              }
            >
              <MarkdownViewer
                className="Page__content flex-1 p-12"
                components={
                  Object {
                    "code": [Function],
                  }
                }
                markdown={
                  Object {
                    "children": Array [
                      Object {
                        "lang": "json",
                        "meta": "http_operation",
                        "type": "code",
                        "value": "{
    \\"id\\": \\"?http-operation-id?\\",
    \\"iid\\": \\"PUT_todos\\",
    \\"method\\": \\"put\\",
    \\"path\\": \\"/todos/{todoId}\\",
    \\"summary\\": \\"Update Todo\\",
    \\"responses\\": [
        {
            \\"code\\": \\"200\\",
            \\"description\\": \\"\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Full\\",
                        \\"allOf\\": [
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Todo Partial\\",
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"completed\\": {
                                        \\"type\\": [
                                            \\"boolean\\",
                                            \\"null\\"
                                        ]
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\",
                                    \\"completed\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Todos\\"
                                ]
                            },
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"id\\": {
                                        \\"type\\": \\"integer\\",
                                        \\"minimum\\": 0,
                                        \\"maximum\\": 1000000
                                    },
                                    \\"completed_at\\": {
                                        \\"type\\": [
                                            \\"string\\",
                                            \\"null\\"
                                        ],
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"created_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"updated_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"user\\": {
                                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                        \\"title\\": \\"User\\",
                                        \\"type\\": \\"object\\",
                                        \\"properties\\": {
                                            \\"name\\": {
                                                \\"type\\": \\"string\\",
                                                \\"description\\": \\"The user's full name.\\"
                                            },
                                            \\"age\\": {
                                                \\"type\\": \\"number\\",
                                                \\"minimum\\": 0,
                                                \\"maximum\\": 150
                                            }
                                        },
                                        \\"required\\": [
                                            \\"name\\",
                                            \\"age\\"
                                        ],
                                        \\"x-tags\\": [
                                            \\"Todos\\"
                                        ],
                                        \\"description\\": \\"Here lies the user model\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"id\\",
                                    \\"user\\"
                                ]
                            }
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"id\\": 9000,
                                \\"name\\": \\"It's Over 9000!!!\\",
                                \\"completed\\": true,
                                \\"completed_at\\": null,
                                \\"created_at\\": \\"2014-08-28T14:14:28.494Z\\",
                                \\"updated_at\\": \\"2015-08-28T14:14:28.494Z\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"401\\",
            \\"description\\": \\"Our shared 401 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"401\\",
                                \\"message\\": \\"Not Authorized\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"404\\",
            \\"description\\": \\"Our shared 404 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"404\\",
                                \\"message\\": \\"Not Found\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"500\\",
            \\"description\\": \\"Our shared 500 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"500\\",
                                \\"message\\": \\"Server Error\\"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    \\"servers\\": [
        {
            \\"url\\": \\"http://todos.stoplight.io\\"
        }
    ],
    \\"request\\": {
        \\"body\\": {
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Partial\\",
                        \\"type\\": \\"object\\",
                        \\"properties\\": {
                            \\"name\\": {
                                \\"type\\": \\"string\\"
                            },
                            \\"completed\\": {
                                \\"type\\": [
                                    \\"boolean\\",
                                    \\"null\\"
                                ]
                            }
                        },
                        \\"required\\": [
                            \\"name\\",
                            \\"completed\\"
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"Incomplete\\",
                            \\"value\\": {
                                \\"name\\": \\"Docs Module\\",
                                \\"completed\\": false
                            }
                        },
                        {
                            \\"key\\": \\"Completed\\",
                            \\"value\\": {
                                \\"name\\": \\"Studio\\",
                                \\"completed\\": true
                            }
                        }
                    ]
                }
            ]
        },
        \\"query\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"default\\": \\"300\\",
                    \\"enum\\": [
                        0,
                        1,
                        3
                    ],
                    \\"exclusiveMinimum\\": 0,
                    \\"exclusiveMaximum\\": 10,
                    \\"minimum\\": 5,
                    \\"maximum\\": 10,
                    \\"maxItems\\": 10
                },
                \\"deprecated\\": true,
                \\"description\\": \\"How many todos to limit?\\",
                \\"name\\": \\"limit\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Only return completed\\"
                },
                \\"name\\": \\"completed\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"enum\\": [
                        \\"something\\",
                        \\"another\\"
                    ]
                },
                \\"name\\": \\"type\\",
                \\"style\\": \\"form\\"
            }
        ],
        \\"headers\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Your Stoplight account id\\"
                },
                \\"name\\": \\"account-id\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ],
        \\"path\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\"
                },
                \\"name\\": \\"todoId\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ]
    },
    \\"tags\\": [
        {
            \\"name\\": \\"Todos\\"
        }
    ],
    \\"security\\": [
        [
            {
                \\"key\\": \\"api_key\\",
                \\"type\\": \\"apiKey\\",
                \\"name\\": \\"API Key\\",
                \\"in\\": \\"query\\",
                \\"description\\": \\"Use \`?apikey=123\` to authenticate requests. It's super secure.\\"
            }
        ],
        [
            {
                \\"key\\": \\"basicKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"basic\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\"
            }
        ],
        [
            {
                \\"key\\": \\"bearerKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"bearer\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"bearerFormat\\": \\"Authorization\\"
            }
        ],
        [
            {
                \\"key\\": \\"openIdConnectKey\\",
                \\"type\\": \\"openIdConnect\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"openIdConnectUrl\\": \\"http://openIdConnect.com\\"
            }
        ],
        [
            {
                \\"key\\": \\"oauth2Key\\",
                \\"type\\": \\"oauth2\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"flows\\": {
                    \\"implicit\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    },
                    \\"password\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"clientCredentials\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"authorizationCode\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    }
                }
            }
        ]
    ]
}",
                      },
                    ],
                    "type": "root",
                  }
                }
              >
                <ErrorBoundary
                  FallbackComponent={[Function]}
                >
                  <MarkdownViewer.Component
                    className="Page__content flex-1 p-12"
                    components={
                      Object {
                        "code": [Function],
                      }
                    }
                    markdown={
                      Object {
                        "children": Array [
                          Object {
                            "lang": "json",
                            "meta": "http_operation",
                            "type": "code",
                            "value": "{
    \\"id\\": \\"?http-operation-id?\\",
    \\"iid\\": \\"PUT_todos\\",
    \\"method\\": \\"put\\",
    \\"path\\": \\"/todos/{todoId}\\",
    \\"summary\\": \\"Update Todo\\",
    \\"responses\\": [
        {
            \\"code\\": \\"200\\",
            \\"description\\": \\"\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Full\\",
                        \\"allOf\\": [
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Todo Partial\\",
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"completed\\": {
                                        \\"type\\": [
                                            \\"boolean\\",
                                            \\"null\\"
                                        ]
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\",
                                    \\"completed\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Todos\\"
                                ]
                            },
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"id\\": {
                                        \\"type\\": \\"integer\\",
                                        \\"minimum\\": 0,
                                        \\"maximum\\": 1000000
                                    },
                                    \\"completed_at\\": {
                                        \\"type\\": [
                                            \\"string\\",
                                            \\"null\\"
                                        ],
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"created_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"updated_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"user\\": {
                                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                        \\"title\\": \\"User\\",
                                        \\"type\\": \\"object\\",
                                        \\"properties\\": {
                                            \\"name\\": {
                                                \\"type\\": \\"string\\",
                                                \\"description\\": \\"The user's full name.\\"
                                            },
                                            \\"age\\": {
                                                \\"type\\": \\"number\\",
                                                \\"minimum\\": 0,
                                                \\"maximum\\": 150
                                            }
                                        },
                                        \\"required\\": [
                                            \\"name\\",
                                            \\"age\\"
                                        ],
                                        \\"x-tags\\": [
                                            \\"Todos\\"
                                        ],
                                        \\"description\\": \\"Here lies the user model\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"id\\",
                                    \\"user\\"
                                ]
                            }
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"id\\": 9000,
                                \\"name\\": \\"It's Over 9000!!!\\",
                                \\"completed\\": true,
                                \\"completed_at\\": null,
                                \\"created_at\\": \\"2014-08-28T14:14:28.494Z\\",
                                \\"updated_at\\": \\"2015-08-28T14:14:28.494Z\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"401\\",
            \\"description\\": \\"Our shared 401 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"401\\",
                                \\"message\\": \\"Not Authorized\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"404\\",
            \\"description\\": \\"Our shared 404 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"404\\",
                                \\"message\\": \\"Not Found\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"500\\",
            \\"description\\": \\"Our shared 500 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"500\\",
                                \\"message\\": \\"Server Error\\"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    \\"servers\\": [
        {
            \\"url\\": \\"http://todos.stoplight.io\\"
        }
    ],
    \\"request\\": {
        \\"body\\": {
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Partial\\",
                        \\"type\\": \\"object\\",
                        \\"properties\\": {
                            \\"name\\": {
                                \\"type\\": \\"string\\"
                            },
                            \\"completed\\": {
                                \\"type\\": [
                                    \\"boolean\\",
                                    \\"null\\"
                                ]
                            }
                        },
                        \\"required\\": [
                            \\"name\\",
                            \\"completed\\"
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"Incomplete\\",
                            \\"value\\": {
                                \\"name\\": \\"Docs Module\\",
                                \\"completed\\": false
                            }
                        },
                        {
                            \\"key\\": \\"Completed\\",
                            \\"value\\": {
                                \\"name\\": \\"Studio\\",
                                \\"completed\\": true
                            }
                        }
                    ]
                }
            ]
        },
        \\"query\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"default\\": \\"300\\",
                    \\"enum\\": [
                        0,
                        1,
                        3
                    ],
                    \\"exclusiveMinimum\\": 0,
                    \\"exclusiveMaximum\\": 10,
                    \\"minimum\\": 5,
                    \\"maximum\\": 10,
                    \\"maxItems\\": 10
                },
                \\"deprecated\\": true,
                \\"description\\": \\"How many todos to limit?\\",
                \\"name\\": \\"limit\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Only return completed\\"
                },
                \\"name\\": \\"completed\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"enum\\": [
                        \\"something\\",
                        \\"another\\"
                    ]
                },
                \\"name\\": \\"type\\",
                \\"style\\": \\"form\\"
            }
        ],
        \\"headers\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Your Stoplight account id\\"
                },
                \\"name\\": \\"account-id\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ],
        \\"path\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\"
                },
                \\"name\\": \\"todoId\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ]
    },
    \\"tags\\": [
        {
            \\"name\\": \\"Todos\\"
        }
    ],
    \\"security\\": [
        [
            {
                \\"key\\": \\"api_key\\",
                \\"type\\": \\"apiKey\\",
                \\"name\\": \\"API Key\\",
                \\"in\\": \\"query\\",
                \\"description\\": \\"Use \`?apikey=123\` to authenticate requests. It's super secure.\\"
            }
        ],
        [
            {
                \\"key\\": \\"basicKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"basic\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\"
            }
        ],
        [
            {
                \\"key\\": \\"bearerKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"bearer\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"bearerFormat\\": \\"Authorization\\"
            }
        ],
        [
            {
                \\"key\\": \\"openIdConnectKey\\",
                \\"type\\": \\"openIdConnect\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"openIdConnectUrl\\": \\"http://openIdConnect.com\\"
            }
        ],
        [
            {
                \\"key\\": \\"oauth2Key\\",
                \\"type\\": \\"oauth2\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"flows\\": {
                    \\"implicit\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    },
                    \\"password\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"clientCredentials\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"authorizationCode\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    }
                }
            }
        ]
    ]
}",
                          },
                        ],
                        "type": "root",
                      }
                    }
                  >
                    <div
                      className="MarkdownViewer Page__content flex-1 p-12"
                    >
                      <HttpOperation
                        key="0"
                        value="{
    \\"id\\": \\"?http-operation-id?\\",
    \\"iid\\": \\"PUT_todos\\",
    \\"method\\": \\"put\\",
    \\"path\\": \\"/todos/{todoId}\\",
    \\"summary\\": \\"Update Todo\\",
    \\"responses\\": [
        {
            \\"code\\": \\"200\\",
            \\"description\\": \\"\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Full\\",
                        \\"allOf\\": [
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Todo Partial\\",
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"completed\\": {
                                        \\"type\\": [
                                            \\"boolean\\",
                                            \\"null\\"
                                        ]
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\",
                                    \\"completed\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Todos\\"
                                ]
                            },
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"id\\": {
                                        \\"type\\": \\"integer\\",
                                        \\"minimum\\": 0,
                                        \\"maximum\\": 1000000
                                    },
                                    \\"completed_at\\": {
                                        \\"type\\": [
                                            \\"string\\",
                                            \\"null\\"
                                        ],
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"created_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"updated_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"user\\": {
                                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                        \\"title\\": \\"User\\",
                                        \\"type\\": \\"object\\",
                                        \\"properties\\": {
                                            \\"name\\": {
                                                \\"type\\": \\"string\\",
                                                \\"description\\": \\"The user's full name.\\"
                                            },
                                            \\"age\\": {
                                                \\"type\\": \\"number\\",
                                                \\"minimum\\": 0,
                                                \\"maximum\\": 150
                                            }
                                        },
                                        \\"required\\": [
                                            \\"name\\",
                                            \\"age\\"
                                        ],
                                        \\"x-tags\\": [
                                            \\"Todos\\"
                                        ],
                                        \\"description\\": \\"Here lies the user model\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"id\\",
                                    \\"user\\"
                                ]
                            }
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"id\\": 9000,
                                \\"name\\": \\"It's Over 9000!!!\\",
                                \\"completed\\": true,
                                \\"completed_at\\": null,
                                \\"created_at\\": \\"2014-08-28T14:14:28.494Z\\",
                                \\"updated_at\\": \\"2015-08-28T14:14:28.494Z\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"401\\",
            \\"description\\": \\"Our shared 401 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"401\\",
                                \\"message\\": \\"Not Authorized\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"404\\",
            \\"description\\": \\"Our shared 404 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"404\\",
                                \\"message\\": \\"Not Found\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"500\\",
            \\"description\\": \\"Our shared 500 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"500\\",
                                \\"message\\": \\"Server Error\\"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    \\"servers\\": [
        {
            \\"url\\": \\"http://todos.stoplight.io\\"
        }
    ],
    \\"request\\": {
        \\"body\\": {
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Partial\\",
                        \\"type\\": \\"object\\",
                        \\"properties\\": {
                            \\"name\\": {
                                \\"type\\": \\"string\\"
                            },
                            \\"completed\\": {
                                \\"type\\": [
                                    \\"boolean\\",
                                    \\"null\\"
                                ]
                            }
                        },
                        \\"required\\": [
                            \\"name\\",
                            \\"completed\\"
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"Incomplete\\",
                            \\"value\\": {
                                \\"name\\": \\"Docs Module\\",
                                \\"completed\\": false
                            }
                        },
                        {
                            \\"key\\": \\"Completed\\",
                            \\"value\\": {
                                \\"name\\": \\"Studio\\",
                                \\"completed\\": true
                            }
                        }
                    ]
                }
            ]
        },
        \\"query\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"default\\": \\"300\\",
                    \\"enum\\": [
                        0,
                        1,
                        3
                    ],
                    \\"exclusiveMinimum\\": 0,
                    \\"exclusiveMaximum\\": 10,
                    \\"minimum\\": 5,
                    \\"maximum\\": 10,
                    \\"maxItems\\": 10
                },
                \\"deprecated\\": true,
                \\"description\\": \\"How many todos to limit?\\",
                \\"name\\": \\"limit\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Only return completed\\"
                },
                \\"name\\": \\"completed\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"enum\\": [
                        \\"something\\",
                        \\"another\\"
                    ]
                },
                \\"name\\": \\"type\\",
                \\"style\\": \\"form\\"
            }
        ],
        \\"headers\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Your Stoplight account id\\"
                },
                \\"name\\": \\"account-id\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ],
        \\"path\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\"
                },
                \\"name\\": \\"todoId\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ]
    },
    \\"tags\\": [
        {
            \\"name\\": \\"Todos\\"
        }
    ],
    \\"security\\": [
        [
            {
                \\"key\\": \\"api_key\\",
                \\"type\\": \\"apiKey\\",
                \\"name\\": \\"API Key\\",
                \\"in\\": \\"query\\",
                \\"description\\": \\"Use \`?apikey=123\` to authenticate requests. It's super secure.\\"
            }
        ],
        [
            {
                \\"key\\": \\"basicKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"basic\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\"
            }
        ],
        [
            {
                \\"key\\": \\"bearerKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"bearer\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"bearerFormat\\": \\"Authorization\\"
            }
        ],
        [
            {
                \\"key\\": \\"openIdConnectKey\\",
                \\"type\\": \\"openIdConnect\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"openIdConnectUrl\\": \\"http://openIdConnect.com\\"
            }
        ],
        [
            {
                \\"key\\": \\"oauth2Key\\",
                \\"type\\": \\"oauth2\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"flows\\": {
                    \\"implicit\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    },
                    \\"password\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"clientCredentials\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"authorizationCode\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    }
                }
            }
        ]
    ]
}"
                      >
                        <HttpOperation.Component
                          value="{
    \\"id\\": \\"?http-operation-id?\\",
    \\"iid\\": \\"PUT_todos\\",
    \\"method\\": \\"put\\",
    \\"path\\": \\"/todos/{todoId}\\",
    \\"summary\\": \\"Update Todo\\",
    \\"responses\\": [
        {
            \\"code\\": \\"200\\",
            \\"description\\": \\"\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Full\\",
                        \\"allOf\\": [
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Todo Partial\\",
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"completed\\": {
                                        \\"type\\": [
                                            \\"boolean\\",
                                            \\"null\\"
                                        ]
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\",
                                    \\"completed\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Todos\\"
                                ]
                            },
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"id\\": {
                                        \\"type\\": \\"integer\\",
                                        \\"minimum\\": 0,
                                        \\"maximum\\": 1000000
                                    },
                                    \\"completed_at\\": {
                                        \\"type\\": [
                                            \\"string\\",
                                            \\"null\\"
                                        ],
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"created_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"updated_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"user\\": {
                                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                        \\"title\\": \\"User\\",
                                        \\"type\\": \\"object\\",
                                        \\"properties\\": {
                                            \\"name\\": {
                                                \\"type\\": \\"string\\",
                                                \\"description\\": \\"The user's full name.\\"
                                            },
                                            \\"age\\": {
                                                \\"type\\": \\"number\\",
                                                \\"minimum\\": 0,
                                                \\"maximum\\": 150
                                            }
                                        },
                                        \\"required\\": [
                                            \\"name\\",
                                            \\"age\\"
                                        ],
                                        \\"x-tags\\": [
                                            \\"Todos\\"
                                        ],
                                        \\"description\\": \\"Here lies the user model\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"id\\",
                                    \\"user\\"
                                ]
                            }
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"id\\": 9000,
                                \\"name\\": \\"It's Over 9000!!!\\",
                                \\"completed\\": true,
                                \\"completed_at\\": null,
                                \\"created_at\\": \\"2014-08-28T14:14:28.494Z\\",
                                \\"updated_at\\": \\"2015-08-28T14:14:28.494Z\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"401\\",
            \\"description\\": \\"Our shared 401 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"401\\",
                                \\"message\\": \\"Not Authorized\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"404\\",
            \\"description\\": \\"Our shared 404 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"404\\",
                                \\"message\\": \\"Not Found\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"500\\",
            \\"description\\": \\"Our shared 500 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"500\\",
                                \\"message\\": \\"Server Error\\"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    \\"servers\\": [
        {
            \\"url\\": \\"http://todos.stoplight.io\\"
        }
    ],
    \\"request\\": {
        \\"body\\": {
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Partial\\",
                        \\"type\\": \\"object\\",
                        \\"properties\\": {
                            \\"name\\": {
                                \\"type\\": \\"string\\"
                            },
                            \\"completed\\": {
                                \\"type\\": [
                                    \\"boolean\\",
                                    \\"null\\"
                                ]
                            }
                        },
                        \\"required\\": [
                            \\"name\\",
                            \\"completed\\"
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"Incomplete\\",
                            \\"value\\": {
                                \\"name\\": \\"Docs Module\\",
                                \\"completed\\": false
                            }
                        },
                        {
                            \\"key\\": \\"Completed\\",
                            \\"value\\": {
                                \\"name\\": \\"Studio\\",
                                \\"completed\\": true
                            }
                        }
                    ]
                }
            ]
        },
        \\"query\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"default\\": \\"300\\",
                    \\"enum\\": [
                        0,
                        1,
                        3
                    ],
                    \\"exclusiveMinimum\\": 0,
                    \\"exclusiveMaximum\\": 10,
                    \\"minimum\\": 5,
                    \\"maximum\\": 10,
                    \\"maxItems\\": 10
                },
                \\"deprecated\\": true,
                \\"description\\": \\"How many todos to limit?\\",
                \\"name\\": \\"limit\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Only return completed\\"
                },
                \\"name\\": \\"completed\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"enum\\": [
                        \\"something\\",
                        \\"another\\"
                    ]
                },
                \\"name\\": \\"type\\",
                \\"style\\": \\"form\\"
            }
        ],
        \\"headers\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Your Stoplight account id\\"
                },
                \\"name\\": \\"account-id\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ],
        \\"path\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\"
                },
                \\"name\\": \\"todoId\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ]
    },
    \\"tags\\": [
        {
            \\"name\\": \\"Todos\\"
        }
    ],
    \\"security\\": [
        [
            {
                \\"key\\": \\"api_key\\",
                \\"type\\": \\"apiKey\\",
                \\"name\\": \\"API Key\\",
                \\"in\\": \\"query\\",
                \\"description\\": \\"Use \`?apikey=123\` to authenticate requests. It's super secure.\\"
            }
        ],
        [
            {
                \\"key\\": \\"basicKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"basic\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\"
            }
        ],
        [
            {
                \\"key\\": \\"bearerKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"bearer\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"bearerFormat\\": \\"Authorization\\"
            }
        ],
        [
            {
                \\"key\\": \\"openIdConnectKey\\",
                \\"type\\": \\"openIdConnect\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"openIdConnectUrl\\": \\"http://openIdConnect.com\\"
            }
        ],
        [
            {
                \\"key\\": \\"oauth2Key\\",
                \\"type\\": \\"oauth2\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"flows\\": {
                    \\"implicit\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    },
                    \\"password\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"clientCredentials\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"authorizationCode\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    }
                }
            }
        ]
    ]
}"
                        >
                          <div
                            className="HttpOperation"
                          >
                            <HttpOperation.Request
                              request={
                                Object {
                                  "body": Object {
                                    "contents": Array [
                                      Object {
                                        "examples": Array [
                                          Object {
                                            "key": "Incomplete",
                                            "value": Object {
                                              "completed": false,
                                              "name": "Docs Module",
                                            },
                                          },
                                          Object {
                                            "key": "Completed",
                                            "value": Object {
                                              "completed": true,
                                              "name": "Studio",
                                            },
                                          },
                                        ],
                                        "mediaType": "application/json",
                                        "schema": Object {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "properties": Object {
                                            "completed": Object {
                                              "type": Array [
                                                "boolean",
                                                "null",
                                              ],
                                            },
                                            "name": Object {
                                              "type": "string",
                                            },
                                          },
                                          "required": Array [
                                            "name",
                                            "completed",
                                          ],
                                          "title": "Todo Partial",
                                          "type": "object",
                                          "x-tags": Array [
                                            "Todos",
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "headers": Array [
                                    Object {
                                      "name": "account-id",
                                      "required": true,
                                      "schema": Object {
                                        "description": "Your Stoplight account id",
                                        "type": "string",
                                      },
                                      "style": "simple",
                                    },
                                  ],
                                  "path": Array [
                                    Object {
                                      "name": "todoId",
                                      "required": true,
                                      "schema": Object {
                                        "type": "string",
                                      },
                                      "style": "simple",
                                    },
                                  ],
                                  "query": Array [
                                    Object {
                                      "deprecated": true,
                                      "description": "How many todos to limit?",
                                      "name": "limit",
                                      "schema": Object {
                                        "default": "300",
                                        "enum": Array [
                                          0,
                                          1,
                                          3,
                                        ],
                                        "exclusiveMaximum": 10,
                                        "exclusiveMinimum": 0,
                                        "maxItems": 10,
                                        "maximum": 10,
                                        "minimum": 5,
                                        "type": "string",
                                      },
                                      "style": "form",
                                    },
                                    Object {
                                      "name": "completed",
                                      "schema": Object {
                                        "description": "Only return completed",
                                        "type": "boolean",
                                      },
                                      "style": "form",
                                    },
                                    Object {
                                      "name": "type",
                                      "schema": Object {
                                        "enum": Array [
                                          "something",
                                          "another",
                                        ],
                                        "type": "string",
                                      },
                                      "style": "form",
                                    },
                                  ],
                                }
                              }
                              security={
                                Array [
                                  Array [
                                    Object {
                                      "description": "Use \`?apikey=123\` to authenticate requests. It's super secure.",
                                      "in": "query",
                                      "key": "api_key",
                                      "name": "API Key",
                                      "type": "apiKey",
                                    },
                                  ],
                                  Array [
                                    Object {
                                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                      "key": "basicKey",
                                      "scheme": "basic",
                                      "type": "http",
                                    },
                                  ],
                                  Array [
                                    Object {
                                      "bearerFormat": "Authorization",
                                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                      "key": "bearerKey",
                                      "scheme": "bearer",
                                      "type": "http",
                                    },
                                  ],
                                  Array [
                                    Object {
                                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                      "key": "openIdConnectKey",
                                      "openIdConnectUrl": "http://openIdConnect.com",
                                      "type": "openIdConnect",
                                    },
                                  ],
                                  Array [
                                    Object {
                                      "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                      "flows": Object {
                                        "authorizationCode": Object {
                                          "authorizationUrl": "http://authorizationUrl.com",
                                          "refreshUrl": "http://refreshUrl.com",
                                          "scopes": Object {
                                            "read:pets": "read your pets",
                                            "write:pets": "modify pets in your account",
                                          },
                                          "tokenUrl": "http://tokenUrl.com",
                                        },
                                        "clientCredentials": Object {
                                          "refreshUrl": "http://refreshUrl.com",
                                          "scopes": Object {
                                            "read:pets": "read your pets",
                                            "write:pets": "modify pets in your account",
                                          },
                                          "tokenUrl": "http://tokenUrl.com",
                                        },
                                        "implicit": Object {
                                          "authorizationUrl": "http://authorizationUrl.com",
                                          "refreshUrl": "http://refreshUrl.com",
                                          "scopes": Object {
                                            "read:pets": "read your pets",
                                            "write:pets": "modify pets in your account",
                                          },
                                        },
                                        "password": Object {
                                          "refreshUrl": "http://refreshUrl.com",
                                          "scopes": Object {
                                            "read:pets": "read your pets",
                                            "write:pets": "modify pets in your account",
                                          },
                                          "tokenUrl": "http://tokenUrl.com",
                                        },
                                      },
                                      "key": "oauth2Key",
                                      "type": "oauth2",
                                    },
                                  ],
                                ]
                              }
                            >
                              <div
                                className="HttpOperation__Request"
                              >
                                <HttpSecuritySchemes
                                  className="mb-10"
                                  securities={
                                    Array [
                                      Object {
                                        "description": "Use \`?apikey=123\` to authenticate requests. It's super secure.",
                                        "in": "query",
                                        "key": "api_key",
                                        "name": "API Key",
                                        "type": "apiKey",
                                      },
                                      Object {
                                        "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                        "key": "basicKey",
                                        "scheme": "basic",
                                        "type": "http",
                                      },
                                      Object {
                                        "bearerFormat": "Authorization",
                                        "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                        "key": "bearerKey",
                                        "scheme": "bearer",
                                        "type": "http",
                                      },
                                      Object {
                                        "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                        "key": "openIdConnectKey",
                                        "openIdConnectUrl": "http://openIdConnect.com",
                                        "type": "openIdConnect",
                                      },
                                      Object {
                                        "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                        "flows": Object {
                                          "authorizationCode": Object {
                                            "authorizationUrl": "http://authorizationUrl.com",
                                            "refreshUrl": "http://refreshUrl.com",
                                            "scopes": Object {
                                              "read:pets": "read your pets",
                                              "write:pets": "modify pets in your account",
                                            },
                                            "tokenUrl": "http://tokenUrl.com",
                                          },
                                          "clientCredentials": Object {
                                            "refreshUrl": "http://refreshUrl.com",
                                            "scopes": Object {
                                              "read:pets": "read your pets",
                                              "write:pets": "modify pets in your account",
                                            },
                                            "tokenUrl": "http://tokenUrl.com",
                                          },
                                          "implicit": Object {
                                            "authorizationUrl": "http://authorizationUrl.com",
                                            "refreshUrl": "http://refreshUrl.com",
                                            "scopes": Object {
                                              "read:pets": "read your pets",
                                              "write:pets": "modify pets in your account",
                                            },
                                          },
                                          "password": Object {
                                            "refreshUrl": "http://refreshUrl.com",
                                            "scopes": Object {
                                              "read:pets": "read your pets",
                                              "write:pets": "modify pets in your account",
                                            },
                                            "tokenUrl": "http://tokenUrl.com",
                                          },
                                        },
                                        "key": "oauth2Key",
                                        "type": "oauth2",
                                      },
                                    ]
                                  }
                                  title="Authorization"
                                >
                                  <div
                                    className="HttpSecuritySchemes mb-10"
                                  >
                                    <div
                                      className="text-lg font-semibold"
                                    >
                                      Authorization
                                    </div>
                                    <div
                                      className="mt-6 border rounded TreeList dark:border-darken"
                                    >
                                      <HttpSecuritySchemes.SecurityScheme
                                        className="TreeListItem"
                                        key="0"
                                        security={
                                          Object {
                                            "description": "Use \`?apikey=123\` to authenticate requests. It's super secure.",
                                            "in": "query",
                                            "key": "api_key",
                                            "name": "API Key",
                                            "type": "apiKey",
                                          }
                                        }
                                      >
                                        <div
                                          className="TreeListItem HttpSecuritySchemes__SecurityScheme p-4 flex items-start"
                                          style={
                                            Object {
                                              "alignItems": "start",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "60px",
                                              }
                                            }
                                          >
                                            <div>
                                              api_key
                                            </div>
                                            <div
                                              className="text-sm text-green-7 dark:text-green-6"
                                            >
                                              apiKey
                                            </div>
                                          </div>
                                          <div
                                            className="flex-1 ml-4"
                                          >
                                            <MarkdownViewer
                                              className="flex-1 text-darken-7 dark:text-lighten-7"
                                              markdown="Use \`?apikey=123\` to authenticate requests. It's super secure."
                                            >
                                              <MarkdownViewer
                                                className="flex-1 text-darken-7 dark:text-lighten-7"
                                                components={
                                                  Object {
                                                    "code": [Function],
                                                  }
                                                }
                                                markdown="Use \`?apikey=123\` to authenticate requests. It's super secure."
                                              >
                                                <ErrorBoundary
                                                  FallbackComponent={[Function]}
                                                >
                                                  <MarkdownViewer.Component
                                                    className="flex-1 text-darken-7 dark:text-lighten-7"
                                                    components={
                                                      Object {
                                                        "code": [Function],
                                                      }
                                                    }
                                                    markdown="Use \`?apikey=123\` to authenticate requests. It's super secure."
                                                  >
                                                    <div
                                                      className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-7"
                                                    >
                                                      <p
                                                        key="0"
                                                      >
                                                        Use 
                                                        <CodeViewer
                                                          className="inline-block line-none"
                                                          inline={true}
                                                          key="1"
                                                          value="?apikey=123"
                                                        >
                                                          <code
                                                            className="bp3-code-editor inline-block line-none isInline"
                                                            dangerouslySetInnerHTML={
                                                              Object {
                                                                "__html": "?apikey=123",
                                                              }
                                                            }
                                                          />
                                                        </CodeViewer>
                                                         to authenticate requests. It's super secure.
                                                      </p>
                                                    </div>
                                                  </MarkdownViewer.Component>
                                                </ErrorBoundary>
                                              </MarkdownViewer>
                                            </MarkdownViewer>
                                            <div
                                              className="flex flex-wrap"
                                            >
                                              <Blueprint3.Tag
                                                className="mt-2 mr-2"
                                                minimal={true}
                                              >
                                                <span
                                                  className="bp3-tag bp3-minimal mt-2 mr-2"
                                                >
                                                  <Blueprint3.Icon />
                                                  <Blueprint3.Text
                                                    className="bp3-fill"
                                                    ellipsize={true}
                                                    tagName="span"
                                                  >
                                                    <span
                                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                                    >
                                                      Query
                                                       parameter name: 
                                                      API Key
                                                    </span>
                                                  </Blueprint3.Text>
                                                  <Blueprint3.Icon />
                                                </span>
                                              </Blueprint3.Tag>
                                            </div>
                                          </div>
                                        </div>
                                      </HttpSecuritySchemes.SecurityScheme>
                                      <HttpSecuritySchemes.SecurityScheme
                                        className="TreeListItem TreeListItem--striped"
                                        key="1"
                                        security={
                                          Object {
                                            "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                            "key": "basicKey",
                                            "scheme": "basic",
                                            "type": "http",
                                          }
                                        }
                                      >
                                        <div
                                          className="TreeListItem TreeListItem--striped HttpSecuritySchemes__SecurityScheme p-4 flex items-start"
                                          style={
                                            Object {
                                              "alignItems": "start",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "60px",
                                              }
                                            }
                                          >
                                            <div>
                                              basicKey
                                            </div>
                                            <div
                                              className="text-sm text-orange-7 dark:text-orange-6"
                                            >
                                              http
                                            </div>
                                          </div>
                                          <div
                                            className="flex-1 ml-4"
                                          >
                                            <MarkdownViewer
                                              className="flex-1 text-darken-7 dark:text-lighten-7"
                                              markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                            >
                                              <MarkdownViewer
                                                className="flex-1 text-darken-7 dark:text-lighten-7"
                                                components={
                                                  Object {
                                                    "code": [Function],
                                                  }
                                                }
                                                markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                              >
                                                <ErrorBoundary
                                                  FallbackComponent={[Function]}
                                                >
                                                  <MarkdownViewer.Component
                                                    className="flex-1 text-darken-7 dark:text-lighten-7"
                                                    components={
                                                      Object {
                                                        "code": [Function],
                                                      }
                                                    }
                                                    markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                                  >
                                                    <div
                                                      className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-7"
                                                    >
                                                      <p
                                                        key="0"
                                                      >
                                                        Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.
                                                      </p>
                                                    </div>
                                                  </MarkdownViewer.Component>
                                                </ErrorBoundary>
                                              </MarkdownViewer>
                                            </MarkdownViewer>
                                            <div
                                              className="flex flex-wrap"
                                            >
                                              <Blueprint3.Tag
                                                className="mt-2 mr-2"
                                                minimal={true}
                                              >
                                                <span
                                                  className="bp3-tag bp3-minimal mt-2 mr-2"
                                                >
                                                  <Blueprint3.Icon />
                                                  <Blueprint3.Text
                                                    className="bp3-fill"
                                                    ellipsize={true}
                                                    tagName="span"
                                                  >
                                                    <span
                                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                                    >
                                                      Scheme: 
                                                      basic
                                                    </span>
                                                  </Blueprint3.Text>
                                                  <Blueprint3.Icon />
                                                </span>
                                              </Blueprint3.Tag>
                                            </div>
                                          </div>
                                        </div>
                                      </HttpSecuritySchemes.SecurityScheme>
                                      <HttpSecuritySchemes.SecurityScheme
                                        className="TreeListItem"
                                        key="2"
                                        security={
                                          Object {
                                            "bearerFormat": "Authorization",
                                            "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                            "key": "bearerKey",
                                            "scheme": "bearer",
                                            "type": "http",
                                          }
                                        }
                                      >
                                        <div
                                          className="TreeListItem HttpSecuritySchemes__SecurityScheme p-4 flex items-start"
                                          style={
                                            Object {
                                              "alignItems": "start",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "60px",
                                              }
                                            }
                                          >
                                            <div>
                                              bearerKey
                                            </div>
                                            <div
                                              className="text-sm text-orange-7 dark:text-orange-6"
                                            >
                                              http
                                            </div>
                                          </div>
                                          <div
                                            className="flex-1 ml-4"
                                          >
                                            <MarkdownViewer
                                              className="flex-1 text-darken-7 dark:text-lighten-7"
                                              markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                            >
                                              <MarkdownViewer
                                                className="flex-1 text-darken-7 dark:text-lighten-7"
                                                components={
                                                  Object {
                                                    "code": [Function],
                                                  }
                                                }
                                                markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                              >
                                                <ErrorBoundary
                                                  FallbackComponent={[Function]}
                                                >
                                                  <MarkdownViewer.Component
                                                    className="flex-1 text-darken-7 dark:text-lighten-7"
                                                    components={
                                                      Object {
                                                        "code": [Function],
                                                      }
                                                    }
                                                    markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                                  >
                                                    <div
                                                      className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-7"
                                                    >
                                                      <p
                                                        key="0"
                                                      >
                                                        Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.
                                                      </p>
                                                    </div>
                                                  </MarkdownViewer.Component>
                                                </ErrorBoundary>
                                              </MarkdownViewer>
                                            </MarkdownViewer>
                                            <div
                                              className="flex flex-wrap"
                                            >
                                              <Blueprint3.Tag
                                                className="mt-2 mr-2"
                                                minimal={true}
                                              >
                                                <span
                                                  className="bp3-tag bp3-minimal mt-2 mr-2"
                                                >
                                                  <Blueprint3.Icon />
                                                  <Blueprint3.Text
                                                    className="bp3-fill"
                                                    ellipsize={true}
                                                    tagName="span"
                                                  >
                                                    <span
                                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                                    >
                                                      Scheme: 
                                                      bearer
                                                    </span>
                                                  </Blueprint3.Text>
                                                  <Blueprint3.Icon />
                                                </span>
                                              </Blueprint3.Tag>
                                              <Blueprint3.Tag
                                                className="mt-2 mr-2"
                                                minimal={true}
                                              >
                                                <span
                                                  className="bp3-tag bp3-minimal mt-2 mr-2"
                                                >
                                                  <Blueprint3.Icon />
                                                  <Blueprint3.Text
                                                    className="bp3-fill"
                                                    ellipsize={true}
                                                    tagName="span"
                                                  >
                                                    <span
                                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                                    >
                                                      Bearer Format: 
                                                      Authorization
                                                    </span>
                                                  </Blueprint3.Text>
                                                  <Blueprint3.Icon />
                                                </span>
                                              </Blueprint3.Tag>
                                            </div>
                                          </div>
                                        </div>
                                      </HttpSecuritySchemes.SecurityScheme>
                                      <HttpSecuritySchemes.SecurityScheme
                                        className="TreeListItem TreeListItem--striped"
                                        key="3"
                                        security={
                                          Object {
                                            "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                            "key": "openIdConnectKey",
                                            "openIdConnectUrl": "http://openIdConnect.com",
                                            "type": "openIdConnect",
                                          }
                                        }
                                      >
                                        <div
                                          className="TreeListItem TreeListItem--striped HttpSecuritySchemes__SecurityScheme p-4 flex items-start"
                                          style={
                                            Object {
                                              "alignItems": "start",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "60px",
                                              }
                                            }
                                          >
                                            <div>
                                              openIdConnectKey
                                            </div>
                                            <div
                                              className="text-sm text-blue-7 dark:text-blue-6"
                                            >
                                              openIdConnect
                                            </div>
                                          </div>
                                          <div
                                            className="flex-1 ml-4"
                                          >
                                            <MarkdownViewer
                                              className="flex-1 text-darken-7 dark:text-lighten-7"
                                              markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                            >
                                              <MarkdownViewer
                                                className="flex-1 text-darken-7 dark:text-lighten-7"
                                                components={
                                                  Object {
                                                    "code": [Function],
                                                  }
                                                }
                                                markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                              >
                                                <ErrorBoundary
                                                  FallbackComponent={[Function]}
                                                >
                                                  <MarkdownViewer.Component
                                                    className="flex-1 text-darken-7 dark:text-lighten-7"
                                                    components={
                                                      Object {
                                                        "code": [Function],
                                                      }
                                                    }
                                                    markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                                  >
                                                    <div
                                                      className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-7"
                                                    >
                                                      <p
                                                        key="0"
                                                      >
                                                        Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.
                                                      </p>
                                                    </div>
                                                  </MarkdownViewer.Component>
                                                </ErrorBoundary>
                                              </MarkdownViewer>
                                            </MarkdownViewer>
                                            <div
                                              className="flex flex-wrap"
                                            >
                                              <Blueprint3.Tag
                                                className="mt-2 mr-2"
                                                minimal={true}
                                              >
                                                <span
                                                  className="bp3-tag bp3-minimal mt-2 mr-2"
                                                >
                                                  <Blueprint3.Icon />
                                                  <Blueprint3.Text
                                                    className="bp3-fill"
                                                    ellipsize={true}
                                                    tagName="span"
                                                  >
                                                    <span
                                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                                    >
                                                      OpenId Connect URL: 
                                                      http://openIdConnect.com
                                                    </span>
                                                  </Blueprint3.Text>
                                                  <Blueprint3.Icon />
                                                </span>
                                              </Blueprint3.Tag>
                                            </div>
                                          </div>
                                        </div>
                                      </HttpSecuritySchemes.SecurityScheme>
                                      <HttpSecuritySchemes.SecurityScheme
                                        className="TreeListItem"
                                        key="4"
                                        security={
                                          Object {
                                            "description": "Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.",
                                            "flows": Object {
                                              "authorizationCode": Object {
                                                "authorizationUrl": "http://authorizationUrl.com",
                                                "refreshUrl": "http://refreshUrl.com",
                                                "scopes": Object {
                                                  "read:pets": "read your pets",
                                                  "write:pets": "modify pets in your account",
                                                },
                                                "tokenUrl": "http://tokenUrl.com",
                                              },
                                              "clientCredentials": Object {
                                                "refreshUrl": "http://refreshUrl.com",
                                                "scopes": Object {
                                                  "read:pets": "read your pets",
                                                  "write:pets": "modify pets in your account",
                                                },
                                                "tokenUrl": "http://tokenUrl.com",
                                              },
                                              "implicit": Object {
                                                "authorizationUrl": "http://authorizationUrl.com",
                                                "refreshUrl": "http://refreshUrl.com",
                                                "scopes": Object {
                                                  "read:pets": "read your pets",
                                                  "write:pets": "modify pets in your account",
                                                },
                                              },
                                              "password": Object {
                                                "refreshUrl": "http://refreshUrl.com",
                                                "scopes": Object {
                                                  "read:pets": "read your pets",
                                                  "write:pets": "modify pets in your account",
                                                },
                                                "tokenUrl": "http://tokenUrl.com",
                                              },
                                            },
                                            "key": "oauth2Key",
                                            "type": "oauth2",
                                          }
                                        }
                                      >
                                        <div
                                          className="TreeListItem HttpSecuritySchemes__SecurityScheme p-4 flex items-start"
                                          style={
                                            Object {
                                              "alignItems": "start",
                                            }
                                          }
                                        >
                                          <div
                                            style={
                                              Object {
                                                "minWidth": "60px",
                                              }
                                            }
                                          >
                                            <div>
                                              oauth2Key
                                            </div>
                                            <div
                                              className="text-sm text-red-7 dark:text-red-6"
                                            >
                                              oauth2
                                            </div>
                                          </div>
                                          <div
                                            className="flex-1 ml-4"
                                          >
                                            <MarkdownViewer
                                              className="flex-1 text-darken-7 dark:text-lighten-7"
                                              markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                            >
                                              <MarkdownViewer
                                                className="flex-1 text-darken-7 dark:text-lighten-7"
                                                components={
                                                  Object {
                                                    "code": [Function],
                                                  }
                                                }
                                                markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                              >
                                                <ErrorBoundary
                                                  FallbackComponent={[Function]}
                                                >
                                                  <MarkdownViewer.Component
                                                    className="flex-1 text-darken-7 dark:text-lighten-7"
                                                    components={
                                                      Object {
                                                        "code": [Function],
                                                      }
                                                    }
                                                    markdown="Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access."
                                                  >
                                                    <div
                                                      className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-7"
                                                    >
                                                      <p
                                                        key="0"
                                                      >
                                                        Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.
                                                      </p>
                                                    </div>
                                                  </MarkdownViewer.Component>
                                                </ErrorBoundary>
                                              </MarkdownViewer>
                                            </MarkdownViewer>
                                            <div
                                              className="flex flex-wrap"
                                            />
                                            <HttpSecuritySchemes.OAuth2Flow
                                              flow="implicit"
                                              flowObject={
                                                Object {
                                                  "authorizationUrl": "http://authorizationUrl.com",
                                                  "refreshUrl": "http://refreshUrl.com",
                                                  "scopes": Object {
                                                    "read:pets": "read your pets",
                                                    "write:pets": "modify pets in your account",
                                                  },
                                                }
                                              }
                                              key="implicit"
                                            >
                                              <div
                                                className="py-2 mt-2 border-t HttpSecuritySchemes__OAuth2Flow"
                                              >
                                                <div
                                                  className="py-2 font-semibold"
                                                >
                                                  Implicit
                                                   OAuth Flow
                                                </div>
                                                <div
                                                  className="flex items-center py-1"
                                                >
                                                  <div
                                                    className="mr-1"
                                                  >
                                                    Authorize URL -
                                                  </div>
                                                  <div>
                                                    <a
                                                      href="http://authorizationUrl.com"
                                                      rel="noopener noreferrer"
                                                      target="_blank"
                                                    >
                                                      http://authorizationUrl.com
                                                    </a>
                                                  </div>
                                                </div>
                                                <div
                                                  className="flex items-center py-1"
                                                >
                                                  <div
                                                    className="mr-1"
                                                  >
                                                    Refresh URL -
                                                  </div>
                                                  <div>
                                                    <a
                                                      href="http://refreshUrl.com"
                                                      rel="noopener noreferrer"
                                                      target="_blank"
                                                    >
                                                      http://refreshUrl.com
                                                    </a>
                                                  </div>
                                                </div>
                                                <div
                                                  className="py-1"
                                                >
                                                  Scopes
                                                </div>
                                                <ul
                                                  className="list-disc"
                                                  style={
                                                    Object {
                                                      "margin": 0,
                                                    }
                                                  }
                                                >
                                                  <li
                                                    className="py-1"
                                                    key="write:pets"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            write:pets
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                     - 
                                                    <span
                                                      className="text-darken-7 dark:text-lighten-7"
                                                    >
                                                      modify pets in your account
                                                    </span>
                                                  </li>
                                                  <li
                                                    className="py-1"
                                                    key="read:pets"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            read:pets
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                     - 
                                                    <span
                                                      className="text-darken-7 dark:text-lighten-7"
                                                    >
                                                      read your pets
                                                    </span>
                                                  </li>
                                                </ul>
                                              </div>
                                            </HttpSecuritySchemes.OAuth2Flow>
                                            <HttpSecuritySchemes.OAuth2Flow
                                              flow="password"
                                              flowObject={
                                                Object {
                                                  "refreshUrl": "http://refreshUrl.com",
                                                  "scopes": Object {
                                                    "read:pets": "read your pets",
                                                    "write:pets": "modify pets in your account",
                                                  },
                                                  "tokenUrl": "http://tokenUrl.com",
                                                }
                                              }
                                              key="password"
                                            >
                                              <div
                                                className="py-2 mt-2 border-t HttpSecuritySchemes__OAuth2Flow"
                                              >
                                                <div
                                                  className="py-2 font-semibold"
                                                >
                                                  Password
                                                   OAuth Flow
                                                </div>
                                                <div
                                                  className="flex items-center py-1"
                                                >
                                                  <div
                                                    className="mr-1"
                                                  >
                                                    Token URL -
                                                  </div>
                                                  <div>
                                                    <a
                                                      href="http://tokenUrl.com"
                                                      rel="noopener noreferrer"
                                                      target="_blank"
                                                    >
                                                      http://tokenUrl.com
                                                    </a>
                                                  </div>
                                                </div>
                                                <div
                                                  className="flex items-center py-1"
                                                >
                                                  <div
                                                    className="mr-1"
                                                  >
                                                    Refresh URL -
                                                  </div>
                                                  <div>
                                                    <a
                                                      href="http://refreshUrl.com"
                                                      rel="noopener noreferrer"
                                                      target="_blank"
                                                    >
                                                      http://refreshUrl.com
                                                    </a>
                                                  </div>
                                                </div>
                                                <div
                                                  className="py-1"
                                                >
                                                  Scopes
                                                </div>
                                                <ul
                                                  className="list-disc"
                                                  style={
                                                    Object {
                                                      "margin": 0,
                                                    }
                                                  }
                                                >
                                                  <li
                                                    className="py-1"
                                                    key="write:pets"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            write:pets
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                     - 
                                                    <span
                                                      className="text-darken-7 dark:text-lighten-7"
                                                    >
                                                      modify pets in your account
                                                    </span>
                                                  </li>
                                                  <li
                                                    className="py-1"
                                                    key="read:pets"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            read:pets
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                     - 
                                                    <span
                                                      className="text-darken-7 dark:text-lighten-7"
                                                    >
                                                      read your pets
                                                    </span>
                                                  </li>
                                                </ul>
                                              </div>
                                            </HttpSecuritySchemes.OAuth2Flow>
                                            <HttpSecuritySchemes.OAuth2Flow
                                              flow="clientCredentials"
                                              flowObject={
                                                Object {
                                                  "refreshUrl": "http://refreshUrl.com",
                                                  "scopes": Object {
                                                    "read:pets": "read your pets",
                                                    "write:pets": "modify pets in your account",
                                                  },
                                                  "tokenUrl": "http://tokenUrl.com",
                                                }
                                              }
                                              key="clientCredentials"
                                            >
                                              <div
                                                className="py-2 mt-2 border-t HttpSecuritySchemes__OAuth2Flow"
                                              >
                                                <div
                                                  className="py-2 font-semibold"
                                                >
                                                  Client Credentials
                                                   OAuth Flow
                                                </div>
                                                <div
                                                  className="flex items-center py-1"
                                                >
                                                  <div
                                                    className="mr-1"
                                                  >
                                                    Token URL -
                                                  </div>
                                                  <div>
                                                    <a
                                                      href="http://tokenUrl.com"
                                                      rel="noopener noreferrer"
                                                      target="_blank"
                                                    >
                                                      http://tokenUrl.com
                                                    </a>
                                                  </div>
                                                </div>
                                                <div
                                                  className="flex items-center py-1"
                                                >
                                                  <div
                                                    className="mr-1"
                                                  >
                                                    Refresh URL -
                                                  </div>
                                                  <div>
                                                    <a
                                                      href="http://refreshUrl.com"
                                                      rel="noopener noreferrer"
                                                      target="_blank"
                                                    >
                                                      http://refreshUrl.com
                                                    </a>
                                                  </div>
                                                </div>
                                                <div
                                                  className="py-1"
                                                >
                                                  Scopes
                                                </div>
                                                <ul
                                                  className="list-disc"
                                                  style={
                                                    Object {
                                                      "margin": 0,
                                                    }
                                                  }
                                                >
                                                  <li
                                                    className="py-1"
                                                    key="write:pets"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            write:pets
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                     - 
                                                    <span
                                                      className="text-darken-7 dark:text-lighten-7"
                                                    >
                                                      modify pets in your account
                                                    </span>
                                                  </li>
                                                  <li
                                                    className="py-1"
                                                    key="read:pets"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            read:pets
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                     - 
                                                    <span
                                                      className="text-darken-7 dark:text-lighten-7"
                                                    >
                                                      read your pets
                                                    </span>
                                                  </li>
                                                </ul>
                                              </div>
                                            </HttpSecuritySchemes.OAuth2Flow>
                                            <HttpSecuritySchemes.OAuth2Flow
                                              flow="authorizationCode"
                                              flowObject={
                                                Object {
                                                  "authorizationUrl": "http://authorizationUrl.com",
                                                  "refreshUrl": "http://refreshUrl.com",
                                                  "scopes": Object {
                                                    "read:pets": "read your pets",
                                                    "write:pets": "modify pets in your account",
                                                  },
                                                  "tokenUrl": "http://tokenUrl.com",
                                                }
                                              }
                                              key="authorizationCode"
                                            >
                                              <div
                                                className="py-2 mt-2 border-t HttpSecuritySchemes__OAuth2Flow"
                                              >
                                                <div
                                                  className="py-2 font-semibold"
                                                >
                                                  Authorization Code
                                                   OAuth Flow
                                                </div>
                                                <div
                                                  className="flex items-center py-1"
                                                >
                                                  <div
                                                    className="mr-1"
                                                  >
                                                    Authorize URL -
                                                  </div>
                                                  <div>
                                                    <a
                                                      href="http://authorizationUrl.com"
                                                      rel="noopener noreferrer"
                                                      target="_blank"
                                                    >
                                                      http://authorizationUrl.com
                                                    </a>
                                                  </div>
                                                </div>
                                                <div
                                                  className="flex items-center py-1"
                                                >
                                                  <div
                                                    className="mr-1"
                                                  >
                                                    Token URL -
                                                  </div>
                                                  <div>
                                                    <a
                                                      href="http://tokenUrl.com"
                                                      rel="noopener noreferrer"
                                                      target="_blank"
                                                    >
                                                      http://tokenUrl.com
                                                    </a>
                                                  </div>
                                                </div>
                                                <div
                                                  className="flex items-center py-1"
                                                >
                                                  <div
                                                    className="mr-1"
                                                  >
                                                    Refresh URL -
                                                  </div>
                                                  <div>
                                                    <a
                                                      href="http://refreshUrl.com"
                                                      rel="noopener noreferrer"
                                                      target="_blank"
                                                    >
                                                      http://refreshUrl.com
                                                    </a>
                                                  </div>
                                                </div>
                                                <div
                                                  className="py-1"
                                                >
                                                  Scopes
                                                </div>
                                                <ul
                                                  className="list-disc"
                                                  style={
                                                    Object {
                                                      "margin": 0,
                                                    }
                                                  }
                                                >
                                                  <li
                                                    className="py-1"
                                                    key="write:pets"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            write:pets
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                     - 
                                                    <span
                                                      className="text-darken-7 dark:text-lighten-7"
                                                    >
                                                      modify pets in your account
                                                    </span>
                                                  </li>
                                                  <li
                                                    className="py-1"
                                                    key="read:pets"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            read:pets
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                     - 
                                                    <span
                                                      className="text-darken-7 dark:text-lighten-7"
                                                    >
                                                      read your pets
                                                    </span>
                                                  </li>
                                                </ul>
                                              </div>
                                            </HttpSecuritySchemes.OAuth2Flow>
                                          </div>
                                        </div>
                                      </HttpSecuritySchemes.SecurityScheme>
                                    </div>
                                  </div>
                                </HttpSecuritySchemes>
                                <HttpOperation.Parameters
                                  className="mb-10"
                                  parameters={
                                    Array [
                                      Object {
                                        "name": "todoId",
                                        "required": true,
                                        "schema": Object {
                                          "type": "string",
                                        },
                                        "style": "simple",
                                      },
                                    ]
                                  }
                                  title="Path Parameters"
                                >
                                  <div
                                    className="HttpOperation__Parameters mb-10"
                                  >
                                    <div
                                      className="text-lg font-semibold"
                                    >
                                      Path Parameters
                                    </div>
                                    <div
                                      className="mt-6 border rounded TreeList dark:border-darken"
                                    >
                                      <HttpOperation.Parameter
                                        className="TreeListItem"
                                        key="0"
                                        parameter={
                                          Object {
                                            "name": "todoId",
                                            "required": true,
                                            "schema": Object {
                                              "type": "string",
                                            },
                                            "style": "simple",
                                          }
                                        }
                                      >
                                        <div
                                          className="HttpOperation__Parameter p-4 flex items-start TreeListItem"
                                          style={
                                            Object {
                                              "alignItems": "start",
                                            }
                                          }
                                        >
                                          <div
                                            className="flex flex-1 flex-start"
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "minWidth": "60px",
                                                }
                                              }
                                            >
                                              <div
                                                className="mr-2"
                                              >
                                                todoId
                                              </div>
                                              <div
                                                className="undefined text-sm"
                                              >
                                                string
                                              </div>
                                            </div>
                                            <div
                                              className="flex-1 ml-4"
                                            >
                                              <div
                                                className="flex flex-wrap text-darken-7 dark:text-lighten-6"
                                              />
                                            </div>
                                          </div>
                                          <div
                                            className="ml-4 text-right"
                                          >
                                            <div
                                              className="font-medium"
                                            >
                                              required
                                            </div>
                                          </div>
                                        </div>
                                      </HttpOperation.Parameter>
                                    </div>
                                  </div>
                                </HttpOperation.Parameters>
                                <HttpOperation.Parameters
                                  className="mb-10"
                                  parameters={
                                    Array [
                                      Object {
                                        "deprecated": true,
                                        "description": "How many todos to limit?",
                                        "name": "limit",
                                        "schema": Object {
                                          "default": "300",
                                          "enum": Array [
                                            0,
                                            1,
                                            3,
                                          ],
                                          "exclusiveMaximum": 10,
                                          "exclusiveMinimum": 0,
                                          "maxItems": 10,
                                          "maximum": 10,
                                          "minimum": 5,
                                          "type": "string",
                                        },
                                        "style": "form",
                                      },
                                      Object {
                                        "name": "completed",
                                        "schema": Object {
                                          "description": "Only return completed",
                                          "type": "boolean",
                                        },
                                        "style": "form",
                                      },
                                      Object {
                                        "name": "type",
                                        "schema": Object {
                                          "enum": Array [
                                            "something",
                                            "another",
                                          ],
                                          "type": "string",
                                        },
                                        "style": "form",
                                      },
                                    ]
                                  }
                                  title="Query Parameters"
                                >
                                  <div
                                    className="HttpOperation__Parameters mb-10"
                                  >
                                    <div
                                      className="text-lg font-semibold"
                                    >
                                      Query Parameters
                                    </div>
                                    <div
                                      className="mt-6 border rounded TreeList dark:border-darken"
                                    >
                                      <HttpOperation.Parameter
                                        className="TreeListItem"
                                        key="0"
                                        parameter={
                                          Object {
                                            "name": "completed",
                                            "schema": Object {
                                              "description": "Only return completed",
                                              "type": "boolean",
                                            },
                                            "style": "form",
                                          }
                                        }
                                      >
                                        <div
                                          className="HttpOperation__Parameter p-4 flex items-start TreeListItem"
                                          style={
                                            Object {
                                              "alignItems": "start",
                                            }
                                          }
                                        >
                                          <div
                                            className="flex flex-1 flex-start"
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "minWidth": "60px",
                                                }
                                              }
                                            >
                                              <div
                                                className="mr-2"
                                              >
                                                completed
                                              </div>
                                              <div
                                                className="undefined text-sm"
                                              >
                                                boolean
                                              </div>
                                            </div>
                                            <div
                                              className="flex-1 ml-4"
                                            >
                                              <MarkdownViewer
                                                className="flex-1 text-darken-7 dark:text-lighten-6"
                                                markdown="Only return completed"
                                              >
                                                <MarkdownViewer
                                                  className="flex-1 text-darken-7 dark:text-lighten-6"
                                                  components={
                                                    Object {
                                                      "code": [Function],
                                                    }
                                                  }
                                                  markdown="Only return completed"
                                                >
                                                  <ErrorBoundary
                                                    FallbackComponent={[Function]}
                                                  >
                                                    <MarkdownViewer.Component
                                                      className="flex-1 text-darken-7 dark:text-lighten-6"
                                                      components={
                                                        Object {
                                                          "code": [Function],
                                                        }
                                                      }
                                                      markdown="Only return completed"
                                                    >
                                                      <div
                                                        className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-6"
                                                      >
                                                        <p
                                                          key="0"
                                                        >
                                                          Only return completed
                                                        </p>
                                                      </div>
                                                    </MarkdownViewer.Component>
                                                  </ErrorBoundary>
                                                </MarkdownViewer>
                                              </MarkdownViewer>
                                              <div
                                                className="flex flex-wrap text-darken-7 dark:text-lighten-6"
                                              />
                                            </div>
                                          </div>
                                          <div
                                            className="ml-4 text-right"
                                          >
                                            <div
                                              className="text-darken-7 dark:text-lighten-6"
                                            >
                                              optional
                                            </div>
                                          </div>
                                        </div>
                                      </HttpOperation.Parameter>
                                      <HttpOperation.Parameter
                                        className="TreeListItem TreeListItem--striped"
                                        key="1"
                                        parameter={
                                          Object {
                                            "deprecated": true,
                                            "description": "How many todos to limit?",
                                            "name": "limit",
                                            "schema": Object {
                                              "default": "300",
                                              "enum": Array [
                                                0,
                                                1,
                                                3,
                                              ],
                                              "exclusiveMaximum": 10,
                                              "exclusiveMinimum": 0,
                                              "maxItems": 10,
                                              "maximum": 10,
                                              "minimum": 5,
                                              "type": "string",
                                            },
                                            "style": "form",
                                          }
                                        }
                                      >
                                        <div
                                          className="HttpOperation__Parameter p-4 flex items-start TreeListItem TreeListItem--striped"
                                          style={
                                            Object {
                                              "alignItems": "start",
                                            }
                                          }
                                        >
                                          <div
                                            className="flex flex-1 flex-start"
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "minWidth": "60px",
                                                }
                                              }
                                            >
                                              <div
                                                className="mr-2"
                                              >
                                                limit
                                              </div>
                                              <div
                                                className="undefined text-sm"
                                              >
                                                string
                                              </div>
                                            </div>
                                            <div
                                              className="flex-1 ml-4"
                                            >
                                              <MarkdownViewer
                                                className="flex-1 text-darken-7 dark:text-lighten-6"
                                                markdown="How many todos to limit?"
                                              >
                                                <MarkdownViewer
                                                  className="flex-1 text-darken-7 dark:text-lighten-6"
                                                  components={
                                                    Object {
                                                      "code": [Function],
                                                    }
                                                  }
                                                  markdown="How many todos to limit?"
                                                >
                                                  <ErrorBoundary
                                                    FallbackComponent={[Function]}
                                                  >
                                                    <MarkdownViewer.Component
                                                      className="flex-1 text-darken-7 dark:text-lighten-6"
                                                      components={
                                                        Object {
                                                          "code": [Function],
                                                        }
                                                      }
                                                      markdown="How many todos to limit?"
                                                    >
                                                      <div
                                                        className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-6"
                                                      >
                                                        <p
                                                          key="0"
                                                        >
                                                          How many todos to limit?
                                                        </p>
                                                      </div>
                                                    </MarkdownViewer.Component>
                                                  </ErrorBoundary>
                                                </MarkdownViewer>
                                              </MarkdownViewer>
                                              <div
                                                className="flex flex-wrap text-darken-7 dark:text-lighten-6"
                                              >
                                                <div
                                                  className="mt-2 mr-2"
                                                >
                                                  <Blueprint3.Tag
                                                    intent="warning"
                                                    minimal={true}
                                                  >
                                                    <span
                                                      className="bp3-tag bp3-intent-warning bp3-minimal"
                                                    >
                                                      <Blueprint3.Icon />
                                                      <Blueprint3.Text
                                                        className="bp3-fill"
                                                        ellipsize={true}
                                                        tagName="span"
                                                      >
                                                        <span
                                                          className="bp3-text-overflow-ellipsis bp3-fill"
                                                        >
                                                          Deprecated
                                                        </span>
                                                      </Blueprint3.Text>
                                                      <Blueprint3.Icon />
                                                    </span>
                                                  </Blueprint3.Tag>
                                                </div>
                                                <ParameterValidation
                                                  className="mt-2 mr-2"
                                                  key="0"
                                                  name="default"
                                                  value="300"
                                                >
                                                  <div
                                                    className="mt-2 mr-2"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            default
                                                            : 
                                                            "300"
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                  </div>
                                                </ParameterValidation>
                                                <ParameterValidation
                                                  className="mt-2 mr-2"
                                                  key="1"
                                                  name="enum"
                                                  value={
                                                    Array [
                                                      0,
                                                      1,
                                                      3,
                                                    ]
                                                  }
                                                >
                                                  <div
                                                    className="mt-2 mr-2"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            enum
                                                            : 
                                                            0, 1, 3
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                  </div>
                                                </ParameterValidation>
                                                <ParameterValidation
                                                  className="mt-2 mr-2"
                                                  key="2"
                                                  name="exclusiveMinimum"
                                                  value={0}
                                                >
                                                  <div
                                                    className="mt-2 mr-2"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            exclusiveMinimum
                                                            : 
                                                            0
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                  </div>
                                                </ParameterValidation>
                                                <ParameterValidation
                                                  className="mt-2 mr-2"
                                                  key="3"
                                                  name="exclusiveMaximum"
                                                  value={10}
                                                >
                                                  <div
                                                    className="mt-2 mr-2"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            exclusiveMaximum
                                                            : 
                                                            10
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                  </div>
                                                </ParameterValidation>
                                                <ParameterValidation
                                                  className="mt-2 mr-2"
                                                  key="4"
                                                  name="minimum"
                                                  value={5}
                                                >
                                                  <div
                                                    className="mt-2 mr-2"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            minimum
                                                            : 
                                                            5
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                  </div>
                                                </ParameterValidation>
                                                <ParameterValidation
                                                  className="mt-2 mr-2"
                                                  key="5"
                                                  name="maximum"
                                                  value={10}
                                                >
                                                  <div
                                                    className="mt-2 mr-2"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            maximum
                                                            : 
                                                            10
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                  </div>
                                                </ParameterValidation>
                                                <ParameterValidation
                                                  className="mt-2 mr-2"
                                                  key="6"
                                                  name="maxItems"
                                                  value={10}
                                                >
                                                  <div
                                                    className="mt-2 mr-2"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            maxItems
                                                            : 
                                                            10
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                  </div>
                                                </ParameterValidation>
                                              </div>
                                            </div>
                                          </div>
                                          <div
                                            className="ml-4 text-right"
                                          >
                                            <div
                                              className="text-darken-7 dark:text-lighten-6"
                                            >
                                              optional
                                            </div>
                                          </div>
                                        </div>
                                      </HttpOperation.Parameter>
                                      <HttpOperation.Parameter
                                        className="TreeListItem"
                                        key="2"
                                        parameter={
                                          Object {
                                            "name": "type",
                                            "schema": Object {
                                              "enum": Array [
                                                "something",
                                                "another",
                                              ],
                                              "type": "string",
                                            },
                                            "style": "form",
                                          }
                                        }
                                      >
                                        <div
                                          className="HttpOperation__Parameter p-4 flex items-start TreeListItem"
                                          style={
                                            Object {
                                              "alignItems": "start",
                                            }
                                          }
                                        >
                                          <div
                                            className="flex flex-1 flex-start"
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "minWidth": "60px",
                                                }
                                              }
                                            >
                                              <div
                                                className="mr-2"
                                              >
                                                type
                                              </div>
                                              <div
                                                className="undefined text-sm"
                                              >
                                                string
                                              </div>
                                            </div>
                                            <div
                                              className="flex-1 ml-4"
                                            >
                                              <div
                                                className="flex flex-wrap text-darken-7 dark:text-lighten-6"
                                              >
                                                <ParameterValidation
                                                  className="mt-2 mr-2"
                                                  key="0"
                                                  name="enum"
                                                  value={
                                                    Array [
                                                      "something",
                                                      "another",
                                                    ]
                                                  }
                                                >
                                                  <div
                                                    className="mt-2 mr-2"
                                                  >
                                                    <Blueprint3.Tag
                                                      minimal={true}
                                                    >
                                                      <span
                                                        className="bp3-tag bp3-minimal"
                                                      >
                                                        <Blueprint3.Icon />
                                                        <Blueprint3.Text
                                                          className="bp3-fill"
                                                          ellipsize={true}
                                                          tagName="span"
                                                        >
                                                          <span
                                                            className="bp3-text-overflow-ellipsis bp3-fill"
                                                          >
                                                            enum
                                                            : 
                                                            "something", "another"
                                                          </span>
                                                        </Blueprint3.Text>
                                                        <Blueprint3.Icon />
                                                      </span>
                                                    </Blueprint3.Tag>
                                                  </div>
                                                </ParameterValidation>
                                              </div>
                                            </div>
                                          </div>
                                          <div
                                            className="ml-4 text-right"
                                          >
                                            <div
                                              className="text-darken-7 dark:text-lighten-6"
                                            >
                                              optional
                                            </div>
                                          </div>
                                        </div>
                                      </HttpOperation.Parameter>
                                    </div>
                                  </div>
                                </HttpOperation.Parameters>
                                <HttpOperation.Parameters
                                  className="mb-10"
                                  title="Cookie Parameters"
                                />
                                <HttpOperation.Parameters
                                  className="mb-10"
                                  parameters={
                                    Array [
                                      Object {
                                        "name": "account-id",
                                        "required": true,
                                        "schema": Object {
                                          "description": "Your Stoplight account id",
                                          "type": "string",
                                        },
                                        "style": "simple",
                                      },
                                    ]
                                  }
                                  title="Header Parameters"
                                >
                                  <div
                                    className="HttpOperation__Parameters mb-10"
                                  >
                                    <div
                                      className="text-lg font-semibold"
                                    >
                                      Header Parameters
                                    </div>
                                    <div
                                      className="mt-6 border rounded TreeList dark:border-darken"
                                    >
                                      <HttpOperation.Parameter
                                        className="TreeListItem"
                                        key="0"
                                        parameter={
                                          Object {
                                            "name": "account-id",
                                            "required": true,
                                            "schema": Object {
                                              "description": "Your Stoplight account id",
                                              "type": "string",
                                            },
                                            "style": "simple",
                                          }
                                        }
                                      >
                                        <div
                                          className="HttpOperation__Parameter p-4 flex items-start TreeListItem"
                                          style={
                                            Object {
                                              "alignItems": "start",
                                            }
                                          }
                                        >
                                          <div
                                            className="flex flex-1 flex-start"
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "minWidth": "60px",
                                                }
                                              }
                                            >
                                              <div
                                                className="mr-2"
                                              >
                                                account-id
                                              </div>
                                              <div
                                                className="undefined text-sm"
                                              >
                                                string
                                              </div>
                                            </div>
                                            <div
                                              className="flex-1 ml-4"
                                            >
                                              <MarkdownViewer
                                                className="flex-1 text-darken-7 dark:text-lighten-6"
                                                markdown="Your Stoplight account id"
                                              >
                                                <MarkdownViewer
                                                  className="flex-1 text-darken-7 dark:text-lighten-6"
                                                  components={
                                                    Object {
                                                      "code": [Function],
                                                    }
                                                  }
                                                  markdown="Your Stoplight account id"
                                                >
                                                  <ErrorBoundary
                                                    FallbackComponent={[Function]}
                                                  >
                                                    <MarkdownViewer.Component
                                                      className="flex-1 text-darken-7 dark:text-lighten-6"
                                                      components={
                                                        Object {
                                                          "code": [Function],
                                                        }
                                                      }
                                                      markdown="Your Stoplight account id"
                                                    >
                                                      <div
                                                        className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-6"
                                                      >
                                                        <p
                                                          key="0"
                                                        >
                                                          Your Stoplight account id
                                                        </p>
                                                      </div>
                                                    </MarkdownViewer.Component>
                                                  </ErrorBoundary>
                                                </MarkdownViewer>
                                              </MarkdownViewer>
                                              <div
                                                className="flex flex-wrap text-darken-7 dark:text-lighten-6"
                                              />
                                            </div>
                                          </div>
                                          <div
                                            className="ml-4 text-right"
                                          >
                                            <div
                                              className="font-medium"
                                            >
                                              required
                                            </div>
                                          </div>
                                        </div>
                                      </HttpOperation.Parameter>
                                    </div>
                                  </div>
                                </HttpOperation.Parameters>
                                <HttpOperation.Body
                                  body={
                                    Object {
                                      "contents": Array [
                                        Object {
                                          "examples": Array [
                                            Object {
                                              "key": "Incomplete",
                                              "value": Object {
                                                "completed": false,
                                                "name": "Docs Module",
                                              },
                                            },
                                            Object {
                                              "key": "Completed",
                                              "value": Object {
                                                "completed": true,
                                                "name": "Studio",
                                              },
                                            },
                                          ],
                                          "mediaType": "application/json",
                                          "schema": Object {
                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                            "properties": Object {
                                              "completed": Object {
                                                "type": Array [
                                                  "boolean",
                                                  "null",
                                                ],
                                              },
                                              "name": Object {
                                                "type": "string",
                                              },
                                            },
                                            "required": Array [
                                              "name",
                                              "completed",
                                            ],
                                            "title": "Todo Partial",
                                            "type": "object",
                                            "x-tags": Array [
                                              "Todos",
                                            ],
                                          },
                                        },
                                      ],
                                    }
                                  }
                                  className="mb-10"
                                >
                                  <div
                                    className="HttpOperation__Body mb-10"
                                  >
                                    <div
                                      className="text-lg font-semibold"
                                    >
                                      Body
                                    </div>
                                    <HttpOperation.Schema
                                      className="mt-6"
                                      examples={
                                        Array [
                                          Object {
                                            "key": "Incomplete",
                                            "value": Object {
                                              "completed": false,
                                              "name": "Docs Module",
                                            },
                                          },
                                          Object {
                                            "key": "Completed",
                                            "value": Object {
                                              "completed": true,
                                              "name": "Studio",
                                            },
                                          },
                                        ]
                                      }
                                      value={
                                        Object {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "properties": Object {
                                            "completed": Object {
                                              "type": Array [
                                                "boolean",
                                                "null",
                                              ],
                                            },
                                            "name": Object {
                                              "type": "string",
                                            },
                                          },
                                          "required": Array [
                                            "name",
                                            "completed",
                                          ],
                                          "title": "Todo Partial",
                                          "type": "object",
                                          "x-tags": Array [
                                            "Todos",
                                          ],
                                        }
                                      }
                                    >
                                      <Tabs
                                        className="HttpOperation__Schema mt-6"
                                        defaultFocus={false}
                                        defaultIndex={null}
                                        forceRenderTabPanel={false}
                                        onSelect={[Function]}
                                        selectedIndex={0}
                                      >
                                        <UncontrolledTabs
                                          className="HttpOperation__Schema mt-6"
                                          focus={false}
                                          forceRenderTabPanel={false}
                                          onSelect={[Function]}
                                          selectedIndex={0}
                                        >
                                          <div
                                            className="HttpOperation__Schema mt-6"
                                            data-tabs={true}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                          >
                                            <SimpleTabList
                                              key=".0"
                                            >
                                              <TabList
                                                className="bp3-simple-tab-list"
                                              >
                                                <ul
                                                  className="bp3-simple-tab-list"
                                                  role="tablist"
                                                >
                                                  <SimpleTab
                                                    focus={false}
                                                    id="react-tabs-0"
                                                    key=".0"
                                                    panelId="react-tabs-1"
                                                    selected={true}
                                                    tabRef={[Function]}
                                                  >
                                                    <Tab
                                                      className="bp3-simple-tab"
                                                      disabledClassName="disabled-tab"
                                                      focus={false}
                                                      id="react-tabs-0"
                                                      panelId="react-tabs-1"
                                                      selected={true}
                                                      selectedClassName="selected-tab"
                                                      tabRef={[Function]}
                                                    >
                                                      <li
                                                        aria-controls="react-tabs-1"
                                                        aria-disabled="false"
                                                        aria-selected="true"
                                                        className="bp3-simple-tab selected-tab"
                                                        id="react-tabs-0"
                                                        role="tab"
                                                        tabIndex="0"
                                                      >
                                                        Schema
                                                      </li>
                                                    </Tab>
                                                  </SimpleTab>
                                                  <SimpleTab
                                                    focus={false}
                                                    id="react-tabs-2"
                                                    key=".1:$0"
                                                    panelId="react-tabs-3"
                                                    selected={false}
                                                    tabRef={[Function]}
                                                  >
                                                    <Tab
                                                      className="bp3-simple-tab"
                                                      disabledClassName="disabled-tab"
                                                      focus={false}
                                                      id="react-tabs-2"
                                                      panelId="react-tabs-3"
                                                      selected={false}
                                                      selectedClassName="selected-tab"
                                                      tabRef={[Function]}
                                                    >
                                                      <li
                                                        aria-controls="react-tabs-3"
                                                        aria-disabled="false"
                                                        aria-selected="false"
                                                        className="bp3-simple-tab"
                                                        id="react-tabs-2"
                                                        role="tab"
                                                        tabIndex={null}
                                                      >
                                                        Incomplete
                                                      </li>
                                                    </Tab>
                                                  </SimpleTab>
                                                  <SimpleTab
                                                    focus={false}
                                                    id="react-tabs-4"
                                                    key=".1:$1"
                                                    panelId="react-tabs-5"
                                                    selected={false}
                                                    tabRef={[Function]}
                                                  >
                                                    <Tab
                                                      className="bp3-simple-tab"
                                                      disabledClassName="disabled-tab"
                                                      focus={false}
                                                      id="react-tabs-4"
                                                      panelId="react-tabs-5"
                                                      selected={false}
                                                      selectedClassName="selected-tab"
                                                      tabRef={[Function]}
                                                    >
                                                      <li
                                                        aria-controls="react-tabs-5"
                                                        aria-disabled="false"
                                                        aria-selected="false"
                                                        className="bp3-simple-tab"
                                                        id="react-tabs-4"
                                                        role="tab"
                                                        tabIndex={null}
                                                      >
                                                        Completed
                                                      </li>
                                                    </Tab>
                                                  </SimpleTab>
                                                </ul>
                                              </TabList>
                                            </SimpleTabList>
                                            <SimpleTabPanel
                                              className="p-0"
                                              id="react-tabs-1"
                                              key=".1"
                                              selected={true}
                                              tabId="react-tabs-0"
                                            >
                                              <TabPanel
                                                className="bp3-simple-tab-panel p-0"
                                                forceRender={false}
                                                id="react-tabs-1"
                                                selected={true}
                                                selectedClassName="block"
                                                tabId="react-tabs-0"
                                              >
                                                <div
                                                  aria-labelledby="react-tabs-0"
                                                  className="bp3-simple-tab-panel p-0 block"
                                                  id="react-tabs-1"
                                                  role="tabpanel"
                                                >
                                                  <Component
                                                    maxRows={20}
                                                    schema={
                                                      Object {
                                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                                        "properties": Object {
                                                          "completed": Object {
                                                            "type": Array [
                                                              "boolean",
                                                              "null",
                                                            ],
                                                          },
                                                          "name": Object {
                                                            "type": "string",
                                                          },
                                                        },
                                                        "required": Array [
                                                          "name",
                                                          "completed",
                                                        ],
                                                        "title": "Todo Partial",
                                                        "type": "object",
                                                        "x-tags": Array [
                                                          "Todos",
                                                        ],
                                                      }
                                                    }
                                                  >
                                                    <JsonSchemaViewer
                                                      maxRows={20}
                                                      schema={
                                                        Object {
                                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                                          "properties": Object {
                                                            "completed": Object {
                                                              "type": Array [
                                                                "boolean",
                                                                "null",
                                                              ],
                                                            },
                                                            "name": Object {
                                                              "type": "string",
                                                            },
                                                          },
                                                          "required": Array [
                                                            "name",
                                                            "completed",
                                                          ],
                                                          "title": "Todo Partial",
                                                          "type": "object",
                                                          "x-tags": Array [
                                                            "Todos",
                                                          ],
                                                        }
                                                      }
                                                    >
                                                      <div />
                                                    </JsonSchemaViewer>
                                                  </Component>
                                                </div>
                                              </TabPanel>
                                            </SimpleTabPanel>
                                            <SimpleTabPanel
                                              className="p-0"
                                              id="react-tabs-3"
                                              key=".2:$0"
                                              selected={false}
                                              tabId="react-tabs-2"
                                            >
                                              <TabPanel
                                                className="bp3-simple-tab-panel p-0"
                                                forceRender={false}
                                                id="react-tabs-3"
                                                selected={false}
                                                selectedClassName="block"
                                                tabId="react-tabs-2"
                                              >
                                                <div
                                                  aria-labelledby="react-tabs-2"
                                                  className="bp3-simple-tab-panel p-0"
                                                  id="react-tabs-3"
                                                  role="tabpanel"
                                                />
                                              </TabPanel>
                                            </SimpleTabPanel>
                                            <SimpleTabPanel
                                              className="p-0"
                                              id="react-tabs-5"
                                              key=".2:$1"
                                              selected={false}
                                              tabId="react-tabs-4"
                                            >
                                              <TabPanel
                                                className="bp3-simple-tab-panel p-0"
                                                forceRender={false}
                                                id="react-tabs-5"
                                                selected={false}
                                                selectedClassName="block"
                                                tabId="react-tabs-4"
                                              >
                                                <div
                                                  aria-labelledby="react-tabs-4"
                                                  className="bp3-simple-tab-panel p-0"
                                                  id="react-tabs-5"
                                                  role="tabpanel"
                                                />
                                              </TabPanel>
                                            </SimpleTabPanel>
                                          </div>
                                        </UncontrolledTabs>
                                      </Tabs>
                                    </HttpOperation.Schema>
                                  </div>
                                </HttpOperation.Body>
                              </div>
                            </HttpOperation.Request>
                            <HttpOperation.Responses
                              responses={
                                Array [
                                  Object {
                                    "code": "200",
                                    "contents": Array [
                                      Object {
                                        "examples": Array [
                                          Object {
                                            "key": "application/json",
                                            "value": Object {
                                              "completed": true,
                                              "completed_at": null,
                                              "created_at": "2014-08-28T14:14:28.494Z",
                                              "id": 9000,
                                              "name": "It's Over 9000!!!",
                                              "updated_at": "2015-08-28T14:14:28.494Z",
                                            },
                                          },
                                        ],
                                        "mediaType": "application/json",
                                        "schema": Object {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "allOf": Array [
                                            Object {
                                              "$schema": "http://json-schema.org/draft-04/schema#",
                                              "properties": Object {
                                                "completed": Object {
                                                  "type": Array [
                                                    "boolean",
                                                    "null",
                                                  ],
                                                },
                                                "name": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "name",
                                                "completed",
                                              ],
                                              "title": "Todo Partial",
                                              "type": "object",
                                              "x-tags": Array [
                                                "Todos",
                                              ],
                                            },
                                            Object {
                                              "properties": Object {
                                                "completed_at": Object {
                                                  "format": "date-time",
                                                  "type": Array [
                                                    "string",
                                                    "null",
                                                  ],
                                                },
                                                "created_at": Object {
                                                  "format": "date-time",
                                                  "type": "string",
                                                },
                                                "id": Object {
                                                  "maximum": 1000000,
                                                  "minimum": 0,
                                                  "type": "integer",
                                                },
                                                "updated_at": Object {
                                                  "format": "date-time",
                                                  "type": "string",
                                                },
                                                "user": Object {
                                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                                  "description": "Here lies the user model",
                                                  "properties": Object {
                                                    "age": Object {
                                                      "maximum": 150,
                                                      "minimum": 0,
                                                      "type": "number",
                                                    },
                                                    "name": Object {
                                                      "description": "The user's full name.",
                                                      "type": "string",
                                                    },
                                                  },
                                                  "required": Array [
                                                    "name",
                                                    "age",
                                                  ],
                                                  "title": "User",
                                                  "type": "object",
                                                  "x-tags": Array [
                                                    "Todos",
                                                  ],
                                                },
                                              },
                                              "required": Array [
                                                "id",
                                                "user",
                                              ],
                                              "type": "object",
                                            },
                                          ],
                                          "title": "Todo Full",
                                          "x-tags": Array [
                                            "Todos",
                                          ],
                                        },
                                      },
                                    ],
                                    "description": "",
                                    "headers": Array [],
                                  },
                                  Object {
                                    "code": "401",
                                    "contents": Array [
                                      Object {
                                        "examples": Array [
                                          Object {
                                            "key": "application/json",
                                            "value": Object {
                                              "code": "401",
                                              "message": "Not Authorized",
                                            },
                                          },
                                        ],
                                        "mediaType": "application/json",
                                        "schema": Object {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "anyOf": Array [
                                            Object {
                                              "properties": Object {
                                                "code": Object {
                                                  "type": "string",
                                                },
                                                "message": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "code",
                                              ],
                                              "type": "object",
                                            },
                                            Object {
                                              "$schema": "http://json-schema.org/draft-04/schema#",
                                              "description": "",
                                              "properties": Object {
                                                "name": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "name",
                                              ],
                                              "title": "Category",
                                              "type": "object",
                                              "x-tags": Array [
                                                "Pets",
                                              ],
                                            },
                                          ],
                                          "description": "A standard error object.",
                                          "title": "Error",
                                          "x-tags": Array [
                                            "Common",
                                          ],
                                        },
                                      },
                                    ],
                                    "description": "Our shared 401 response.",
                                    "headers": Array [],
                                  },
                                  Object {
                                    "code": "404",
                                    "contents": Array [
                                      Object {
                                        "examples": Array [
                                          Object {
                                            "key": "application/json",
                                            "value": Object {
                                              "code": "404",
                                              "message": "Not Found",
                                            },
                                          },
                                        ],
                                        "mediaType": "application/json",
                                        "schema": Object {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "anyOf": Array [
                                            Object {
                                              "properties": Object {
                                                "code": Object {
                                                  "type": "string",
                                                },
                                                "message": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "code",
                                              ],
                                              "type": "object",
                                            },
                                            Object {
                                              "$schema": "http://json-schema.org/draft-04/schema#",
                                              "description": "",
                                              "properties": Object {
                                                "name": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "name",
                                              ],
                                              "title": "Category",
                                              "type": "object",
                                              "x-tags": Array [
                                                "Pets",
                                              ],
                                            },
                                          ],
                                          "description": "A standard error object.",
                                          "title": "Error",
                                          "x-tags": Array [
                                            "Common",
                                          ],
                                        },
                                      },
                                    ],
                                    "description": "Our shared 404 response.",
                                    "headers": Array [],
                                  },
                                  Object {
                                    "code": "500",
                                    "contents": Array [
                                      Object {
                                        "examples": Array [
                                          Object {
                                            "key": "application/json",
                                            "value": Object {
                                              "code": "500",
                                              "message": "Server Error",
                                            },
                                          },
                                        ],
                                        "mediaType": "application/json",
                                        "schema": Object {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "anyOf": Array [
                                            Object {
                                              "properties": Object {
                                                "code": Object {
                                                  "type": "string",
                                                },
                                                "message": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "code",
                                              ],
                                              "type": "object",
                                            },
                                            Object {
                                              "$schema": "http://json-schema.org/draft-04/schema#",
                                              "description": "",
                                              "properties": Object {
                                                "name": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "name",
                                              ],
                                              "title": "Category",
                                              "type": "object",
                                              "x-tags": Array [
                                                "Pets",
                                              ],
                                            },
                                          ],
                                          "description": "A standard error object.",
                                          "title": "Error",
                                          "x-tags": Array [
                                            "Common",
                                          ],
                                        },
                                      },
                                    ],
                                    "description": "Our shared 500 response.",
                                    "headers": Array [],
                                  },
                                ]
                              }
                            >
                              <div
                                className="HttpOperation__Responses"
                              >
                                <div
                                  className="flex items-center"
                                >
                                  <div
                                    className="text-lg font-semibold"
                                  >
                                    Responses
                                  </div>
                                </div>
                                <Blueprint3.ButtonGroup
                                  className="mt-6"
                                >
                                  <div
                                    className="bp3-button-group mt-6"
                                  >
                                    <Blueprint3.Button
                                      active={true}
                                      icon={
                                        <Blueprint3.Icon
                                          color="green"
                                          icon="full-circle"
                                          iconSize={10}
                                        />
                                      }
                                      key="200"
                                      onClick={[Function]}
                                      text="200"
                                    >
                                      <button
                                        className="bp3-button bp3-active"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        type="button"
                                      >
                                        <Blueprint3.Icon
                                          icon={
                                            <Blueprint3.Icon
                                              color="green"
                                              icon="full-circle"
                                              iconSize={10}
                                            />
                                          }
                                          key="leftIcon"
                                        >
                                          <Blueprint3.Icon
                                            color="green"
                                            icon="full-circle"
                                            iconSize={10}
                                          >
                                            <span
                                              className="bp3-icon bp3-icon-full-circle"
                                              icon="full-circle"
                                            >
                                              <svg
                                                data-icon="full-circle"
                                                fill="green"
                                                height={10}
                                                viewBox="0 0 16 16"
                                                width={10}
                                              >
                                                <desc>
                                                  full-circle
                                                </desc>
                                                <path
                                                  d="M8 0a8 8 0 100 16A8 8 0 108 0z"
                                                  fillRule="evenodd"
                                                  key="0"
                                                />
                                              </svg>
                                            </span>
                                          </Blueprint3.Icon>
                                        </Blueprint3.Icon>
                                        <span
                                          className="bp3-button-text"
                                          key="text"
                                        >
                                          200
                                        </span>
                                        <Blueprint3.Icon
                                          key="rightIcon"
                                        />
                                      </button>
                                    </Blueprint3.Button>
                                    <Blueprint3.Button
                                      active={false}
                                      icon={
                                        <Blueprint3.Icon
                                          color="orange"
                                          icon="full-circle"
                                          iconSize={10}
                                        />
                                      }
                                      key="401"
                                      onClick={[Function]}
                                      text="401"
                                    >
                                      <button
                                        className="bp3-button"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        type="button"
                                      >
                                        <Blueprint3.Icon
                                          icon={
                                            <Blueprint3.Icon
                                              color="orange"
                                              icon="full-circle"
                                              iconSize={10}
                                            />
                                          }
                                          key="leftIcon"
                                        >
                                          <Blueprint3.Icon
                                            color="orange"
                                            icon="full-circle"
                                            iconSize={10}
                                          >
                                            <span
                                              className="bp3-icon bp3-icon-full-circle"
                                              icon="full-circle"
                                            >
                                              <svg
                                                data-icon="full-circle"
                                                fill="orange"
                                                height={10}
                                                viewBox="0 0 16 16"
                                                width={10}
                                              >
                                                <desc>
                                                  full-circle
                                                </desc>
                                                <path
                                                  d="M8 0a8 8 0 100 16A8 8 0 108 0z"
                                                  fillRule="evenodd"
                                                  key="0"
                                                />
                                              </svg>
                                            </span>
                                          </Blueprint3.Icon>
                                        </Blueprint3.Icon>
                                        <span
                                          className="bp3-button-text"
                                          key="text"
                                        >
                                          401
                                        </span>
                                        <Blueprint3.Icon
                                          key="rightIcon"
                                        />
                                      </button>
                                    </Blueprint3.Button>
                                    <Blueprint3.Button
                                      active={false}
                                      icon={
                                        <Blueprint3.Icon
                                          color="orange"
                                          icon="full-circle"
                                          iconSize={10}
                                        />
                                      }
                                      key="404"
                                      onClick={[Function]}
                                      text="404"
                                    >
                                      <button
                                        className="bp3-button"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        type="button"
                                      >
                                        <Blueprint3.Icon
                                          icon={
                                            <Blueprint3.Icon
                                              color="orange"
                                              icon="full-circle"
                                              iconSize={10}
                                            />
                                          }
                                          key="leftIcon"
                                        >
                                          <Blueprint3.Icon
                                            color="orange"
                                            icon="full-circle"
                                            iconSize={10}
                                          >
                                            <span
                                              className="bp3-icon bp3-icon-full-circle"
                                              icon="full-circle"
                                            >
                                              <svg
                                                data-icon="full-circle"
                                                fill="orange"
                                                height={10}
                                                viewBox="0 0 16 16"
                                                width={10}
                                              >
                                                <desc>
                                                  full-circle
                                                </desc>
                                                <path
                                                  d="M8 0a8 8 0 100 16A8 8 0 108 0z"
                                                  fillRule="evenodd"
                                                  key="0"
                                                />
                                              </svg>
                                            </span>
                                          </Blueprint3.Icon>
                                        </Blueprint3.Icon>
                                        <span
                                          className="bp3-button-text"
                                          key="text"
                                        >
                                          404
                                        </span>
                                        <Blueprint3.Icon
                                          key="rightIcon"
                                        />
                                      </button>
                                    </Blueprint3.Button>
                                    <Blueprint3.Button
                                      active={false}
                                      icon={
                                        <Blueprint3.Icon
                                          color="red"
                                          icon="full-circle"
                                          iconSize={10}
                                        />
                                      }
                                      key="500"
                                      onClick={[Function]}
                                      text="500"
                                    >
                                      <button
                                        className="bp3-button"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        type="button"
                                      >
                                        <Blueprint3.Icon
                                          icon={
                                            <Blueprint3.Icon
                                              color="red"
                                              icon="full-circle"
                                              iconSize={10}
                                            />
                                          }
                                          key="leftIcon"
                                        >
                                          <Blueprint3.Icon
                                            color="red"
                                            icon="full-circle"
                                            iconSize={10}
                                          >
                                            <span
                                              className="bp3-icon bp3-icon-full-circle"
                                              icon="full-circle"
                                            >
                                              <svg
                                                data-icon="full-circle"
                                                fill="red"
                                                height={10}
                                                viewBox="0 0 16 16"
                                                width={10}
                                              >
                                                <desc>
                                                  full-circle
                                                </desc>
                                                <path
                                                  d="M8 0a8 8 0 100 16A8 8 0 108 0z"
                                                  fillRule="evenodd"
                                                  key="0"
                                                />
                                              </svg>
                                            </span>
                                          </Blueprint3.Icon>
                                        </Blueprint3.Icon>
                                        <span
                                          className="bp3-button-text"
                                          key="text"
                                        >
                                          500
                                        </span>
                                        <Blueprint3.Icon
                                          key="rightIcon"
                                        />
                                      </button>
                                    </Blueprint3.Button>
                                  </div>
                                </Blueprint3.ButtonGroup>
                                <HttpOperation.Response
                                  className="mt-6"
                                  response={
                                    Object {
                                      "code": "200",
                                      "contents": Array [
                                        Object {
                                          "examples": Array [
                                            Object {
                                              "key": "application/json",
                                              "value": Object {
                                                "completed": true,
                                                "completed_at": null,
                                                "created_at": "2014-08-28T14:14:28.494Z",
                                                "id": 9000,
                                                "name": "It's Over 9000!!!",
                                                "updated_at": "2015-08-28T14:14:28.494Z",
                                              },
                                            },
                                          ],
                                          "mediaType": "application/json",
                                          "schema": Object {
                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                            "allOf": Array [
                                              Object {
                                                "$schema": "http://json-schema.org/draft-04/schema#",
                                                "properties": Object {
                                                  "completed": Object {
                                                    "type": Array [
                                                      "boolean",
                                                      "null",
                                                    ],
                                                  },
                                                  "name": Object {
                                                    "type": "string",
                                                  },
                                                },
                                                "required": Array [
                                                  "name",
                                                  "completed",
                                                ],
                                                "title": "Todo Partial",
                                                "type": "object",
                                                "x-tags": Array [
                                                  "Todos",
                                                ],
                                              },
                                              Object {
                                                "properties": Object {
                                                  "completed_at": Object {
                                                    "format": "date-time",
                                                    "type": Array [
                                                      "string",
                                                      "null",
                                                    ],
                                                  },
                                                  "created_at": Object {
                                                    "format": "date-time",
                                                    "type": "string",
                                                  },
                                                  "id": Object {
                                                    "maximum": 1000000,
                                                    "minimum": 0,
                                                    "type": "integer",
                                                  },
                                                  "updated_at": Object {
                                                    "format": "date-time",
                                                    "type": "string",
                                                  },
                                                  "user": Object {
                                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                                    "description": "Here lies the user model",
                                                    "properties": Object {
                                                      "age": Object {
                                                        "maximum": 150,
                                                        "minimum": 0,
                                                        "type": "number",
                                                      },
                                                      "name": Object {
                                                        "description": "The user's full name.",
                                                        "type": "string",
                                                      },
                                                    },
                                                    "required": Array [
                                                      "name",
                                                      "age",
                                                    ],
                                                    "title": "User",
                                                    "type": "object",
                                                    "x-tags": Array [
                                                      "Todos",
                                                    ],
                                                  },
                                                },
                                                "required": Array [
                                                  "id",
                                                  "user",
                                                ],
                                                "type": "object",
                                              },
                                            ],
                                            "title": "Todo Full",
                                            "x-tags": Array [
                                              "Todos",
                                            ],
                                          },
                                        },
                                      ],
                                      "description": "",
                                      "headers": Array [],
                                    }
                                  }
                                >
                                  <div
                                    className="HttpOperation__Response mt-6"
                                  >
                                    <HttpOperation.Parameters
                                      className="mb-6"
                                      parameters={Array []}
                                      title="Headers"
                                    />
                                    <HttpOperation.Schema
                                      examples={
                                        Array [
                                          Object {
                                            "key": "application/json",
                                            "value": Object {
                                              "completed": true,
                                              "completed_at": null,
                                              "created_at": "2014-08-28T14:14:28.494Z",
                                              "id": 9000,
                                              "name": "It's Over 9000!!!",
                                              "updated_at": "2015-08-28T14:14:28.494Z",
                                            },
                                          },
                                        ]
                                      }
                                      value={
                                        Object {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "allOf": Array [
                                            Object {
                                              "$schema": "http://json-schema.org/draft-04/schema#",
                                              "properties": Object {
                                                "completed": Object {
                                                  "type": Array [
                                                    "boolean",
                                                    "null",
                                                  ],
                                                },
                                                "name": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "name",
                                                "completed",
                                              ],
                                              "title": "Todo Partial",
                                              "type": "object",
                                              "x-tags": Array [
                                                "Todos",
                                              ],
                                            },
                                            Object {
                                              "properties": Object {
                                                "completed_at": Object {
                                                  "format": "date-time",
                                                  "type": Array [
                                                    "string",
                                                    "null",
                                                  ],
                                                },
                                                "created_at": Object {
                                                  "format": "date-time",
                                                  "type": "string",
                                                },
                                                "id": Object {
                                                  "maximum": 1000000,
                                                  "minimum": 0,
                                                  "type": "integer",
                                                },
                                                "updated_at": Object {
                                                  "format": "date-time",
                                                  "type": "string",
                                                },
                                                "user": Object {
                                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                                  "description": "Here lies the user model",
                                                  "properties": Object {
                                                    "age": Object {
                                                      "maximum": 150,
                                                      "minimum": 0,
                                                      "type": "number",
                                                    },
                                                    "name": Object {
                                                      "description": "The user's full name.",
                                                      "type": "string",
                                                    },
                                                  },
                                                  "required": Array [
                                                    "name",
                                                    "age",
                                                  ],
                                                  "title": "User",
                                                  "type": "object",
                                                  "x-tags": Array [
                                                    "Todos",
                                                  ],
                                                },
                                              },
                                              "required": Array [
                                                "id",
                                                "user",
                                              ],
                                              "type": "object",
                                            },
                                          ],
                                          "title": "Todo Full",
                                          "x-tags": Array [
                                            "Todos",
                                          ],
                                        }
                                      }
                                    >
                                      <Tabs
                                        className="HttpOperation__Schema"
                                        defaultFocus={false}
                                        defaultIndex={null}
                                        forceRenderTabPanel={false}
                                        onSelect={[Function]}
                                        selectedIndex={0}
                                      >
                                        <UncontrolledTabs
                                          className="HttpOperation__Schema"
                                          focus={false}
                                          forceRenderTabPanel={false}
                                          onSelect={[Function]}
                                          selectedIndex={0}
                                        >
                                          <div
                                            className="HttpOperation__Schema"
                                            data-tabs={true}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                          >
                                            <SimpleTabList
                                              key=".0"
                                            >
                                              <TabList
                                                className="bp3-simple-tab-list"
                                              >
                                                <ul
                                                  className="bp3-simple-tab-list"
                                                  role="tablist"
                                                >
                                                  <SimpleTab
                                                    focus={false}
                                                    id="react-tabs-6"
                                                    key=".0"
                                                    panelId="react-tabs-7"
                                                    selected={true}
                                                    tabRef={[Function]}
                                                  >
                                                    <Tab
                                                      className="bp3-simple-tab"
                                                      disabledClassName="disabled-tab"
                                                      focus={false}
                                                      id="react-tabs-6"
                                                      panelId="react-tabs-7"
                                                      selected={true}
                                                      selectedClassName="selected-tab"
                                                      tabRef={[Function]}
                                                    >
                                                      <li
                                                        aria-controls="react-tabs-7"
                                                        aria-disabled="false"
                                                        aria-selected="true"
                                                        className="bp3-simple-tab selected-tab"
                                                        id="react-tabs-6"
                                                        role="tab"
                                                        tabIndex="0"
                                                      >
                                                        Schema
                                                      </li>
                                                    </Tab>
                                                  </SimpleTab>
                                                  <SimpleTab
                                                    focus={false}
                                                    id="react-tabs-8"
                                                    key=".1:$0"
                                                    panelId="react-tabs-9"
                                                    selected={false}
                                                    tabRef={[Function]}
                                                  >
                                                    <Tab
                                                      className="bp3-simple-tab"
                                                      disabledClassName="disabled-tab"
                                                      focus={false}
                                                      id="react-tabs-8"
                                                      panelId="react-tabs-9"
                                                      selected={false}
                                                      selectedClassName="selected-tab"
                                                      tabRef={[Function]}
                                                    >
                                                      <li
                                                        aria-controls="react-tabs-9"
                                                        aria-disabled="false"
                                                        aria-selected="false"
                                                        className="bp3-simple-tab"
                                                        id="react-tabs-8"
                                                        role="tab"
                                                        tabIndex={null}
                                                      >
                                                        application/json
                                                      </li>
                                                    </Tab>
                                                  </SimpleTab>
                                                </ul>
                                              </TabList>
                                            </SimpleTabList>
                                            <SimpleTabPanel
                                              className="p-0"
                                              id="react-tabs-7"
                                              key=".1"
                                              selected={true}
                                              tabId="react-tabs-6"
                                            >
                                              <TabPanel
                                                className="bp3-simple-tab-panel p-0"
                                                forceRender={false}
                                                id="react-tabs-7"
                                                selected={true}
                                                selectedClassName="block"
                                                tabId="react-tabs-6"
                                              >
                                                <div
                                                  aria-labelledby="react-tabs-6"
                                                  className="bp3-simple-tab-panel p-0 block"
                                                  id="react-tabs-7"
                                                  role="tabpanel"
                                                >
                                                  <Component
                                                    maxRows={20}
                                                    schema={
                                                      Object {
                                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                                        "allOf": Array [
                                                          Object {
                                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                                            "properties": Object {
                                                              "completed": Object {
                                                                "type": Array [
                                                                  "boolean",
                                                                  "null",
                                                                ],
                                                              },
                                                              "name": Object {
                                                                "type": "string",
                                                              },
                                                            },
                                                            "required": Array [
                                                              "name",
                                                              "completed",
                                                            ],
                                                            "title": "Todo Partial",
                                                            "type": "object",
                                                            "x-tags": Array [
                                                              "Todos",
                                                            ],
                                                          },
                                                          Object {
                                                            "properties": Object {
                                                              "completed_at": Object {
                                                                "format": "date-time",
                                                                "type": Array [
                                                                  "string",
                                                                  "null",
                                                                ],
                                                              },
                                                              "created_at": Object {
                                                                "format": "date-time",
                                                                "type": "string",
                                                              },
                                                              "id": Object {
                                                                "maximum": 1000000,
                                                                "minimum": 0,
                                                                "type": "integer",
                                                              },
                                                              "updated_at": Object {
                                                                "format": "date-time",
                                                                "type": "string",
                                                              },
                                                              "user": Object {
                                                                "$schema": "http://json-schema.org/draft-04/schema#",
                                                                "description": "Here lies the user model",
                                                                "properties": Object {
                                                                  "age": Object {
                                                                    "maximum": 150,
                                                                    "minimum": 0,
                                                                    "type": "number",
                                                                  },
                                                                  "name": Object {
                                                                    "description": "The user's full name.",
                                                                    "type": "string",
                                                                  },
                                                                },
                                                                "required": Array [
                                                                  "name",
                                                                  "age",
                                                                ],
                                                                "title": "User",
                                                                "type": "object",
                                                                "x-tags": Array [
                                                                  "Todos",
                                                                ],
                                                              },
                                                            },
                                                            "required": Array [
                                                              "id",
                                                              "user",
                                                            ],
                                                            "type": "object",
                                                          },
                                                        ],
                                                        "title": "Todo Full",
                                                        "x-tags": Array [
                                                          "Todos",
                                                        ],
                                                      }
                                                    }
                                                  >
                                                    <JsonSchemaViewer
                                                      maxRows={20}
                                                      schema={
                                                        Object {
                                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                                          "allOf": Array [
                                                            Object {
                                                              "$schema": "http://json-schema.org/draft-04/schema#",
                                                              "properties": Object {
                                                                "completed": Object {
                                                                  "type": Array [
                                                                    "boolean",
                                                                    "null",
                                                                  ],
                                                                },
                                                                "name": Object {
                                                                  "type": "string",
                                                                },
                                                              },
                                                              "required": Array [
                                                                "name",
                                                                "completed",
                                                              ],
                                                              "title": "Todo Partial",
                                                              "type": "object",
                                                              "x-tags": Array [
                                                                "Todos",
                                                              ],
                                                            },
                                                            Object {
                                                              "properties": Object {
                                                                "completed_at": Object {
                                                                  "format": "date-time",
                                                                  "type": Array [
                                                                    "string",
                                                                    "null",
                                                                  ],
                                                                },
                                                                "created_at": Object {
                                                                  "format": "date-time",
                                                                  "type": "string",
                                                                },
                                                                "id": Object {
                                                                  "maximum": 1000000,
                                                                  "minimum": 0,
                                                                  "type": "integer",
                                                                },
                                                                "updated_at": Object {
                                                                  "format": "date-time",
                                                                  "type": "string",
                                                                },
                                                                "user": Object {
                                                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                                                  "description": "Here lies the user model",
                                                                  "properties": Object {
                                                                    "age": Object {
                                                                      "maximum": 150,
                                                                      "minimum": 0,
                                                                      "type": "number",
                                                                    },
                                                                    "name": Object {
                                                                      "description": "The user's full name.",
                                                                      "type": "string",
                                                                    },
                                                                  },
                                                                  "required": Array [
                                                                    "name",
                                                                    "age",
                                                                  ],
                                                                  "title": "User",
                                                                  "type": "object",
                                                                  "x-tags": Array [
                                                                    "Todos",
                                                                  ],
                                                                },
                                                              },
                                                              "required": Array [
                                                                "id",
                                                                "user",
                                                              ],
                                                              "type": "object",
                                                            },
                                                          ],
                                                          "title": "Todo Full",
                                                          "x-tags": Array [
                                                            "Todos",
                                                          ],
                                                        }
                                                      }
                                                    >
                                                      <div />
                                                    </JsonSchemaViewer>
                                                  </Component>
                                                </div>
                                              </TabPanel>
                                            </SimpleTabPanel>
                                            <SimpleTabPanel
                                              className="p-0"
                                              id="react-tabs-9"
                                              key=".2:$0"
                                              selected={false}
                                              tabId="react-tabs-8"
                                            >
                                              <TabPanel
                                                className="bp3-simple-tab-panel p-0"
                                                forceRender={false}
                                                id="react-tabs-9"
                                                selected={false}
                                                selectedClassName="block"
                                                tabId="react-tabs-8"
                                              >
                                                <div
                                                  aria-labelledby="react-tabs-8"
                                                  className="bp3-simple-tab-panel p-0"
                                                  id="react-tabs-9"
                                                  role="tabpanel"
                                                />
                                              </TabPanel>
                                            </SimpleTabPanel>
                                          </div>
                                        </UncontrolledTabs>
                                      </Tabs>
                                    </HttpOperation.Schema>
                                  </div>
                                </HttpOperation.Response>
                              </div>
                            </HttpOperation.Responses>
                          </div>
                        </HttpOperation.Component>
                      </HttpOperation>
                    </div>
                  </MarkdownViewer.Component>
                </ErrorBoundary>
              </MarkdownViewer>
            </MarkdownViewer>
            <Component
              containerRef={
                Object {
                  "current": <div
                    class="flex w-full Page__docs"
                  >
                    <div
                      class="MarkdownViewer Page__content flex-1 p-12"
                    >
                      <div
                        class="HttpOperation"
                      >
                        <div
                          class="HttpOperation__Request"
                        >
                          <div
                            class="HttpSecuritySchemes mb-10"
                          >
                            <div
                              class="text-lg font-semibold"
                            >
                              Authorization
                            </div>
                            <div
                              class="mt-6 border rounded TreeList dark:border-darken"
                            >
                              <div
                                class="TreeListItem HttpSecuritySchemes__SecurityScheme p-4 flex items-start"
                                style="align-items: start;"
                              >
                                <div
                                  style="min-width: 60px;"
                                >
                                  <div>
                                    api_key
                                  </div>
                                  <div
                                    class="text-sm text-green-7 dark:text-green-6"
                                  >
                                    apiKey
                                  </div>
                                </div>
                                <div
                                  class="flex-1 ml-4"
                                >
                                  <div
                                    class="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-7"
                                  >
                                    <p>
                                      Use 
                                      <code
                                        class="bp3-code-editor inline-block line-none isInline"
                                      >
                                        ?apikey=123
                                      </code>
                                       to authenticate requests. It's super secure.
                                    </p>
                                  </div>
                                  <div
                                    class="flex flex-wrap"
                                  >
                                    <span
                                      class="bp3-tag bp3-minimal mt-2 mr-2"
                                    >
                                      <span
                                        class="bp3-text-overflow-ellipsis bp3-fill"
                                      >
                                        Query
                                         parameter name: 
                                        API Key
                                      </span>
                                    </span>
                                  </div>
                                </div>
                              </div>
                              <div
                                class="TreeListItem TreeListItem--striped HttpSecuritySchemes__SecurityScheme p-4 flex items-start"
                                style="align-items: start;"
                              >
                                <div
                                  style="min-width: 60px;"
                                >
                                  <div>
                                    basicKey
                                  </div>
                                  <div
                                    class="text-sm text-orange-7 dark:text-orange-6"
                                  >
                                    http
                                  </div>
                                </div>
                                <div
                                  class="flex-1 ml-4"
                                >
                                  <div
                                    class="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-7"
                                  >
                                    <p>
                                      Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.
                                    </p>
                                  </div>
                                  <div
                                    class="flex flex-wrap"
                                  >
                                    <span
                                      class="bp3-tag bp3-minimal mt-2 mr-2"
                                    >
                                      <span
                                        class="bp3-text-overflow-ellipsis bp3-fill"
                                      >
                                        Scheme: 
                                        basic
                                      </span>
                                    </span>
                                  </div>
                                </div>
                              </div>
                              <div
                                class="TreeListItem HttpSecuritySchemes__SecurityScheme p-4 flex items-start"
                                style="align-items: start;"
                              >
                                <div
                                  style="min-width: 60px;"
                                >
                                  <div>
                                    bearerKey
                                  </div>
                                  <div
                                    class="text-sm text-orange-7 dark:text-orange-6"
                                  >
                                    http
                                  </div>
                                </div>
                                <div
                                  class="flex-1 ml-4"
                                >
                                  <div
                                    class="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-7"
                                  >
                                    <p>
                                      Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.
                                    </p>
                                  </div>
                                  <div
                                    class="flex flex-wrap"
                                  >
                                    <span
                                      class="bp3-tag bp3-minimal mt-2 mr-2"
                                    >
                                      <span
                                        class="bp3-text-overflow-ellipsis bp3-fill"
                                      >
                                        Scheme: 
                                        bearer
                                      </span>
                                    </span>
                                    <span
                                      class="bp3-tag bp3-minimal mt-2 mr-2"
                                    >
                                      <span
                                        class="bp3-text-overflow-ellipsis bp3-fill"
                                      >
                                        Bearer Format: 
                                        Authorization
                                      </span>
                                    </span>
                                  </div>
                                </div>
                              </div>
                              <div
                                class="TreeListItem TreeListItem--striped HttpSecuritySchemes__SecurityScheme p-4 flex items-start"
                                style="align-items: start;"
                              >
                                <div
                                  style="min-width: 60px;"
                                >
                                  <div>
                                    openIdConnectKey
                                  </div>
                                  <div
                                    class="text-sm text-blue-7 dark:text-blue-6"
                                  >
                                    openIdConnect
                                  </div>
                                </div>
                                <div
                                  class="flex-1 ml-4"
                                >
                                  <div
                                    class="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-7"
                                  >
                                    <p>
                                      Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.
                                    </p>
                                  </div>
                                  <div
                                    class="flex flex-wrap"
                                  >
                                    <span
                                      class="bp3-tag bp3-minimal mt-2 mr-2"
                                    >
                                      <span
                                        class="bp3-text-overflow-ellipsis bp3-fill"
                                      >
                                        OpenId Connect URL: 
                                        http://openIdConnect.com
                                      </span>
                                    </span>
                                  </div>
                                </div>
                              </div>
                              <div
                                class="TreeListItem HttpSecuritySchemes__SecurityScheme p-4 flex items-start"
                                style="align-items: start;"
                              >
                                <div
                                  style="min-width: 60px;"
                                >
                                  <div>
                                    oauth2Key
                                  </div>
                                  <div
                                    class="text-sm text-red-7 dark:text-red-6"
                                  >
                                    oauth2
                                  </div>
                                </div>
                                <div
                                  class="flex-1 ml-4"
                                >
                                  <div
                                    class="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-7"
                                  >
                                    <p>
                                      Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.
                                    </p>
                                  </div>
                                  <div
                                    class="flex flex-wrap"
                                  />
                                  <div
                                    class="py-2 mt-2 border-t HttpSecuritySchemes__OAuth2Flow"
                                  >
                                    <div
                                      class="py-2 font-semibold"
                                    >
                                      Implicit
                                       OAuth Flow
                                    </div>
                                    <div
                                      class="flex items-center py-1"
                                    >
                                      <div
                                        class="mr-1"
                                      >
                                        Authorize URL -
                                      </div>
                                      <div>
                                        <a
                                          href="http://authorizationUrl.com"
                                          rel="noopener noreferrer"
                                          target="_blank"
                                        >
                                          http://authorizationUrl.com
                                        </a>
                                      </div>
                                    </div>
                                    <div
                                      class="flex items-center py-1"
                                    >
                                      <div
                                        class="mr-1"
                                      >
                                        Refresh URL -
                                      </div>
                                      <div>
                                        <a
                                          href="http://refreshUrl.com"
                                          rel="noopener noreferrer"
                                          target="_blank"
                                        >
                                          http://refreshUrl.com
                                        </a>
                                      </div>
                                    </div>
                                    <div
                                      class="py-1"
                                    >
                                      Scopes
                                    </div>
                                    <ul
                                      class="list-disc"
                                      style="margin: 0px;"
                                    >
                                      <li
                                        class="py-1"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            write:pets
                                          </span>
                                        </span>
                                         - 
                                        <span
                                          class="text-darken-7 dark:text-lighten-7"
                                        >
                                          modify pets in your account
                                        </span>
                                      </li>
                                      <li
                                        class="py-1"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            read:pets
                                          </span>
                                        </span>
                                         - 
                                        <span
                                          class="text-darken-7 dark:text-lighten-7"
                                        >
                                          read your pets
                                        </span>
                                      </li>
                                    </ul>
                                  </div>
                                  <div
                                    class="py-2 mt-2 border-t HttpSecuritySchemes__OAuth2Flow"
                                  >
                                    <div
                                      class="py-2 font-semibold"
                                    >
                                      Password
                                       OAuth Flow
                                    </div>
                                    <div
                                      class="flex items-center py-1"
                                    >
                                      <div
                                        class="mr-1"
                                      >
                                        Token URL -
                                      </div>
                                      <div>
                                        <a
                                          href="http://tokenUrl.com"
                                          rel="noopener noreferrer"
                                          target="_blank"
                                        >
                                          http://tokenUrl.com
                                        </a>
                                      </div>
                                    </div>
                                    <div
                                      class="flex items-center py-1"
                                    >
                                      <div
                                        class="mr-1"
                                      >
                                        Refresh URL -
                                      </div>
                                      <div>
                                        <a
                                          href="http://refreshUrl.com"
                                          rel="noopener noreferrer"
                                          target="_blank"
                                        >
                                          http://refreshUrl.com
                                        </a>
                                      </div>
                                    </div>
                                    <div
                                      class="py-1"
                                    >
                                      Scopes
                                    </div>
                                    <ul
                                      class="list-disc"
                                      style="margin: 0px;"
                                    >
                                      <li
                                        class="py-1"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            write:pets
                                          </span>
                                        </span>
                                         - 
                                        <span
                                          class="text-darken-7 dark:text-lighten-7"
                                        >
                                          modify pets in your account
                                        </span>
                                      </li>
                                      <li
                                        class="py-1"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            read:pets
                                          </span>
                                        </span>
                                         - 
                                        <span
                                          class="text-darken-7 dark:text-lighten-7"
                                        >
                                          read your pets
                                        </span>
                                      </li>
                                    </ul>
                                  </div>
                                  <div
                                    class="py-2 mt-2 border-t HttpSecuritySchemes__OAuth2Flow"
                                  >
                                    <div
                                      class="py-2 font-semibold"
                                    >
                                      Client Credentials
                                       OAuth Flow
                                    </div>
                                    <div
                                      class="flex items-center py-1"
                                    >
                                      <div
                                        class="mr-1"
                                      >
                                        Token URL -
                                      </div>
                                      <div>
                                        <a
                                          href="http://tokenUrl.com"
                                          rel="noopener noreferrer"
                                          target="_blank"
                                        >
                                          http://tokenUrl.com
                                        </a>
                                      </div>
                                    </div>
                                    <div
                                      class="flex items-center py-1"
                                    >
                                      <div
                                        class="mr-1"
                                      >
                                        Refresh URL -
                                      </div>
                                      <div>
                                        <a
                                          href="http://refreshUrl.com"
                                          rel="noopener noreferrer"
                                          target="_blank"
                                        >
                                          http://refreshUrl.com
                                        </a>
                                      </div>
                                    </div>
                                    <div
                                      class="py-1"
                                    >
                                      Scopes
                                    </div>
                                    <ul
                                      class="list-disc"
                                      style="margin: 0px;"
                                    >
                                      <li
                                        class="py-1"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            write:pets
                                          </span>
                                        </span>
                                         - 
                                        <span
                                          class="text-darken-7 dark:text-lighten-7"
                                        >
                                          modify pets in your account
                                        </span>
                                      </li>
                                      <li
                                        class="py-1"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            read:pets
                                          </span>
                                        </span>
                                         - 
                                        <span
                                          class="text-darken-7 dark:text-lighten-7"
                                        >
                                          read your pets
                                        </span>
                                      </li>
                                    </ul>
                                  </div>
                                  <div
                                    class="py-2 mt-2 border-t HttpSecuritySchemes__OAuth2Flow"
                                  >
                                    <div
                                      class="py-2 font-semibold"
                                    >
                                      Authorization Code
                                       OAuth Flow
                                    </div>
                                    <div
                                      class="flex items-center py-1"
                                    >
                                      <div
                                        class="mr-1"
                                      >
                                        Authorize URL -
                                      </div>
                                      <div>
                                        <a
                                          href="http://authorizationUrl.com"
                                          rel="noopener noreferrer"
                                          target="_blank"
                                        >
                                          http://authorizationUrl.com
                                        </a>
                                      </div>
                                    </div>
                                    <div
                                      class="flex items-center py-1"
                                    >
                                      <div
                                        class="mr-1"
                                      >
                                        Token URL -
                                      </div>
                                      <div>
                                        <a
                                          href="http://tokenUrl.com"
                                          rel="noopener noreferrer"
                                          target="_blank"
                                        >
                                          http://tokenUrl.com
                                        </a>
                                      </div>
                                    </div>
                                    <div
                                      class="flex items-center py-1"
                                    >
                                      <div
                                        class="mr-1"
                                      >
                                        Refresh URL -
                                      </div>
                                      <div>
                                        <a
                                          href="http://refreshUrl.com"
                                          rel="noopener noreferrer"
                                          target="_blank"
                                        >
                                          http://refreshUrl.com
                                        </a>
                                      </div>
                                    </div>
                                    <div
                                      class="py-1"
                                    >
                                      Scopes
                                    </div>
                                    <ul
                                      class="list-disc"
                                      style="margin: 0px;"
                                    >
                                      <li
                                        class="py-1"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            write:pets
                                          </span>
                                        </span>
                                         - 
                                        <span
                                          class="text-darken-7 dark:text-lighten-7"
                                        >
                                          modify pets in your account
                                        </span>
                                      </li>
                                      <li
                                        class="py-1"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            read:pets
                                          </span>
                                        </span>
                                         - 
                                        <span
                                          class="text-darken-7 dark:text-lighten-7"
                                        >
                                          read your pets
                                        </span>
                                      </li>
                                    </ul>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="HttpOperation__Parameters mb-10"
                          >
                            <div
                              class="text-lg font-semibold"
                            >
                              Path Parameters
                            </div>
                            <div
                              class="mt-6 border rounded TreeList dark:border-darken"
                            >
                              <div
                                class="HttpOperation__Parameter p-4 flex items-start TreeListItem"
                                style="align-items: start;"
                              >
                                <div
                                  class="flex flex-1 flex-start"
                                >
                                  <div
                                    style="min-width: 60px;"
                                  >
                                    <div
                                      class="mr-2"
                                    >
                                      todoId
                                    </div>
                                    <div
                                      class="undefined text-sm"
                                    >
                                      string
                                    </div>
                                  </div>
                                  <div
                                    class="flex-1 ml-4"
                                  >
                                    <div
                                      class="flex flex-wrap text-darken-7 dark:text-lighten-6"
                                    />
                                  </div>
                                </div>
                                <div
                                  class="ml-4 text-right"
                                >
                                  <div
                                    class="font-medium"
                                  >
                                    required
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="HttpOperation__Parameters mb-10"
                          >
                            <div
                              class="text-lg font-semibold"
                            >
                              Query Parameters
                            </div>
                            <div
                              class="mt-6 border rounded TreeList dark:border-darken"
                            >
                              <div
                                class="HttpOperation__Parameter p-4 flex items-start TreeListItem"
                                style="align-items: start;"
                              >
                                <div
                                  class="flex flex-1 flex-start"
                                >
                                  <div
                                    style="min-width: 60px;"
                                  >
                                    <div
                                      class="mr-2"
                                    >
                                      completed
                                    </div>
                                    <div
                                      class="undefined text-sm"
                                    >
                                      boolean
                                    </div>
                                  </div>
                                  <div
                                    class="flex-1 ml-4"
                                  >
                                    <div
                                      class="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-6"
                                    >
                                      <p>
                                        Only return completed
                                      </p>
                                    </div>
                                    <div
                                      class="flex flex-wrap text-darken-7 dark:text-lighten-6"
                                    />
                                  </div>
                                </div>
                                <div
                                  class="ml-4 text-right"
                                >
                                  <div
                                    class="text-darken-7 dark:text-lighten-6"
                                  >
                                    optional
                                  </div>
                                </div>
                              </div>
                              <div
                                class="HttpOperation__Parameter p-4 flex items-start TreeListItem TreeListItem--striped"
                                style="align-items: start;"
                              >
                                <div
                                  class="flex flex-1 flex-start"
                                >
                                  <div
                                    style="min-width: 60px;"
                                  >
                                    <div
                                      class="mr-2"
                                    >
                                      limit
                                    </div>
                                    <div
                                      class="undefined text-sm"
                                    >
                                      string
                                    </div>
                                  </div>
                                  <div
                                    class="flex-1 ml-4"
                                  >
                                    <div
                                      class="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-6"
                                    >
                                      <p>
                                        How many todos to limit?
                                      </p>
                                    </div>
                                    <div
                                      class="flex flex-wrap text-darken-7 dark:text-lighten-6"
                                    >
                                      <div
                                        class="mt-2 mr-2"
                                      >
                                        <span
                                          class="bp3-tag bp3-intent-warning bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            Deprecated
                                          </span>
                                        </span>
                                      </div>
                                      <div
                                        class="mt-2 mr-2"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            default
                                            : 
                                            "300"
                                          </span>
                                        </span>
                                      </div>
                                      <div
                                        class="mt-2 mr-2"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            enum
                                            : 
                                            0, 1, 3
                                          </span>
                                        </span>
                                      </div>
                                      <div
                                        class="mt-2 mr-2"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            exclusiveMinimum
                                            : 
                                            0
                                          </span>
                                        </span>
                                      </div>
                                      <div
                                        class="mt-2 mr-2"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            exclusiveMaximum
                                            : 
                                            10
                                          </span>
                                        </span>
                                      </div>
                                      <div
                                        class="mt-2 mr-2"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            minimum
                                            : 
                                            5
                                          </span>
                                        </span>
                                      </div>
                                      <div
                                        class="mt-2 mr-2"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            maximum
                                            : 
                                            10
                                          </span>
                                        </span>
                                      </div>
                                      <div
                                        class="mt-2 mr-2"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            maxItems
                                            : 
                                            10
                                          </span>
                                        </span>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  class="ml-4 text-right"
                                >
                                  <div
                                    class="text-darken-7 dark:text-lighten-6"
                                  >
                                    optional
                                  </div>
                                </div>
                              </div>
                              <div
                                class="HttpOperation__Parameter p-4 flex items-start TreeListItem"
                                style="align-items: start;"
                              >
                                <div
                                  class="flex flex-1 flex-start"
                                >
                                  <div
                                    style="min-width: 60px;"
                                  >
                                    <div
                                      class="mr-2"
                                    >
                                      type
                                    </div>
                                    <div
                                      class="undefined text-sm"
                                    >
                                      string
                                    </div>
                                  </div>
                                  <div
                                    class="flex-1 ml-4"
                                  >
                                    <div
                                      class="flex flex-wrap text-darken-7 dark:text-lighten-6"
                                    >
                                      <div
                                        class="mt-2 mr-2"
                                      >
                                        <span
                                          class="bp3-tag bp3-minimal"
                                        >
                                          <span
                                            class="bp3-text-overflow-ellipsis bp3-fill"
                                          >
                                            enum
                                            : 
                                            "something", "another"
                                          </span>
                                        </span>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  class="ml-4 text-right"
                                >
                                  <div
                                    class="text-darken-7 dark:text-lighten-6"
                                  >
                                    optional
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="HttpOperation__Parameters mb-10"
                          >
                            <div
                              class="text-lg font-semibold"
                            >
                              Header Parameters
                            </div>
                            <div
                              class="mt-6 border rounded TreeList dark:border-darken"
                            >
                              <div
                                class="HttpOperation__Parameter p-4 flex items-start TreeListItem"
                                style="align-items: start;"
                              >
                                <div
                                  class="flex flex-1 flex-start"
                                >
                                  <div
                                    style="min-width: 60px;"
                                  >
                                    <div
                                      class="mr-2"
                                    >
                                      account-id
                                    </div>
                                    <div
                                      class="undefined text-sm"
                                    >
                                      string
                                    </div>
                                  </div>
                                  <div
                                    class="flex-1 ml-4"
                                  >
                                    <div
                                      class="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-6"
                                    >
                                      <p>
                                        Your Stoplight account id
                                      </p>
                                    </div>
                                    <div
                                      class="flex flex-wrap text-darken-7 dark:text-lighten-6"
                                    />
                                  </div>
                                </div>
                                <div
                                  class="ml-4 text-right"
                                >
                                  <div
                                    class="font-medium"
                                  >
                                    required
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="HttpOperation__Body mb-10"
                          >
                            <div
                              class="text-lg font-semibold"
                            >
                              Body
                            </div>
                            <div
                              class="HttpOperation__Schema mt-6"
                              data-tabs="true"
                            >
                              <ul
                                class="bp3-simple-tab-list"
                                role="tablist"
                              >
                                <li
                                  aria-controls="react-tabs-1"
                                  aria-disabled="false"
                                  aria-selected="true"
                                  class="bp3-simple-tab selected-tab"
                                  id="react-tabs-0"
                                  role="tab"
                                  tabindex="0"
                                >
                                  Schema
                                </li>
                                <li
                                  aria-controls="react-tabs-3"
                                  aria-disabled="false"
                                  aria-selected="false"
                                  class="bp3-simple-tab"
                                  id="react-tabs-2"
                                  role="tab"
                                >
                                  Incomplete
                                </li>
                                <li
                                  aria-controls="react-tabs-5"
                                  aria-disabled="false"
                                  aria-selected="false"
                                  class="bp3-simple-tab"
                                  id="react-tabs-4"
                                  role="tab"
                                >
                                  Completed
                                </li>
                              </ul>
                              <div
                                aria-labelledby="react-tabs-0"
                                class="bp3-simple-tab-panel p-0 block"
                                id="react-tabs-1"
                                role="tabpanel"
                              >
                                <div />
                              </div>
                              <div
                                aria-labelledby="react-tabs-2"
                                class="bp3-simple-tab-panel p-0"
                                id="react-tabs-3"
                                role="tabpanel"
                              />
                              <div
                                aria-labelledby="react-tabs-4"
                                class="bp3-simple-tab-panel p-0"
                                id="react-tabs-5"
                                role="tabpanel"
                              />
                            </div>
                          </div>
                        </div>
                        <div
                          class="HttpOperation__Responses"
                        >
                          <div
                            class="flex items-center"
                          >
                            <div
                              class="text-lg font-semibold"
                            >
                              Responses
                            </div>
                          </div>
                          <div
                            class="bp3-button-group mt-6"
                          >
                            <button
                              class="bp3-button bp3-active"
                              type="button"
                            >
                              <span
                                class="bp3-icon bp3-icon-full-circle"
                                icon="full-circle"
                              >
                                <svg
                                  data-icon="full-circle"
                                  fill="green"
                                  height="10"
                                  viewBox="0 0 16 16"
                                  width="10"
                                >
                                  <desc>
                                    full-circle
                                  </desc>
                                  <path
                                    d="M8 0a8 8 0 100 16A8 8 0 108 0z"
                                    fill-rule="evenodd"
                                  />
                                </svg>
                              </span>
                              <span
                                class="bp3-button-text"
                              >
                                200
                              </span>
                            </button>
                            <button
                              class="bp3-button"
                              type="button"
                            >
                              <span
                                class="bp3-icon bp3-icon-full-circle"
                                icon="full-circle"
                              >
                                <svg
                                  data-icon="full-circle"
                                  fill="orange"
                                  height="10"
                                  viewBox="0 0 16 16"
                                  width="10"
                                >
                                  <desc>
                                    full-circle
                                  </desc>
                                  <path
                                    d="M8 0a8 8 0 100 16A8 8 0 108 0z"
                                    fill-rule="evenodd"
                                  />
                                </svg>
                              </span>
                              <span
                                class="bp3-button-text"
                              >
                                401
                              </span>
                            </button>
                            <button
                              class="bp3-button"
                              type="button"
                            >
                              <span
                                class="bp3-icon bp3-icon-full-circle"
                                icon="full-circle"
                              >
                                <svg
                                  data-icon="full-circle"
                                  fill="orange"
                                  height="10"
                                  viewBox="0 0 16 16"
                                  width="10"
                                >
                                  <desc>
                                    full-circle
                                  </desc>
                                  <path
                                    d="M8 0a8 8 0 100 16A8 8 0 108 0z"
                                    fill-rule="evenodd"
                                  />
                                </svg>
                              </span>
                              <span
                                class="bp3-button-text"
                              >
                                404
                              </span>
                            </button>
                            <button
                              class="bp3-button"
                              type="button"
                            >
                              <span
                                class="bp3-icon bp3-icon-full-circle"
                                icon="full-circle"
                              >
                                <svg
                                  data-icon="full-circle"
                                  fill="red"
                                  height="10"
                                  viewBox="0 0 16 16"
                                  width="10"
                                >
                                  <desc>
                                    full-circle
                                  </desc>
                                  <path
                                    d="M8 0a8 8 0 100 16A8 8 0 108 0z"
                                    fill-rule="evenodd"
                                  />
                                </svg>
                              </span>
                              <span
                                class="bp3-button-text"
                              >
                                500
                              </span>
                            </button>
                          </div>
                          <div
                            class="HttpOperation__Response mt-6"
                          >
                            
                            <div
                              class="HttpOperation__Schema"
                              data-tabs="true"
                            >
                              <ul
                                class="bp3-simple-tab-list"
                                role="tablist"
                              >
                                <li
                                  aria-controls="react-tabs-7"
                                  aria-disabled="false"
                                  aria-selected="true"
                                  class="bp3-simple-tab selected-tab"
                                  id="react-tabs-6"
                                  role="tab"
                                  tabindex="0"
                                >
                                  Schema
                                </li>
                                <li
                                  aria-controls="react-tabs-9"
                                  aria-disabled="false"
                                  aria-selected="false"
                                  class="bp3-simple-tab"
                                  id="react-tabs-8"
                                  role="tab"
                                >
                                  application/json
                                </li>
                              </ul>
                              <div
                                aria-labelledby="react-tabs-6"
                                class="bp3-simple-tab-panel p-0 block"
                                id="react-tabs-7"
                                role="tabpanel"
                              >
                                <div />
                              </div>
                              <div
                                aria-labelledby="react-tabs-8"
                                class="bp3-simple-tab-panel p-0"
                                id="react-tabs-9"
                                role="tabpanel"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                }
              }
              padding="12"
              tree={
                Object {
                  "children": Array [
                    Object {
                      "lang": "json",
                      "meta": "http_operation",
                      "type": "code",
                      "value": "{
    \\"id\\": \\"?http-operation-id?\\",
    \\"iid\\": \\"PUT_todos\\",
    \\"method\\": \\"put\\",
    \\"path\\": \\"/todos/{todoId}\\",
    \\"summary\\": \\"Update Todo\\",
    \\"responses\\": [
        {
            \\"code\\": \\"200\\",
            \\"description\\": \\"\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Full\\",
                        \\"allOf\\": [
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Todo Partial\\",
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"completed\\": {
                                        \\"type\\": [
                                            \\"boolean\\",
                                            \\"null\\"
                                        ]
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\",
                                    \\"completed\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Todos\\"
                                ]
                            },
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"id\\": {
                                        \\"type\\": \\"integer\\",
                                        \\"minimum\\": 0,
                                        \\"maximum\\": 1000000
                                    },
                                    \\"completed_at\\": {
                                        \\"type\\": [
                                            \\"string\\",
                                            \\"null\\"
                                        ],
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"created_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"updated_at\\": {
                                        \\"type\\": \\"string\\",
                                        \\"format\\": \\"date-time\\"
                                    },
                                    \\"user\\": {
                                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                        \\"title\\": \\"User\\",
                                        \\"type\\": \\"object\\",
                                        \\"properties\\": {
                                            \\"name\\": {
                                                \\"type\\": \\"string\\",
                                                \\"description\\": \\"The user's full name.\\"
                                            },
                                            \\"age\\": {
                                                \\"type\\": \\"number\\",
                                                \\"minimum\\": 0,
                                                \\"maximum\\": 150
                                            }
                                        },
                                        \\"required\\": [
                                            \\"name\\",
                                            \\"age\\"
                                        ],
                                        \\"x-tags\\": [
                                            \\"Todos\\"
                                        ],
                                        \\"description\\": \\"Here lies the user model\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"id\\",
                                    \\"user\\"
                                ]
                            }
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"id\\": 9000,
                                \\"name\\": \\"It's Over 9000!!!\\",
                                \\"completed\\": true,
                                \\"completed_at\\": null,
                                \\"created_at\\": \\"2014-08-28T14:14:28.494Z\\",
                                \\"updated_at\\": \\"2015-08-28T14:14:28.494Z\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"401\\",
            \\"description\\": \\"Our shared 401 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"401\\",
                                \\"message\\": \\"Not Authorized\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"404\\",
            \\"description\\": \\"Our shared 404 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"404\\",
                                \\"message\\": \\"Not Found\\"
                            }
                        }
                    ]
                }
            ]
        },
        {
            \\"code\\": \\"500\\",
            \\"description\\": \\"Our shared 500 response.\\",
            \\"headers\\": [],
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Error\\",
                        \\"description\\": \\"A standard error object.\\",
                        \\"x-tags\\": [
                            \\"Common\\"
                        ],
                        \\"anyOf\\": [
                            {
                                \\"type\\": \\"object\\",
                                \\"properties\\": {
                                    \\"code\\": {
                                        \\"type\\": \\"string\\"
                                    },
                                    \\"message\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"code\\"
                                ]
                            },
                            {
                                \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                                \\"title\\": \\"Category\\",
                                \\"type\\": \\"object\\",
                                \\"description\\": \\"\\",
                                \\"properties\\": {
                                    \\"name\\": {
                                        \\"type\\": \\"string\\"
                                    }
                                },
                                \\"required\\": [
                                    \\"name\\"
                                ],
                                \\"x-tags\\": [
                                    \\"Pets\\"
                                ]
                            }
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"application/json\\",
                            \\"value\\": {
                                \\"code\\": \\"500\\",
                                \\"message\\": \\"Server Error\\"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    \\"servers\\": [
        {
            \\"url\\": \\"http://todos.stoplight.io\\"
        }
    ],
    \\"request\\": {
        \\"body\\": {
            \\"contents\\": [
                {
                    \\"mediaType\\": \\"application/json\\",
                    \\"schema\\": {
                        \\"$schema\\": \\"http://json-schema.org/draft-04/schema#\\",
                        \\"title\\": \\"Todo Partial\\",
                        \\"type\\": \\"object\\",
                        \\"properties\\": {
                            \\"name\\": {
                                \\"type\\": \\"string\\"
                            },
                            \\"completed\\": {
                                \\"type\\": [
                                    \\"boolean\\",
                                    \\"null\\"
                                ]
                            }
                        },
                        \\"required\\": [
                            \\"name\\",
                            \\"completed\\"
                        ],
                        \\"x-tags\\": [
                            \\"Todos\\"
                        ]
                    },
                    \\"examples\\": [
                        {
                            \\"key\\": \\"Incomplete\\",
                            \\"value\\": {
                                \\"name\\": \\"Docs Module\\",
                                \\"completed\\": false
                            }
                        },
                        {
                            \\"key\\": \\"Completed\\",
                            \\"value\\": {
                                \\"name\\": \\"Studio\\",
                                \\"completed\\": true
                            }
                        }
                    ]
                }
            ]
        },
        \\"query\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"default\\": \\"300\\",
                    \\"enum\\": [
                        0,
                        1,
                        3
                    ],
                    \\"exclusiveMinimum\\": 0,
                    \\"exclusiveMaximum\\": 10,
                    \\"minimum\\": 5,
                    \\"maximum\\": 10,
                    \\"maxItems\\": 10
                },
                \\"deprecated\\": true,
                \\"description\\": \\"How many todos to limit?\\",
                \\"name\\": \\"limit\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Only return completed\\"
                },
                \\"name\\": \\"completed\\",
                \\"style\\": \\"form\\"
            },
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"enum\\": [
                        \\"something\\",
                        \\"another\\"
                    ]
                },
                \\"name\\": \\"type\\",
                \\"style\\": \\"form\\"
            }
        ],
        \\"headers\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Your Stoplight account id\\"
                },
                \\"name\\": \\"account-id\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ],
        \\"path\\": [
            {
                \\"schema\\": {
                    \\"type\\": \\"string\\"
                },
                \\"name\\": \\"todoId\\",
                \\"style\\": \\"simple\\",
                \\"required\\": true
            }
        ]
    },
    \\"tags\\": [
        {
            \\"name\\": \\"Todos\\"
        }
    ],
    \\"security\\": [
        [
            {
                \\"key\\": \\"api_key\\",
                \\"type\\": \\"apiKey\\",
                \\"name\\": \\"API Key\\",
                \\"in\\": \\"query\\",
                \\"description\\": \\"Use \`?apikey=123\` to authenticate requests. It's super secure.\\"
            }
        ],
        [
            {
                \\"key\\": \\"basicKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"basic\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\"
            }
        ],
        [
            {
                \\"key\\": \\"bearerKey\\",
                \\"type\\": \\"http\\",
                \\"scheme\\": \\"bearer\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"bearerFormat\\": \\"Authorization\\"
            }
        ],
        [
            {
                \\"key\\": \\"openIdConnectKey\\",
                \\"type\\": \\"openIdConnect\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"openIdConnectUrl\\": \\"http://openIdConnect.com\\"
            }
        ],
        [
            {
                \\"key\\": \\"oauth2Key\\",
                \\"type\\": \\"oauth2\\",
                \\"description\\": \\"Get access to data while protecting your account credentials. OAuth2 is also a safer and more secure way to give you access.\\",
                \\"flows\\": {
                    \\"implicit\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    },
                    \\"password\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"clientCredentials\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\"
                    },
                    \\"authorizationCode\\": {
                        \\"scopes\\": {
                            \\"write:pets\\": \\"modify pets in your account\\",
                            \\"read:pets\\": \\"read your pets\\"
                        },
                        \\"refreshUrl\\": \\"http://refreshUrl.com\\",
                        \\"tokenUrl\\": \\"http://tokenUrl.com\\",
                        \\"authorizationUrl\\": \\"http://authorizationUrl.com\\"
                    }
                }
            }
        ]
    ]
}",
                    },
                  ],
                  "type": "root",
                }
              }
            >
              <Component
                className="Page__headings"
                headings={Array []}
                minimal={false}
                padding="12"
              />
            </Component>
          </div>
        </Component>
      </Component>
    </div>
  </PageComponent>
</Page>
`;
