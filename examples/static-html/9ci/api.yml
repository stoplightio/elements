openapi: 3.0.3
servers:
  - url: 'https://demo.9ci.io/api'
    description: Default server
  - url: sandbox.9ci.dev/api
    description: Sandbox server
info:
  version: 1.0.0
  title: 9ci Rest Api
  termsOfService: 'http://9ci.com/terms/'
  contact:
    name: 9ci Inc
    url: 'https://9ci.com'
    email: connect@9ci.com
  x-logo:
    url: 'https://www.9ci.com/assets/img/logo.svg'
    altText: 9ci logo
  license:
    name: 9ci Proprietary and Confidential
    url: 'http://www.9ci.com/licenses/LICENSE-2.0.html'
  description: "\nThe 9ci API specification for interoperable cloud-based processing of Accounts Receivable datasets.\n\n# Intro\n\nWelcome to the 9ci RESTful API reference documentation.\n\nRepresentational State Transfer (REST) APIs are service endpoints that support sets of HTTP operations (methods), which provide create, retrieve, update, or delete access to 9ci's application resources. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. You can use your preferred\nHTTP/REST library for your programming language. This document contains the most commonly\nintegrated resources.\n\nThe api.yaml file is available [here](api.yaml).\n\n# API Principles\n\n## Language\n\nIn the specification the key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in [RFC 2119](http://tools.ietf.org/html/rfc2119) and [RFC 8174](http://tools.ietf.org/html/rfc8174).\n\n## Casing\n\nUnless otherwise stated the API is **case sensitive**.\n\nAll names SHOULD be written in camel case, i.e. words are separated by a capital letter and no spaces, with all endpoints and property names starting with a lower case. Example: `helloWorld`. All names MAY also be written in snake_case or kebab-case, i.e. words are separated with one underscore character (_) or one dash character (-) and no spaces, with all letters lower-cased BUT they should not be combined, the follwing would be invalid `foo_bar-baz`. Example: `hello_world`. HTTP header fields follow their respective casing conventions, e.g. `Content-Type` or `9ci-Costs`, despite being case-insensitive according to [RFC 7230](https://tools.ietf.org/html/rfc7230#section-3.2).\n\n## HTTP REST\n\nThis uses [HTTP REST](https://en.wikipedia.org/wiki/Representational_state_transfer) [Level 2](https://martinfowler.com/articles/richardsonMaturityModel.html#level2) for communication between client and back-end server.\n\nPublic APIs are available via HTTPS only. \n\nEndpoints are made use meaningful HTTP verbs (e.g. GET, POST, PUT, PATCH, DELETE) whenever technically possible. If there is a need to transfer big chunks of data for a GET requests to the back-end, POST requests MAY be used as a replacement as they support to send data via request body. \n\nNOTE: Unless otherwise stated, PATCH requests are only defined to work on direct (first-level) children of the full JSON object. Therefore, changing a property on a deeper level of the full JSON object always requires to send the whole JSON object defined by the first-level property.\n\nNaming of endpoints follow the REST principles. Therefore, endpoints are centered around a resource. Resource identifiers SHALL be named with a noun in singular form except for plural actions that can not be modelled with the regular HTTP verbs. Single actions MUST be single endpoints with a single HTTP verb (POST is RECOMMENDED) and no other endpoints beneath it.\n\n## JSON\n\nThe API uses JSON for request and response bodies whenever feasible. Services use JSON as the default encoding. Other encodings can be requested using [Content Negotiation](https://www.w3.org/Protocols/rfc2616/rfc2616-sec12.html). Clients and servers MUST NOT rely on the order in which properties appears in JSON. Collections usually don't include nested JSON objects if those information can be requested from the individual resources.\n\n### Temporal date-time data\n\nDate, time, intervals and durations are formatted based on ISO 8601 or its profile [RFC 3339](https://www.ietf.org/rfc/rfc3339) whenever there is an appropriate encoding available in the standard. All temporal data are specified based on the Gregorian calendar.\n\n# Status codes\n\nThe 9ci API usually uses the following HTTP status codes for successful requests: \n\n- **200 OK**:\n  Indicates a successful request **with** a response body being sent.\n- **201 Created**\n  Indicates a successful request that successfully created a new resource. Sends a `Location` header to the newly created resource **without** a response body.\n- **202 Accepted**\n  Indicates a successful request that successfully queued the creation of a new resource, but it has not been created yet. The response is sent **without** a response body.\n- **204 No Content**:\n  Indicates a successful request **without** a response body being sent.\n\nThe 9ci API has some commonly used HTTP status codes for failed requests: \n\n- **400 Bad Request**:\n  The back-end responds with this error code whenever the error has its origin on client side and no other HTTP status code in the 400 range is suitable.\n\n- **401 Unauthorized**:\n  The client did not provide any authentication details for a resource requiring authentication or the provided authentication details are not correct.\n\n- **403 Forbidden**:\n  The client did provided correct authentication details, but the privileges/permissions of the provided credentials do not allow to request the resource.\n\n- **404 Not Found**:\n  The resource specified by the path does not exist, i.e. one of the resources belonging to the specified identifiers are not available at the back-end.\n  *Note:* Unsupported endpoints MUST use HTTP status code 501.\n\n- **409 CONFLICT**:\n  OptimisticLockingFailureException, version did not match for an edited item and someone or something else \n  changed the data since it was last retrieved\n\n- **422 UNPROCESSABLE_ENTITY**:\n  The server had validation errors on a post or put\n\n- **429 Too Many Requests**:\n  Either the user has requested multiple identical calls or the rate limiting has rejected the allowed number of calls within the 5 minute window. \n\n- **500 Internal Server Error**:\n  The error has its origin on server side and no other status code in the 500 range is suitable.\n\n## Errors\n\n9ci follows and extends Problem Details for HTTP APIs [RFC 7807](https://tools.ietf.org/html/rfc7807). It defines a Problem JSON object using the media type\n`application/problem+json` to provide an extensible human and machine readable\nfailure information beyond the HTTP response status code to transports the\nfailure kind (`type` / `title`) and the failure cause and location (`instant` /\n`detail`). To make best use of this additional failure information, every\nendpoint must be capable of returning a Problem JSON on client usage errors\n({4xx} status codes) as well as server side processing errors ({5xx} status\ncodes).\n\n*Hint:* The media type `application/problem+json` is often not implemented as\na subset of `application/json` by libraries and services! Thus clients need to\ninclude `application/problem+json` in the {Accept}-Header to trigger delivery\nof the extended failure information.\n\nThe base OpenAPI schema definition of the Problem JSON object can be found\nhttps://opensource.zalando.com/restful-api-guidelines/models/problem-1.0.1.yaml[on\nGitHub].\n\n### Error Handling\n\nThe success of requests will be indicated using [HTTP status codes](https://tools.ietf.org/html/rfc7231#section-6) according to [RFC 7231](https://tools.ietf.org/html/rfc7231).\n\nIf the API responds with a status code between 100 and 399 the back-end indicates that the request has been handled successfully.\n\nIf a HTTP status code in the 400 range is returned, the client SHOULD NOT repeat the request without modifications. For HTTP status code in the 500 range, the client MAY repeat the same request later.\n\nAll HTTP status codes defined in RFC 7231 in the 400 and 500 ranges can be used as 9ci error code in addition to the most used status codes mentioned here. Responding with 9ci error codes 400 and 500 SHOULD be avoided in favor of any more specific standardized or proprietary 9ci error code.\n\nIn general an error is communicated with a status code between 400 and 599. Client errors are defined as a client passing invalid data to the service and the service *correctly* rejecting that data. Examples include invalid credentials, incorrect parameters, unknown versions, or similar. These are generally \"4xx\" HTTP error codes and are the result of a client passing incorrect or invalid data. \n\nServer errors are defined as the server failing to correctly return in response to a valid client request. These are generally \"5xx\" HTTP error codes. \n\n###  Problem JSON object\n\nA JSON Problem object will be sent with all responses that have a status code between 400 and 599.\n\n<article>\n\n```json\nHTTP/1.1 422 UNPROCESSABLE_ENTITY\nContent-Type: application/problem+json\nContent-Language: en\n\n{\n  \"status\": 400,\n  \"code\": \"arTran.post.error\",\n  \"title\": \"ArTran Validation Error\",\n  \"detail\": \"Lines dont balance and must sum to ArTran.origAmount\",\n}\n\nOR \n\n{\n  \"status\": 422,\n  \"code\": \"validation.problem\",\n  \"title\": \"ArTran Validation Error(s)\",\n  \"detail\": \"Lines dont balance and must sum to ArTran.origAmount\",\n  \"errors\": [\n    {\n      \"code\": \"NotNull\",\n      \"message\": \"must not be null\",\n      \"field\": \"customer\"\n    },\n    ...\n  ]\n}\n```\n\n``` json\n{\n  \"id\": \"123\",\n  \"code\": \"SampleError\",\n  \"message\": \"A sample error message.\",\n  \"url\": \"https://example.9ci.org/docs/errors/SampleError\"\n}\n```\n\n</article>\n\n### Retry and Exponential Backoff\n\nExponential Backoff is a common design pattern used when interacting with a REST API and is built into many libraries. \nExponential backoff is a technique used to handle network errors in REST APIs by retrying failed \nrequests with increasing delays between attempts. \nThis approach helps prevent server overload and reduces the number of failed requests.\n\nRetry should only really be attempted with 502 and 503\n\n- 502 Bad Gateway \n- 503 Service Unavailable\n\nShould not normally retry the following:\n- 504 Timeout - should not retry without checking if its been processed and might have worked.\n- 500 Internal Error - will almost certainly just error again as its an indication that something is wrong on 9ci's server. \n- 400, 422, 429 - These are expected errors and are indications that something is wrong with the data being sent or the calling side. \n  should never be retried until its been investigated on your side and fixed as it will just error again too.\n\nNOTE: 207 When looking at syncJob, should be looking at the codes in the details, not the main one that returns a 207\n\n\n\n# How to Blank out values\nDuring `update` values for basic types & associations can be set to null by explicitly passing `null` for the field value.\nHere basic field types includes (`strings`, `numbers`, `amounts`, `dates`, `enum`, `currency`, `boolean`)\n\nExample\n\n<article>\n\n```json\nPUT /api/ar/tran/123\n\n{\n  \"num\": null,\n  \"amount\": null,\n  \"tranDate\": null   \n}\n```\n</article>\n\nValue of basic types can be set to null by passing empty string also as shown in below example.\n\n**Note**: Passing `null` explicitly is preferred over blank string.\n\nExample:\n\n<article>\n\n```json\nPUT /api/ar/tran/123\n\n{\n  \"num\": \"\",\n  \"amount\": \"\",\n  \"tranDate\": \"\"   \n}\n```\n</article>\n\n**Note:** Association / relationship value can be set to null by explicitely passing `null` only.\n\nAll values from a **Collection** can be removed by passing empty array as explained in section `Patching Association Collections` below.\n\n\n# Authentication\n\n9ci supports Bearer based token authentication based on the [The OAuth 2.0 Authorization Framework](https://www.rfc-editor.org/rfc/rfc6749)\nThe system can use an Identity Provider such as Okta and also has its own implementation for API usage. \n\n## JWT Token\n\n> Request Method: `POST`  \n> URL Endpoint: `/api/oauth/token`\n\nTo authenticate using basic authentication with a username and password:\nSupply the login credentials and receive a token that can be used to authenticate subsequent API requests.\n\n> NOTE: `grant_type=password` is the default and only supported grant type when using the api as an indentity provider. \n\n<article>\n\n```bash\n#using curl\ncurl -X POST -u someUser:secret_pswd https://rcm-api.9ci.io/api/oauth/token\n\n# using httpie\nhttp -a someUser:secret_knock -b POST  https://rcm-api.9ci.io/api/oauth/token\n\n# using rest call pass in Basic Authorization under headers like below:\npost('oauth/token',{\n  headers: {\n    'Authorization': `Basic ${btoa(`${username}:${password}`)}`\n  }\n}).json();\n\n#would return something like\n{\n    \"username\": \"someUser\",\n    \"roles\": [\n        \"ROLE_Administrator\"\n    ],\n    \"token_type\": \"Bearer\",\n    \"access_token\": \"4g2134lkjlkj1324.....\"\n}\n\n# copy the access_token token into further requests\ncurl -G -H 'Authorization: Bearer 4g2134lkjlkj1324.....' https://rcm-api.9ci.io/api/ar/customer/1\n\n# or using Httpie and environment variable\nACCESS_TOKEN_9CI=\"Bearer 4g2134lkjlkj1324.....\"\nhttps rcm-api.9ci.io/api/ar/customer/1 -A bearer -a \"$ACCESS_TOKEN_9CI\"\n#or this will work too\nhttps rcm-api.9ci.io/api/ar/customer/1 \"Authorization:$ACCESS_TOKEN_9CI\"\n\n```\n\n</article>\n\n### Postman example\n\n<img src=\"openapi/images/postman-basic-auth.png\" alt=\"Postman Basic Auth\" width=\"700\">\n\n\n## Token Exchange\n\nToken exchange in Keycloak is a very loose implementation of the OAuth Token Exchange specification at the IETF.\nThe [Token Exchange OAuth specification](https://datatracker.ietf.org/doc/html/rfc8693) defines \"a lightweigth protocol that enables clients to request and obtain security tokens from authorization servers, including security tokens employing impersonation and delegation\".\nA client may want to exchange a jwt token for a token stored for a Customer's user account.\n\nCurrently `requested_subject` and `grant_type` are the only supported parameter and can be used as in the following example:\n\n| Form Parameters | Desc                                                                                                                               |\n|-----------------|------------------------------------------------------------------------------------------------------------------------------------|\n| __requested_subject__ | REQUIRED. This specifies the user.username (\"subject\") that the token will be generated for.                                       |\n| __grant_type__ | REQUIRED. The value of the parameter must be `urn:ietf:params:oauth:grant-type:token-exchange` or just the alias `token-exchange`. |\n\n<article>\n\n```bash\n#using curl\ncurl -X POST -H 'Authorization: Bearer 4g2134lkjlkj1324.....' \\\n  -d requested_subject=user@customer.com \\\n  -d grant_type=token-exchange \\\n\thttps://rcm-api.9ci.io/api/oauth/token\n\n#would return something like\n{\n    \"username\": \"user@customer.com\",\n    \"roles\": [\n        \"ROLE_Customer\"\n    ],\n    \"token_type\": \"Bearer\",\n    \"access_token\": \"9ads9f8a.....\",\n    \"sub\":\"user@customer.com\"\n}\n\n```\n\n</article>\n\n# API Mango Queries\n\n<!-- https://www.npmjs.com/package/markdown-it-include -->\n\n!!!include(intro-api-mango.md)!!!\n\n# Patching Association Collections\n\nWhen working with collection assoctiaions, such as Tags, there is some special logic using the `op` field.\nvalid values for op are `update`, `remove` and `replace`\n\nOn both PUT or POST `replace` is the default\n\n<article>\n\n```js\n# On a put or post `replace` is the default\n# thie example would add or replace the array if it existed\n{\n  \"id\": 123,\n  tags: [\n    {\"id\": 1}, {\"id\": 2}\n  ]\n}\n```\n\n```js\n# an empty array to will remove all tags that exist for the entity. \n{\n  \"id\": 123,\n  tags: []\n}\n```\n\n```js\n# op:remove one or more existing, example below removes 1 and 3 from list. \n{\n  \"id\": 123,\n  \"tags\": {\n    {\"op\":\"remove\": data: [ {\"id\": 1}, {\"id\": 3} ] }\n  }\n}\n```\n\n```js\n# op:update will append to existing. \n# this example will add tag.id=3 to the list of existing tags\n\n{\n  \"id\": 123,\n  \"tags\": {\n    \"op\": \"update\", data: [\n      {\"id\": 3}\n    ]\n  }\n}\n```\n\n</article>\n\n# Examples with Httpie and Curl\n\n## Httpie vs Curl\n9ci recomends using [Httpie](https://httpie.io/cli) instead of curl. \n\nMany of the examples use the cli `http` command instead of curl. \nThe primary difference to curl is httpie was designed from the ground up for REST APIs.\n\nFrom their website. \n\n> Designed for REST APIs \n> \n> We built HTTPIe from the ground up for painless testing and debugging of APIs, HTTP servers, and web services.\n>\n> - Expressive and intuitive syntax\n> - First-class JSON support\n> - Colorized and formatted terminal output\n> - Sensible defaults for the API era\n> - Persistent sessions\n> - Forms and file uploads\n> - HTTPS, proxies, and authentication support\n> - Support for arbitrary request data and headers\n> - wget-like download mode\n> - Extensions API for authentication, etc.\n> - All that & more in two simple http + https commands\n\n## ACCESS_TOKEN_9CI Variable\n\nIn many examples youll see `\"Authorization:$ACCESS_TOKEN_9CI\"`. \nThis is assumes the you set an environment variable with the value of the token after login.\n\n```bash\nACCESS_TOKEN_9CI=\"Bearer 4g2134lkjlkj1324.....\"\n```\n\nsee the security section for more info. \n\n"
externalDocs:
  description: 9ci Documentation
  url: 'https://9ci.com/documentation/2.0/'
tags:
  - name: appParam
    description: Provides company-specific configuration of application parameters
  - name: activity
    description: |
      Activities track what needs to be done and what has been done
      for an Organization or entity. Activities will generally be a simple note
      or a task/todo item. 
  - name: attachment
    description: >
      This domain links (Activity, Collection, Invoice, Report) to documents on
      the filesystem, like check images or PDFs.
  - name: attachment upload
    description: Upload files and attachments.
  - name: company
    description: >
      This domain represents your organization as a financial entity. There
      could be multiple companies representing different branches of your
      company.
  - name: contact
    description: >
      This is a person with information by which he/she can be contacted. Email,
      phone number, which organization> they're associated with, etc.
  - name: org
    description: >
      This domain represents all organizational units within the system. 
      Customers and CustAccounts are special cases,

      each having their own domain, but each also have corresponding Org
      records.  In addition, all other system client

      organizational information is stored here.  This includes company,
      business units, ops regions, client stores,

      sales regions, etc.  This domain is configurable to accommodate the
      hierarchical and overlay organizational

      structure of a client for reporting, access and data management purposes.


      ### OrgMember and OrgType


      See OrgType and OrgMember Schema


      __OrgType Family Rollup Example__


      ```

      Company
        |- Division
          |- Branch
            |- Customer (BillTo)
              |- CustAccount (ShipTo)

      # With Customer Parent


      Company
        |- Division
          |- Branch
            |- Customer Parent
              |- Customer (BillTo)
                |- CustAccount (ShipTo)

      ```
  - name: tag
    description: >
      This domain is a list of labels that can be applied to various other
      domains, like Customer, CustAccount, etc. The tags can be used in process
      flow and/or as informational categories.
  - name: user
    description: >-
      This domain contains information about users who can login and operate
      this application.
  - name: role
    description: >-
      This is a list of permission groups to allow access to features of this
      application.
  - name: roleUser
    description: >-
      This domain maps users to roles, essentially giving a select group of
      features to the user.
  - name: syncJob
    description: >+
      An instance created right away when "any job" in 9ci is called. Either
      called through restApi from outside, scheduled job in quartz or manually
      started job.

      SyncJob can be purged monthly or daily. (WIP)


      ### SyncJob objects

      - **id** - id of the job

      - **ok** - true/false - true if State.Finished without any issues, false
      if problems

      - **state** - Queued(0), Running(1), Finished(2), Cancelled(3), WTF(4)

      - **sourceId** - HTTP request called with parameters; for example `"POST
      /api/ar/tran/bulk?detailLinkField=arTran_sourceId&headerPathDelimiter=_&attachmentId=123"`

      - **source** - source of the job, value that is passed in `jobSource`
      param; for example: `POST /api/autocash/batch/bulk?jobSource=iControl`
      will have `iControl`

      - **payload** - payload provided, by default we don't return payload on
      get. Use `GET /rally/syncJob/{id}/payload` instead

      - **data** - array of data objects processed

      - **problems** - array of data objects that failed processing with problem
      explanation; for example :
        - "ok": false,
        - "status": 400,
        - "code": "validation.problem",
        - "title": "ArTran Validation Error(s)",
        - "errors": `[{  "code": "invalid.negative.amount","field": "amount"}]`

      ### Common queries


      - by source: `/api/rally/syncJob?q={'source':'iControl'}`

      - by file used in tran bulk import - `/api/rally/syncJob?q={sourceId:
      {"$like": "%EBS_WEST_ARTRAN_20220126114802%"}}`

  - name: agingSetup
    description: >
      Aging places transactions into groups according to how far past due they
      are. AgingSetup configures the aging buckets according to your company's
      needs.
  - name: adjust
    description: >
      This domain represents the adjuster, or initiating transaction, in an
      application or settlement process. Most often it represents a payment, but
      it can also represent an offset operation or a payment reversal
  - name: reason
    description: >
      This domain describes reasons for arTran or tranLine items. These reasons
      are instrumental in how work flows are managed. It equates to the reasons
      for disputes, or returns, or other ways transactions are processed.
  - name: reasonGroup
    description: >-
      This domain categorizes reasons for specific purposes (sales, billing,
      shipping, returns)
  - name: status
    description: This domain describes the status of an ArTran.
  - name: term
    description: 'This domain contains the financial terms of payment. Net30, etc.'
  - name: tran
    description: >
      The ArTran domain is the principal financial repository of the system. 
      Credit memos, debit memos and invoices are represented, along with
      write-offs, disputes, adjustments and payments.  Any transaction that
      affects a financial balance is accomplished and recorded by changes in
      this domain

      ### Common Error Codes when running a query:

      - `error.query.invalid`
        - Must provide a state
        - Additional q restrictions required
        - qSearch with minimum 3 characters is required
      - `error.query.qRequired`
        - must provide query restictions
      - `error.query.duplicate`
        - A user can't run more than one query at a time with the same restrictions
  - name: tranType
    description: 'This domain describes the type of arTran. CM, DM, write-off, etc.'
  - name: tranLine
    description: >
      Directly associated with a single ArTran record, these records represent
      the detail breakdown of the ArTran document.  For an invoice this could
      include line by line product information, tax, freight, service charges
      and comments.  Allocated only if used.
  - name: customer
    description: >-
      This domain represents the principal customer relationship, usually a
      bill-to location.
  - name: custAccount
    description: >
      This domain is optional and is subsidiary to the Customer domain. Each
      CustAccount record represents an entity under a single Customer record.
      That entity is often physical, such as a ship-to under the Customer, but
      it can also be logical, such as a shop account or job account to segregate
      business areas for contractors or material suppliers.
  - name: custClass
    description: Used to categorize levels of risk of a customer.
  - name: custFamily
    description: This domain links customers together in a parent-child relationship.
  - name: glBatch
    description: >-
      Group for gl post to ledger process - group by source of data, glPostDate,
      org and arBatch (for cash activities)
  - name: glJournal
    description: post to ledger gl account activity
  - name: glPostPeriod
    description: gl periods
  - name: refnumGen
    description: >-
      This domain configures the way that reference numbers are managed by this
      system.
  - name: lockbox
    description: This domain stores lockbox information for bank transactions.
  - name: batch
    description: >-
      When transactions are processed in a group (e.g. CashApply) the
      transactions are referenced by a batch. This domain contains the common
      details of the batch.
  - name: setupGroup
    description: >
      This domain helps configure automatic cash processing by grouping and
      providing codes linked to processing rules.
  - name: micrBlacklist
    description: >
      This domain defines a list of bank accounts (routing/account numbers) that
      your organization refuses to do business with.
  - name: reasonTolerance
    description: >
      This domain defines monetary tolerances for reason codes. When a record is
      coded with a certain reason code and then is processed by 9ci, the
      tolerances are used to decide what can be automatically processed and what
      needs human intervention.
  - name: corCode
    description: This domain defines result codes for automatic cash processing by 9ci.
  - name: layoutImport
    description: >
      Defines layouts for importing data files into the database. Each source
      can have one or more layouts.
  - name: layoutRecord
    description: Defines layout information of rows within a layoutImport.
  - name: layoutField
    description: Defines field information of a layoutRecord.
  - name: payment
    description: >
      This domain records transactions used to pay outstanding balances and how
      those balances are applied.
  - name: paymentDetail
    description: >
      For each payment, the paymentDetail lists each transaction which was paid
      by the payment, and the amount paid.
  - name: paymentDetailArTran
    description: >-
      This view pulls information about payments and the transactions they were
      applied to.
  - name: payTran
    description: >
      Payment transactions for credit card and ACH processing


      ### PayTran States


      - __Active__ : The transaction is in process, work in progress, being
      entered.  
        _Example: Present the customer with a view to enter payment info and apply_
        
      - __Ready__  : User approved, ready to call process
        
      - __Posted__ : Payment has been posted to ArTran. Payment is
      Approved/Processed either by gateway or has been sent to bank for ACH.
        Processed means, as far as system knows, funds should be captured. Is ready to be posted to GL.
        For CC has this state temporarily as will immeditately hit gateway and change to either Error or Processed.  
        _Example: Present the customer with a thank you page which displays the billing descriptor._

      - __Processed__ : Payment is posted and ready to be picked up by the
      batch, for ACH this means its waiting to be sent to bank
        For ACH - Moves from Posted -> Processed once its been assigned to ArBatch and sent to bank.
        For CC means it hit gateway and was successful
        _Example:  Present the customer with a thank you page which displays the billing descriptor._

      - __Approved__  : Transaction was/is approved by credit card gateway. Only
      has this state during processing. 
        Will be imediately update to processed. 

      - __Void__      : Voided or cancelled before funds are removed from
      customer's account.


      - __Declined__  : A payment transaction is not approved by the issuing
      bank. 
        A reason code is supplied, which describes why the transaction is declined, such as: insufficient funds, incorrect billing address or CVV, etc  
        _Example: Show the user declined and give opportunity to change_

      ### Example UI Flow:


      This flow assumes the PayTran will be saved in multiple steps.


      1. Customer sets up a payment and selects the invoices to pay.

      2. Save as a PayTran with an __Active__ state as Customer is entering
      information to `POST /ipay/payTran` and `PUT /ipay/payTran`.

      3. The Customer is asked to enter payment instruments (existing Wallet or
      a new instrument).

      4. The Customer is presented with a final summary widget for "Approval"
      with what will be charged to credit card or ACH.

      5. When the Customer clicks "Approve / Submit" `POST
      /ipay/payTran/{ID}/process` is called to start the processing and posting
      work flow.

      6. In the case of a credit card transaction will receive a response where
      state can be checked for `Declined`


      <!---

      ### Example Flow (Create with Ready):


      This creates the `PayTran` with `Ready` state, and posts the PayTran into
      ArTran and ArAdjusts. Primary use is for ACH trans.

      (system must be configured with key `nine.ipay.payTran.enableReadyCreate:
      true` to allow this)


      1. Customer sets up a payment in the UI external from 9ci.

      2. All initial validation and confirmations is done before its passed to
      9ci.

      3. The API is then called `POST /ipay/payTran` with data that has `state:
      Ready`.

      4. This will save the PayTran and it's lines, post the payment to ArTran
      and apply/adjust the transactions for the PayTran lines

      5. Any errors on any step will "rollback" the save so its an "all or
      nothing" trasaction save and post.



      ![PayTran Flow](openapi/images/payTran-flows.png)

      -->


      ### Error/Validation Codes

      In addition to the standard validation errors you can receive ipay error
      codes (example under post ipay/wallet)


      #### PayTran post/put

      - `invalid.state`: 'The state requires a wallet to be assigned'

      - `invalid.payAmount`: 'amount must be greater than 0'


      #### PayTran Process

      - `ipay.error.payTran.processStateInvalid`: State must be Ready or
      Inactive to call process and post

      - `ipay.error.payTran.lineSumMatch`: Apply Amount is less than the line
      totals

      - `ipay.error.payTran.prepayLines`: Pre-payments can not be applied with
      lines

      - `ipay.error.payTran.creditCardDisabled`: Credit card processing is not
      enabled

      - `validation.problem`: `code: "Max"`, `field: "amount"`, `message`: Must
      be less than or equal to 999999.99

      - `adjust.error.over-application`: Can't over apply -100 to tran with open
      amount 0 on refnum: 12345


      ### Testing Data


      #### ACH RoutingNum


      - `021000021`

      - `011401533`

      - `091000019`


      ### ACH Simulation


      Normally banks don't offer an easy way to do functional End-to-End
      testing.

      To do this we provide :


      - A simulation to create and post ArBatches from the PayTrans

      - Returns simulation to mock what happens when an invalid account or
      insufficient funds return is sent back


      To simulate a return (where the bank rejects the ACH payment) enter an
      accountNum that ends with one of the folllowing:


      - `01` - for `R01(Insufficent funds)`

      - `02` - for `R02("Bank account closed")`

      - `03` - for `R03("Unable to locate account or no account")`

      - `29` - for `R29("Corporate customer states debit is not authorized")`


      With simulation enabled, the PayTran will still process succesfully just
      as it would in production. 

      The return will be not be processed until the PayTran batch is created
      with `POST /api/banks/ach` which will:

      1. create the return batch with returns paytrans

      2. create the debit memos on the customer accounts

      3. sends the returns notification emails


      Normally, in production (when simulation will not be enabled) the returns
      file is generated by the bank

      the next day following the ACH origination file, and is processed with by
      calling `PUT /api/banks/ach?type=returns`
  - name: wallet
    description: >
      Saved customer payment types. Can contain account info for ACH or link to
      a token for saved credit cards.


      All of the following are valid when using the iFrame as well and the same
      is in the events. 


      ### Common ACH Error Codes:


      | Code                                    |
      Description                                                      |
      Fields                      |

      |-----------------------------------------|------------------------------------------------------------------|-----------------------------|

      | `ipay.error.wallet.routingNumChecksum`  | Invalid routing number.
      Checksum failed                          | routingNum                  |

      | `ipay.error.wallet.accountLength`       | Length must be between 0 and
      17                                  | accountNum                  |

      | `ipay.error.wallet.notNumeric`          | Routing/Account number are not
      numeric                           | accountNum, routingNum      |

      | `ipay.error.wallet.duplicate`           | A saved wallet already exists
      for the routing and account number | accountNum, routingNum      |

      | `ipay.error.wallet.ccExpiry`            | Expiration date must be in
      future and within 10 years            | ccExpireYear, ccExpireMonth |

      | `ipay.error.wallet.paySchedule`         | Wallet used for PaySchedule
      must have isSaved=true               | isSaved                     |


      ### Common Card Error Codes:


      | Code                                   |
      Description                                           |
      Fields                      |

      |----------------------------------------|-------------------------------------------------------|-----------------------------| 

      | `ipay.error.wallet.duplicate`          | A Wallet with this token
      already exists               | accountNum, routingNum      |

      | `ipay.error.wallet.ccExpiry`           | Expiration date must be in
      future and within 10 years | ccExpireYear, ccExpireMonth |

      | `ipay.error.wallet.paySchedule`        | Wallet used for PaySchedule
      must have isSaved=true    | isSaved                     |



      <article>


      ### Example Validation Error


      ```json

      HTTP/1.1 422 UNPROCESSABLE_ENTITY

      Content-Type: application/problem+json

      Content-Language: en
        
      {
        "status": 422,
        "code": "validation.problem",
        "title": "Wallet Validation Error(s)",
        "errors": [
          {
            "code": "NotNull",
            "message": "must not be null",
            "field": "customer"
          },
          {
            "code": "ipay.error.wallet.accountLength",
            "message": "Length must be between 0 and 17",
            "field": "accountNum"
          }
        ]
      }

      ```


      </article>
  - name: gl
    description: >+
      Operations on GL data can be grouped by daily and monthly processes.


      ### Daily (end of the day)


      - **Post Gl Data `gl/post`**


      Each process in 9ci that affects GL generates ArTranJournal and
      ArAdjustJournal records.

      For example; when arTran records are created for payments, credit memos or
      write-offs, ArTranJournal records are also created to track the GL effect
      of these transactions. When payments are applied to invoices or credit
      memos, ArAdjustJournal records are created to show the GL effect of how
      the payment is applied and whether write-offs are involved.

      As systems and users are processing data more ArTranJournal and
      ArAdjustJournal records are created.


      `gl/post` looks for all not posted arTranJournals and arAdjustJournals
      (with null glPostBatchId) and

      groups them into glBatches while also creating summary glJournal records.
      The last step assigns glPostBatchId on them, so they are not picked up
      again.

      At that point the data is "posted to gl" and payments cannot be unposted
      anymore.


      Users can see posted to gl data by displaying GlBatches along with their
      GlJournal records.


      `gl/post` returns data with result objects: `ok:true` with id of glBatch
      and `ok:false` with the problem description


      - **Export Gl Data `gl/export`**


      After calling `gl/post` and data is posted to the GlJournal and GlBatches,
      we can export them out from 9ci.

      `gl/export` looks for all successful not exported GlBatches and generates
      data with json for each GlBatch using it’s assssociated GlJournal records.

      Any failed GlBatches are flagged as problems with error description under
      errors. The last step assigns syncJobId on GlBatches, so they are not
      picked up for export again and can be called by syncJobId for export.


      ### Monthly  (end of the month)


      - **Close gl period `gl/closePeriod`**


      Closing glPostPeriod is updating `isClosed` flag on the record. Before we
      set the flag system is validating if period can be closed. 

      Validation can be custom per client, for example if all cash batches are
      posted or if glBatches are exported. 


      - **Add new open gl period `POST /ar/glPostPeriod`**


      New glPostPeriod can be added at any time, no need to wait for end of the
      month. Usually clients create all periods for a year up front. Gl Period
      should be added as open (isClosed=false). Unique constraint is on name and
      org (one period per org)


  - name: ach
    description: >
      ACH processing for creating Batches, generating origination files and
      transfering via sftp to configured banks.

      Will also scan for Returns files and Confirmation files on banks sftp.


      ### Simulation


      [See the docs under PayTran](#ach-simulation)
  - name: cards
    description: Credit card batch posting
  - name: inbound
    description: 'Import files from bank into a Batch, such as BAI2 and Wires.'
  - name: activityNote
  - name: orgTypeSetup
  - name: partitionOrg
  - name: adjustJournal
  - name: adjustLine
  - name: bank
  - name: bankAccount
  - name: custAccountType
  - name: custSetup
  - name: glAccount
  - name: tranJournal
  - name: paymentDeleted
  - name: paymentMultiHit
  - name: paymentMultiHitArTrans
  - name: paySchedule

paths:
  '/rally/syncJob/{id}/payload':
    get:
      tags:
        - syncJob
      summary: Get SyncJob payload
      description: Retrieve the payload json that was the source for the syncjob
      operationId: getSyncJobByIdPayload
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Payload data
          content:
            application/json:
              schema:
                type: object
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /upload:
    post:
      tags:
        - attachment
      summary: Upload a attachment
      description: >-
        Upload an attachment file. Works in 2 ways with mutipart and stream, see
        example.
      operationId: uploadAttachment
      parameters:
        - name: name
          in: query
          description: the file name for attachment such a 'invoice.pdf'
          schema:
            type: string
        - name: file
          in: query
          description: if using multipart then this is where the file should be
      responses:
        '201':
          description: Attachment Resource or object with tempFileName
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: shell
          source: >
            # upload file with stream1

            curl -X POST "https://sandbox.9ci.io/api/upload?name=big_file.zip" \
              -H "Content-Type: application/octet-stream" \
              -H 'Authorization: Bearer {access-token}' \
              --data-binary "@big_file_12345.zip"
            # will get attachment id and info back


            # upload with multipart form. -F options will add
            enctype="multipart/form-data" to request and POST is default

            curl https://sandbox.9ci.io/api/upload \
              -H 'Authorization: Bearer {access-token}' \
              -F 'file=@foo.md'
            # only places file on server and will return something like
            {"tempFileName":"foo6998714420345471156.md"}

            # as attachemnt has not been created yet. if needed a second call
            would be made with attachment info and this tempFileName
  '/download/{id}/{name}':
    get:
      tags:
        - attachment
      summary: Download an attachment
      description: 'Download an attachment using id, filename is optional'
      operationId: downloadAttachment
      parameters:
        - name: id
          in: path
          description: the attachment id
          schema:
            type: integer
            format: int64
        - name: name
          in: path
          description: the optional filename (attachment.name field) of the attachment
          schema:
            type: string
      responses:
        '200':
          description: The file stream
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # download a file, the 'some_file.zip' after the attachment id is
            optional here

            # but useful for browser links as it gives a default name for saving

            curl "https://sandbox.9ci.io/api/download/1234/some_file.zip" \
              -H 'Authorization: Bearer {access-token}' \
              --output some_file.zip

            curl "https://sandbox.9ci.io/api/download/99/IN_99.pdf" \
              -H 'Authorization: Bearer abt3csf08ihe35l6j8l2ikn2pf7j0bkh' \
              --output IN_99.pdf
  /autocash/payment/rpc:
    post:
      tags:
        - payment
      summary: RPC Operations
      description: RPC operation for a payment such as correction and reconcile
      operationId: paymentRpc
      parameters:
        - name: op
          in: query
          schema:
            type: string
            enum:
              - correct
              - autopay
              - atob
              - reconcile
              - post
              - unpost
              - reverse
              - mergeAuto
              - removeDetail
              - setupCustomer
          description: |
            The process to run on the payment:
              * `atob` - run autopay apply to oldest balance
              * `autopay` - run autopay on the payment
              * `correct` - correct the payment
                - `reset` - (default: true) when passd along with ids it will reset the reconcile before correcting
                - `reconcile` - (default: true) when passd along with ids will attempt to reconcile after correction
              * `delete` - delete payment (added to rpc so we can delete multiple payments)
              * `mergeAuto` - merge payment with remittance detail from batch with BatchType.Merge
              * `post` - post the payment to be ready for sync with AR
                - `correct` - when passed in along along with op=post, will correct and reconcile first
              * `reconcile` - reconcile the payment
              * `removeDetail` - clears the payment detail
              * `reverse` - reverse the payment if its been posted and pushed to AR
              * `unpost` - unpost the payment
                - `remove` - when passed in along with op=unpost, will remove the payments from the batch as well
              * `setupCustomer` - Setup customer on payment
      requestBody:
        description: Payment resource
        required: true
        content:
          application/json:
            schema:
              properties:
                ids:
                  type: array
                  description: the array of payment ids for the operation
      responses:
        '200':
          $ref: '#/components/responses/200_Result'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # correct

            curl -X POST
            'http://demo.9ci.io/api/autocash/payment/rpc?op=correct' \

            -H 'Content-Type: application/json' \

            -H 'Authorization: Bearer {access-token}' \

            --data '{
              ids:[123, 456]
              ...
            }'


            # reconcile

            curl -X POST
            'http://demo.9ci.io/api/autocash/payment/rpc?op=reconcile' \

            ...

            --data '{
              ids:[123, 456]
              glPostDate: 2022-02-28
              comments: (String) comments for reversal
              reasonId: (long) reason id to be set on artran pa
              ...
            }'
  /autocash/paymentDetail/rpc:
    post:
      tags:
        - paymentDetail
      summary: RPC Operations
      description: >-
        RPC operation for a paymentDetail such as createFamily on customer with
        payment's customer
      operationId: paymentDetailRpc
      parameters:
        - name: op
          in: query
          schema:
            type: string
            enum:
              - createFamily
              - setupCustomer
          description: |
            The process to run on the paymentDetail:
              * `createFamily` - system will find customer from paymentDetail (even only from custNum) and set family with customer on the payment.
                - `reset` - when passed as true along with ids, it will replace the cust family parent if other customer is already set as parent.
                - `merge` - when passed as true along with ids, it will merge the customer families of payment detail with payment.
                - only one of the `reset` or `merge` can be passed.
              * `setupCustomer` - Setup customer on payment detail
      requestBody:
        description: PaymentDetail resource
        required: true
        content:
          application/json:
            schema:
              properties:
                ids:
                  type: array
                  description: the array of paymentDetail ids for the operation
      responses:
        '200':
          $ref: '#/components/responses/200_Result'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # Create Family

            curl -X POST
            'http://demo.9ci.io/api/autocash/paymentDetail/rpc?op=createFamily'
            \

            -H 'Content-Type: application/json' \

            -H 'Authorization: Bearer {access-token}' \

            --data '{
              ids:[123, 456]
              ...
            }'


            # Create Family - reset parent, if exists

            curl -X POST
            'http://demo.9ci.io/api/autocash/paymentDetail/rpc?op=createFamily&reset=true'
            \

            ...

            --data '{
              ids:[123, 456]
              ...
            }'



            # Create Family - Merge family, if exists

            curl -X POST
            'http://demo.9ci.io/api/autocash/paymentDetail/rpc?op=createFamily&merge=true'
            \

            ...

            --data '{
              ids:[123, 456]
              ...
            }'
  /autocash/batch/rpc:
    post:
      tags:
        - batch
      summary: RPC Operations
      description: RPC operation for a batch such as correct and imports
      operationId: batchRpc
      parameters:
        - name: op
          in: query
          schema:
            type: string
            enum:
              - correct
              - post
              - importBatch
              - importFile
          description: |
            The process to run on the batch:
              * `correct` - correct the batch
              * `post` - post the batch to ready it for sync with the AR
                 - `correct` (default: false) - when passed in as true, along with op=post, will correct and reconcile first
              * `importBatch` - import scan a defined server directory for files, such as lockbox files etc.. ids are not relvant for this one
                pass in the following
                - `fileName` - the name of file to import
                - `filePath` - the relative dir
                - `fileLayout` - the file layout mapping. name from AcLayoutImport
              * `importFile` - imports an uploaded file specified in the tempFileName parameter. Expects a layout id to be passed.
                See the api/upload endpoint for more info on how to upload file first
                - `fileLayout` - AcLayoutImport name
                - `tempFileName` - the tempFileName from the fileUpload
      requestBody:
        description: Batch resources
        required: false
        content:
          application/json:
            schema:
              properties:
                ids:
                  type: array
                  description: one or more batch ids for the operation
      responses:
        '200':
          $ref: '#/components/responses/200_Result'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # correct

            curl -X POST 'http://rcm.9ci.dev/api/autocash/batch/rpc?op=correct'
            \

            -H 'Content-Type: application/json' \

            -H 'Authorization: Bearer {access-token}' \

            --data '{
              ids:[123, 456]
              ...
            }'


            # POST with "correct" before post

            curl -X POST
            'http://rcm.9ci.dev/api/autocash/batch/rpc?op=post&correct=true' \

            -H 'Content-Type: application/json' \

            -H 'Authorization: Bearer {access-token}' \

            --data '{
              ids:[123, 456]
              ...
            }'


            # upload and import file (auth header omitted for brevity)

            curl https://sandbox.9ci.io/api/upload -F 'file=@somePayments.xlsx'

            # the returned value will be the tempFileName to pass to the rpc
            call

            curl -X POST
            'http://demo.9ci.io/api/autocash/batch/rpc?op=importFile' [add auth
            info]\

            --data '{
              layoutId: 123
              tempFileName: somePayments1233445.xlsx
            }'
  '/autocash/batch/{id}/void':
    post:
      tags:
        - batch
      summary: Void Batch
      description: Batch can be voided if it's not posted and has no payments.
      operationId: voidBatch
      parameters:
        - name: id
          in: path
          description: the batch id
          schema:
            type: string
      responses:
        '200':
          description: The updated batch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  /autocash/batch/auto-match:
    post:
      tags:
        - batch
      summary: Auto-Match
      operationId: postAutoMatchBatch
      description: >
        Create Auto-Match Batches to match credit (CM, OA, etc) and debit (DM,
        IN) transactions based on the

        query `q` argument thats passed in to body parameters. `q` should
        contain mango query under the `debitTran`

        and the `creditTran` properties. These are aliases for the ar/tran and
        any valid mango query for the tran

        endpoint it valid here.


        Can be thought of as running 2 queries.


        1. `creditTran` - is the query against the ar/tran with that will have
        the criteria
           `amount <  0 AND state = 0` appended to whats passed in via `q.creditTran`
        2. `debitTran` - is the query against the ar/tran with that will have
        the criteria
           `amount >  0 AND state = 0` appended to whats passed in via `q.debitTran`
        3. `matchClause` - these will then be joined together using whats passed
        in via this argument
            and will have the criteria `creditTran.customer = debitTran.customer` appended.

        See examples for more details
      parameters:
        - $ref: '#/components/parameters/async'
      requestBody:
        $ref: '#/components/requestBodies/batchAutoMatchPostBody'
      responses:
        '201':
          $ref: '#/components/responses/201_SyncJobBatch'
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Shell
          lang: bash
          source: >
            # auto-match with post


            #Note Q is optional, any combination of the supported Q criteria can
            be passed


            #example when autoMatch filters:

            # excludes customers with setup.class1.id =6

            # excludes customers with PUBLIX in it's name (NOTE! we can have
            only one `not` q key and it;s hard coded to cust name)

            # arTran (debits) can not have tag ids 40 or 51

            # credits can not have tag ids 50 or 51

            # arTran (debits) and credits need to have tranDate before
            2024-09-16

            POST https://rcm.9ci.dev/api/autocash/batch/auto-match \

            "Authorization:$ACCESS_TOKEN_9CI" \

            --raw '{
              "orgs": [
                {"id": 58}, {"id": 59}
              ],
              "matchClause": "debitTran.refnum = creditTran.ponum AND abs(creditTran.amount) <= debitTran.amount",
              "post": true,
              "q": {
                     "debitTran" : {
                         "customer.setup.class1.id": {"$ne": 6},
                         "$not"                    : {
                             "customer.name": {"$like": "%PUBLIX%"},
                             "tags"         : {{"id": 50}, {"id": 51}}
                         },
                         "tranDate": {"$lte": "2024-09-20"},
                     },
                     "creditTran": {
                         "$not"    : {
                             "tags": {{"id": 40}, {"id": 51}}
                         },
                         "tranDate": {"$lte": "2024-09-17"}
                     }
                 }
            }'


            # response example for 2 orgs whre 2 batches are created but 1
            failed on posting
              {
                "id": 1001,
                "ok": false,
                "state": "Finished",
                "sourceId": "POST /api/autocash/batch/auto-match",
                "data": [
                  {
                    "id": 123,
                    "lockbox": "MANUAL",
                    "controlAmount": 0.00,
                    "org": {
                      "id": 58,
                      "num": "NEW",
                      "type": "Division"
                    }
                  },
                  {
                    "id": 124,
                    "lockbox": "MANUAL",
                    "controlAmount": 0.00,
                    "org": {
                      "id": 59,
                      "num": "DEN",
                      "type": "Division"
                    }
                  }
                ],
                "problems": [
                  {
                    "ok": false,
                    "status": 400,
                    "code": "autocash.posting.error.validatePaymentPostedDate",
                    "title": "Posting error",
                    "detail": "Payment id:120 and/or its batch had an invalid posted date 2024-1-1",
                    "payload": [
                      124
                    ]
                  }
                ]
              }
  /autocash/batch/write-off:
    post:
      tags:
        - batch
      summary: Write-Offs
      description: Creates batches based on auto write-off rules
      operationId: postWriteOffBatch
      parameters:
        - $ref: '#/components/parameters/async'
      requestBody:
        $ref: '#/components/requestBodies/batchWriteOffPostBody'
      responses:
        '201':
          $ref: '#/components/responses/201_SyncJobBatch'
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Shell
          lang: bash
          source: |+
            # write-off with post
            # for JAC division for active customers
            # and customer class1.id <> 6
            # and transaction tag ids are not in 50 or 51

            POST https://rcm.9ci.dev/api/autocash/batch/write-off \
            "Authorization:$ACCESS_TOKEN_9CI" \
            --raw '{
              "orgs": [
                {"id": 58}, {"id": 59}
              ],
              "post": true,
              "q": {
                  "state":0,
                  "amount": {"$lt": 5},
                  "customer":{"setup":{"class1":{"id":{"$ne" : 6}}}},
                  "tags" : {"id": {"$nin" : [50,51]}}
              }
            }'

  /ar/tran/rpc:
    post:
      tags:
        - tran
      summary: RPC Operations
      description: RPC operation for an ArTran such as reverse ot invoice image url
      operationId: tranRpc
      parameters:
        - name: op
          in: query
          schema:
            type: string
            enum:
              - reverse
              - imageUrl
          description: >
            The process to run, all expect either ids object in body or id query
            param (unless noted otehrwise):
              * `reverse` - reverse the payment tran if its been posted and pushed to AR, unpost. Currently will error if more than one adjust for the tran
              * `imageUrl` - gets imageUrl as a result object
      requestBody:
        description: ArTran list of ids
        required: true
        content:
          application/json:
            schema:
              properties:
                ids:
                  type: array
                  description: the array of arTran ids for the operation
      responses:
        '200':
          $ref: '#/components/responses/200_Result'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # NOTE: ids can be as query param or in body.

            # reverse with ids in the body

            curl -X POST 'http://dev.9ci.io/api/ar/tran/rpc?op=reverse' \

            ...

            --data '{
              ids:[123, 456]
              ...
            }'


            # imageUrl -- get url to view invoice image, ids as query params.

            curl -X POST
            'http://dev.9ci.io/api/ar/tran/rpc?op=imageUrl&ids=123,456


            # with example reponse

            HTTP/1.1 200

            [
              {"id":123, "url": "https://images.company.com/abc/123"},
              {"id":456, "url": "https://images.company.com/abc/456"}
            ]
  /ar/exportSync:
    post:
      tags:
        - tran
      summary: ExportSync
      description: >
        Export payments application from 9ci. Data is exported in ArAdjustOutApi
        payment object.


        **ArAdjustOutApi** has **trans list** - optional - list of created
        transaction (for unapplied payment, the payment itself)

        and **adjust object** - optional - arAdjust object with arTran and lines
        (doesn't exist if payment is not applied)


        **No data to export**

        When there's no data to export no SyncJob is created, and response is
        returned with code  `exportSync.emptyData`
      operationId: exportSync
      parameters:
        - $ref: '#/components/parameters/q'
      responses:
        '200':
          description: No data to export
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '201':
          description: Export Job created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            #  You can use partitionOrg or member fields in q for exportSync

            # call exportSync for single partitionOrg

            curl -X POST
            "https://sandbox.9ci.io/api/ar/exportSync?q={partitionOrgId: 106}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            # call exportSync for list of partitionOrgs

            curl -X POST
            "https://sandbox.9ci.io/api/ar/exportSync?q={partitionOrgId: [106,
            107]}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'


            # call exportSync for list of divisions

            curl -X POST
            "https://sandbox.9ci.io/api/ar/exportSync?q={partitionOrgId: [106,
            107]}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            ## Existing calls with member.divisionId would work, but using
            partitionOrgId is recommended

            curl -X POST
            "https://sandbox.9ci.io/api/ar/exportSync?q={member.divisionId:
            [106, 107]}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'


            # RESPONSE


            # call defaults to async=true so job id is returned with
            state=Running

            HTTP/1.1 207

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/ar/exportSync?q={partitionOrgId: 106}",
              "data": []
            }


            # RESPONSE WITH PROCESSED DATA:


            # call JobId to receive processed data

            HTTP/1.1 207

            {
              "id": 1000,
              "ok": true ,
              "state": "Finished",
              "sourceId": "POST /api/ar/exportSync?q={partitionOrgId: 106}",
              "data": [
                {  ### First payment, pays 1 invoice and creates CM (2 new ArTrans CM and oDM)
                    "trans": [
                        {
                            "id": 616,
                            "createdDate": "2009-07-19T17:31:21",
                            "term": {
                                "id": 12
                            },
                            "discAmount": 0.0000,
                            "dueDate": "2009-07-19",
                            "editedDate": "2009-07-19T17:31:21",
                            "version": 1,
                            "tranType": {
                                "id": 30
                            },
                            "state": 0,
                            "currency": "USD",
                            "member": {
                                "id": 616,
                                "branch": {
                                    "num": "Chi"
                                }
                            },
                            "tranDate": "2009-07-19",
                            "glAcct": "20110-000",
                            "editedBy": 107,
                            "docType": "CM",
                            "companyId": 2,
                            "ext": {
                                "id": 616,
                                "bolnum:": 123
                            },
                            "glPostDate": "2009-07-19",
                            "refnum": "1000",
                            "flex": {
                                "id": 616,
                                "text1": "test"
                            },
                            "customer": {
                                "id": 205,
                                "num": "K14700"
                            },
                            "autoCash": {
                                "id": 616,
                                "createdByPayId": 619
                            },
                            "source": {
                                "id": 616,
                                "sourceId": 616,
                                "sourceType": "App"
                            },
                            "ponum": "cm_test",
                            "related": {
                                "id": 616
                            },
                            "glPostPeriod": "200612",
                            "origAmount": -10.0000,
                            "createdBy": 107,
                            "createdArBatch": {
                                "id": 123
                            },
                            "status": {
                                "id": 1
                            },
                            "amount": -10.0000,
                            "dispute": {
                                "id": 616
                            },
                            "custNum": "K14700"
                        },
                        {
                            "id": 622,
                            "createdDate": "2009-07-19T17:31:21",
                            "term": {
                                "id": 12
                            },
                            "discAmount": 0.0000,
                            "dueDate": "2009-07-19",
                            "editedDate": "2009-07-19T17:31:21",
                            "version": 1,
                            "tranType": {
                                "id": 42
                            },
                            "state": 1,
                            "currency": "USD",
                            "member": {
                                "id": 622,
                                "branch": {
                                    "num": "Chi"
                                }
                            },
                            "tranDate": "2009-07-19",
                            "glAcct": "11010-003",
                            "closedDate": "2009-07-19T17:31:22",
                            "editedBy": 107,
                            "docType": "DM",
                            "companyId": 2,
                            "glPostDate": "2009-07-19",
                            "refnum": "1006",
                            "customer": {
                                "id": 205,
                                "num": "K14700"
                            },
                            "autoCash": {
                                "id": 622
                            },
                            "source": {
                                "id": 622,
                                "sourceId": 622,
                                "sourceType": "App"
                            },
                            "ponum": "cm_test",
                            "related": {
                                "id": 622
                            },
                            "glPostPeriod": "200612",
                            "origArTranId": 616,
                            "createdArBatch":{"id": 10168},
                            "origAmount": 10.0000,
                            "createdBy": 107,
                            "status": {
                                "id": 5
                            },
                            "amount": 0.0000,
                            "custNum": "K14700"
                        }
                    ],
                    "adjust": {
                        "id": 4,
                        "createdDate": "2009-07-19T17:31:22",
                        "glPostDate": "2009-07-19",
                        "arTran": {
                            "id": 619,
                            "createdDate": "2009-07-19T17:31:21",
                            "discAmount": 0.0000,
                            "dueDate": "2009-07-19",
                            "editedDate": "2009-07-19T17:31:21",
                            "version": 1,
                            "tranType": {
                                "id": 20
                            },
                            "state": 1,
                            "tranDate": "2009-07-19",
                            "docType": "PA",
                            "companyId": 2,
                            "glPostDate": "2009-07-19",
                            "refnum": "pa",
                            "customer": {
                                "id": 205,
                                "num": "K14700"
                            },
                            "source": {
                                "id": 619,
                                "sourceId": 619,
                                "sourceType": "App"
                            },
                            "ponum": "cm_test",
                            "related": {
                                "id": 616
                            },
                            "glPostPeriod": "200612",
                            "createdArBatch":{"id": 10168},
                            "origAmount": -10.0000,
                            "createdBy": 107,
                            "status": {
                                "id": 1
                            },
                            "amount": -10.0000,
                            "dispute": {
                                "id": 616
                            },
                            "custNum": "K14700"
                        },
                        "editedDate": "2009-07-19T17:31:22",
                        "version": 0,
                        "state": 1,
                        "source": "RCM",
                        "glPostPeriod": "200907",
                        "createdBy": 107,
                        "jobId": 3550,
                        "editedBy": 1,
                        "arPostDate": "2009-07-19",
                        "arBatchId": 10168,
                        "lines": [
                            {
                                "amount": 10,
                                "arTran": {
                                    "id": 622,
                                    "source": {
                                        "sourceId": 622,
                                        "sourceType": "App"
                                    }
                                },
                                "discAmount": 0,
                                "id": 954
                            },
                            {
                                "amount": 257.4600,
                                "arTran": {
                                    "id": 464,
                                    "source": {
                                        "sourceId": "IN18869",
                                        "sourceType": "ERP"
                                    }
                                },
                                "discAmount": 0,
                                "id": 954
                            }
                        ]
                    }
                },
                {
                  "trans": [ ],
                  "adjust": {"id":123,"arTran":..., "lines":[ {..},{..}]}
                },
                {  ####### another payment, no new trans created, just PA to existing INs
                  "adjust": {"id":,"arTran":..., "lines":[ {..},{..}]}}

                },
                { ####### another payment, no adjustments, unapplied only
                  "trans": [
                    {
                      "id": 6,
                      "refnum": "Chk123",
                      "amount": 100,
                      "source": {
                        "sourceId": "3",
                        "sourceType": "App"
                      },
                      "tranType": {
                        "code": "PA"
                      }
                    }
                  ]
                }
              ]
            }


            # WITH NO DATA: When there's no data to export

            {
              "ok": true ,
              "status": 200,
              "code": "exportSync.emptyData",
              "problems": []
            }



            # CALL UPDATE JOB THAT DATA WAS RECEIVED SUCCESSFULLY:


            curl -X PUT "https://sandbox.9ci.io/api/rally/syncJob/{id}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'
            {
              "state": "Finished"
            }
  '/ar/custFamily/{id}/parent':
    post:
      tags:
        - custFamily
      summary: Set Parent
      description: |
        Sets parent for a customer.
      operationId: custFamilySetParent
      parameters:
        - name: id
          in: path
          description: the child customer id
          schema:
            type: integer
            format: int64
        - name: parentId
          in: query
          description: the parent customer id
          schema:
            type: integer
            format: int64
      responses:
        '200':
          $ref: '#/components/responses/200_Result'
        '400':
          $ref: '#/components/responses/400_Problem'
  '/ipay/payTran/{id}/process':
    post:
      tags:
        - payTran
      summary: Process PayTran
      description: >
        Processes the payment and posts the transaction.

        Will be processed by gateway or sent for ACH and then posted into the
        AR, creating an ArTran payment and applying existing transactions

        (the process closes Invoices when fully paid, etc.)


        This may be prefered to updating the state to __Ready__ and calling the
        `PUT /ipay/payTran/{id}`

        as errors can be more easily dealt with during the payment work flow.


        **Common Error Codes**


        - `ipay.error.payTran.walletInvalid` - Wallet is either null or
        inactive.

        - `ipay.error.payTran.walletCust` - Wallet Customer does not match
        PayTran Customer

        - `ipay.error.payTran.lineSumMatch` - Apply Amount is less than the line
        totals

        - `ipay.error.payTran.prepayLines` - Pre-payments cannot be applied with
        lines
      operationId: processPayTran
      parameters:
        - name: id
          in: path
          description: the pytran id
          schema:
            type: string
      responses:
        '200':
          description: The updated paytran
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTran'
        '400':
          $ref: '#/components/responses/400_Problem'
        '402':
          $ref: '#/components/responses/402_PaymentDeclined'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Shell
          lang: bash
          source: >+

            ## ACH Process the PayTran

            curl -X POST \
              "https://rcm.9ci.dev/api/ipay/payTran/1edb72e6-7ccd-625f-9104-63c0a55ddbce/process" \
              -H "Content-Type: application/json" \


            ### Response Success:

            HTTP 200

            {
              "id": "1edb72ef-3aa0-6733-9104-91c1e1fa51a8",
              "state": {
                "id": 1,
                "name": "Posted" # Posted, gets updated to Processed later when its sent to bank
              },
            }



            ### ERROR Response Example (invoice already closed):

            HTTP 400 or 422

            {
              "ok": false,
              "status": 422,
              "code": "adjust.error.over-application",
              "title": "Can't over apply -100 to tran with open amount 0 on refnum: 12345"
            }


            ## Credit Card

            curl -X POST \
              "https://rcm.9ci.dev/api/ipay/payTran/1f0162cc-b791-6562-a7b5-3ddeba6b1573/process" \
              -H "Content-Type: application/json" \

            ### Success Response will return payTran, add includes to params
            above if needing more fields or lines:

            HTTP 200

            {
              "id": "1edb72ef-3aa0-6733-9104-91c1e1fa51a8",
              "state": {
                "id": 0,
                "name": "Processed"
              },
              "arBatch": null
              ...
            }


            ### DECLINED Response :

            HTTP 402

            {
              "ok": false,
              "status": 402,
              "title": "Card Declined",
              "code": "ipay.error.gateway.declined",
              "detail": "Funds", # the description from AxePay, 'Expired Card' is another example
              ...
            }



  /ipay/paySchedule/process:
    post:
      tags:
        - paySchedule
      summary: Process
      description: >
        Create Batches according to payment schedules. It groups payments in
        batches per partition org, bank and payment method (CC vs ACH).


        **PaySchedule job runs for**


        - customers with partition org it is called for

        - customers with active paySchedule

        - customers where pastDue is greater than zero. Process is using
        customer.stats.pastDue value (if pastDue param)

        - excludes arTrans with Pending and Exclude statuses (even that arTran
        is  pastDue)


        > **NOTE:**

        > 9ci recomends running this seprately for each Org (partition).

        > It will be easier to reason about if only one batch is expected in the
        returned body

        > and if there are any errors, it will be easier to diagnose and clearer
        where they came from.
      operationId: postPayScheduleProcess
      parameters:
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/async'
      requestBody:
        $ref: '#/components/requestBodies/payScheduleProcessPostBody'
      responses:
        '201':
          $ref: '#/components/responses/201_SyncJobBatch'
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Shell
          lang: bash
          source: >
            # EXAMPLE:

            # list of partition Orgs -  division members - Denver(id=59), New
            Orleans(id=58)

            # 1. Create 2 batches, 1 for each division wth their scheduled
            payTrans

            # 2. When the banks/ach is called, the process will pick scheduled
            batches based on their source -  "iPay-Schedule"


            http POST
            https://rcm.9ci.dev/api/ipay/paySchedule/process?source=dailyPayScheduleAch
            \

            "Authorization:$ACCESS_TOKEN_9CI" \

            --raw '{
              "orgs": [
                {"id": 58}, {"id": 59}
              ],
              "type": "ACH",
              "bank": "wells"
            }'


            # SUCCESS, rest call default to async so the job info is returned
            without data.

            201

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/ipay/paySchedule/process?source=dailyPayScheduleAch",
            }


            # POLL the SyncJob 60 seconds later

            http GET https://rcm.9ci.dev/api/rally/syncJob/1000
            "Authorization:$ACCESS_TOKEN_9CI"


            # Check if state="Finished", if not poll again in 60 seconds.


            # RESPONSE 200

            {
              "id": 1000,  #jobId
              "ok": true,
              "state": "Finished",
              "sourceId": "POST /api/ipay/paySchedule/process?source=dailyPayScheduleAch",
              # will get 1 record per Batch.
              "data": [
                {
                  "id": 123,
                  "org": {id: 58},
                  "controlAmount": 599.99
                },
                {
                      "id": 124,
                      "org": {id: 59},
                      "controlAmount": 799.99
                    }
              ]
            }


            # RESPONSE 207,

            # HAS PROBLEMS, ok=false and problems as list of issues.

            {
              "id": 1000,  #jobId
              "ok": false,
              "state": "Finished",
              "sourceId": "POST /api/ipay/paySchedule/process?source=dailyPayScheduleAch",
              "problems": [ # list of problems
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.problem",
                  "title": "Data Problem",
                  "detail": "problem detail will be described"
                },
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.validation",
                  "title": "Validation Problem",
                  "detail": "ACH Lockbox is not setup properly for this bank"
                }
              ],
              # data should be empty as its currently an all or nothing operation.
              data: []
            }
  /ar/glExportSync:
    post:
      tags:
        - glBatch
      summary: Gl Export Sync
      description: >-
        DEPRECATED Export gl accounts from 9ci. Data is exported in GlBatch
        object with list of GlJournals
      operationId: glExportSync
      parameters:
        - $ref: '#/components/parameters/q'
      responses:
        '200':
          description: Job created
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # call glExportSync for single division

            curl -X POST
            "https://rcm.9ci.dev/api/ar/glExportSync?q={arTran.org.member.division.num:'CA'}"
            \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'
            # call glExportSync for list of divisions

            curl -X POST
            "https://rcm.9ci.dev/api/ar/glExportSync?q={arTran.org.member.division.num:
            ('CA', 'WA')}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            # RESPONSE


            # call defaults to async so job id is returned

            HTTP/1.1 207

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/ar/glExportSync?q={arTran.org.member.division.num:'CA'}",
              "data": []
            }


            # RESPONSE WITH PROCESSED DATA:


            # call JobId to receive processed data

            HTTP/1.1 207

            {
              "id": 1000,  #jobId
              "state": "Finished",
              "ok": true ,
              "state": "Finished",
              "sourceId": "POST /api/ar/glExportSync?q={arTran.org.member.division.num:'CA'}",
              "data": [
                {  ### GlBatch
                  "id":123,
                  "glPostDate": "2009-07-19",
                  "org": {
                    "num": 'CA'
                  },
                  "createdDate" "2009-07-19T17:31:21"
                  "arBatch": {
                    "id": 1001,
                    "lockbox": "CO-FINTECH",
                    "batchDate": "2009-07-19",
                    "glPostDate": "2009-07-19",
                    "createdDate": "2009-07-19T13:11:11",
                    "arPostedDate": "2009-07-19T16:21:21"
                  },
                  #### List of journals
                  "journals": [
                    {
                      "id": 616,
                      "glAcct": "AR-100",
                      "credit": 100.0000,
                      "debit":0.0000,
                      "discAmount": 0.0000,
                      "linkedEntity": "ArAdjustLineJournal",
                      "member": {
                        "id": 616,
                        "division": {
                          "num": "CA"
                        }
                      }
                    },
                    {
                      "id": 617,
                      "glAcct": "WO-111",
                      "credit": 0.0000,
                      "debit":100.0000,
                      "linkedEntity": "ArTranJournal",
                      "member": {
                        "id": 617,
                        "division": {
                          "num": "CA"
                        },
                        "flex": {
                          "id": 616,
                          "text1": "return",
                          "text2": "comment"
                        }
                      }
                    }
                  ]
                },
                {  ### GlBatch
                  "id":124,
                  "glPostDate": "2009-07-19",
                  "orgId": 35,
                  "createdDate" "2009-07-19T17:31:21"
                  "arBatch": {
                    "id": 1000,
                    "lockbox": "CO-MANUAL",
                    "batchDate": "2009-07-18",
                    "glPostDate": "2009-07-19",
                    "createdDate": "2009-07-18T13:11:11",
                    "arPostedDate": "2009-07-19T16:21:21"
                  },
                  #### List of journals
                  "journals": [
                    {
                      "id": 618,
                      "glAcct": "UN-200",
                      "credit": 0.0000,
                      "debit":30.0000,
                      "discAmount": 0.0000,
                      "linkedEntity": "ArAdjustLineJournal",
                      "member": {
                        "id": 618,
                        "division": {
                          "num": "CA"
                        }
                      }
                    }
                  ]
                }
              ]
            }


            # RESPONSE WITH PROBLEMS DATA:


            # call JobId to receive processed data

            HTTP/1.1 207

            {
              "id": 1000,  #jobId
              "state": "Finished",
              "ok": true ,
              "state": "Finished",
              "sourceId": "POST /api/ar/glExportSync?q={arTran.org.member.division.num: 'CA'}",
              "problems":[
                { # Error
                  "ok":false,
                  "status": 422,
                  "code": "glJournal.postToLedger.error.arBatchNotPosted"
                  "title": "ArBatch not posted"
                  "data": 123 # GlBatchId or
                  "data":{
                    "id": 124
                  }
                }
              ]
              "data": [
                {  # GlBatch
                  "id":123,
                  "glPostDate": "2009-07-19",
                  ...
                }
            }


            # CALL UPDATE JOB THAT DATA WAS RECEIVED SUCCESSFULLY:


            curl -X PUT "https://sandbox.9ci.io/api/rally/syncJob/{id}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'
            {
              "state": "Finished"
            }
  /ar/gl/post:
    post:
      tags:
        - gl
      summary: Post GL Batches
      description: >
        Summarize and group all arTranJournals and arAdjustJournals (with null
        glPostBatchId) into glBatch and glJournals. 

        To run post for the given org, pass org filter in q; org must be the
        orgtype setup as the partitionOrgType
      operationId: glPostJob
      parameters:
        - $ref: '#/components/parameters/q'
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: jobSource
          in: query
          description: You can specify source of job call
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200_Result'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # FIXME do we need to be calling with division?

            # if filtering on the export can just let it post all?

            # call post for any unposted journals

            curl -X POST "https://rcm.9ci.dev/api/ar/gl/post" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            # call post for single division

            curl -X POST "https://rcm.9ci.dev/api/ar/gl/post?q={org:{'num':'CA',
            'type':'Division'}}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            # RESPONSE


            # call defaults to async so job id is returned

            HTTP/1.1 207

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/ar/gl/post...",
              "data": []
            }


            # RESPONSE WITH PROCESSED DATA:


            # call JobId to receive processed data

            HTTP/1.1 207

            {
              "id": 1000,  #jobId
              "ok": true ,
              "state": "Finished",
              "sourceId": "POST /api/ar/gl/post?q={org:{'num':'CA', 'type':'Division'}}",
              "data": [
                {
                  "ok":true,
                  "status": 200,
                  "data": {  ### GlBatch
                    "id": 123,
                    "glPostDate": "2023-01-01",
                    "createdDate" "2023-01-01T17:31:21"
                  }
                },
                {
                  "ok":true,
                  "status": 200,
                  "data": {  ### GlBatch
                    "id":123,
                    "glPostDate": "2023-01-01",
                    "createdDate" "2009-07-19T17:31:21"
                  }
                }
              ]
            }


            # WITH PROBLEMS

            HTTP/1.1 207

            {
              "id": 1000,  #jobId
              "ok": false ,
              "state": "Finished",
              "sourceId": "POST /api/ar/gl/post",
              "data": [
                { # Error
                  "ok":false,
                  "status": 422,
                  "code": "glJournal.postToLedger.error.arBatchNotPosted"
                  "title": "ArBatch not posted"
                  "data": 123
                },
                {
                  "ok":true,
                  "status": 200,
                  "data": {  # GlBatch success
                    "id":123,
                    "glPostDate": "2023-01-01",
                    "createdDate" "2009-07-19T17:31:21"
                  }
                }
              ]
            }


            # WITH NO DATA:

            {
              "id": 1000,
              "ok": true,
              "state": "Finished",
              "sourceId": "POST /api/ar/gl/post...",
              "data": []
            }



            # CALL UPDATE JOB THAT DATA WAS RECEIVED SUCCESSFULLY:

            curl -X PUT "https://sandbox.9ci.io/api/rally/syncJob/{id}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'
            {
              "state": "Finished"
            }
  /ar/gl/export:
    post:
      tags:
        - gl
      summary: Export GL Batches
      description: >
        Export all GlBatches without syncJobId. Data is exported in GlBatch
        object with list of GlJournals and SyncJob is created and attached. 

        To run export for the given org, pass org filter in q; org must be the
        orgtype setup as the partitionOrgType
      operationId: glExportJob
      parameters:
        - $ref: '#/components/parameters/q'
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            You can specify source of data, for example ERP system the data is
            from
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200_Result'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # FIXME do we need to be calling with division?

            # call export for single partition Org (filter by division org in
            this case)

            curl -X POST
            "https://rcm.9ci.dev/api/ar/gl/export?q={org:{'num':'CA',
            'type':'Division'}}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            # RESPONSE


            # call defaults to async so job id is returned

            HTTP/1.1 207

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/ar/gl/export?q={org:{'num':'CA', 'type':'Division'}}",
              "data": []
            }


            # RESPONSE WITH PROCESSED DATA:


            # call JobId to receive processed data

            HTTP/1.1 207

            {
              "id": 1000,  #jobId
              "ok": true ,
              "state": "Finished",
              "sourceId": "POST /api/ar/gl/export?q={org:{'num':'CA', 'type':'Division'}}",
              "data": [
                {  ### GlBatch
                  "id":123,
                  "glPostDate": "2009-07-19",
                  "org": {
                    "num": "CA"
                  },
                  "createdDate" "2009-07-19T17:31:21"
                  "arBatch": {
                    "id": 1001,
                    "lockbox": "CO-FINTECH",
                    "batchDate": "2009-07-19",
                    "glPostDate": "2009-07-19",
                    "createdDate": "2009-07-19T13:11:11",
                    "arPostedDate": "2009-07-19T16:21:21"
                  },
                  #### List of journals
                  "journals": [
                    {
                      "id": 616,
                      "glAcct": "AR-100",
                      "credit": 100.0000,
                      "debit":0.0000,
                      "discAmount": 0.0000,
                      "linkedEntity": "ArAdjustLineJournal",
                      "member": {
                        "id": 616,
                        "division": {
                          "num": "CA"
                        }
                      }
                    },
                    {
                      "id": 617,
                      "glAcct": "WO-111",
                      "credit": 0.0000,
                      "debit":100.0000,
                      "linkedEntity": "ArTranJournal",
                      "member": {
                        "id": 617,
                        "division": {
                          "num": "CA"
                        },
                        "flex": {
                          "id": 616,
                          "text1": "return",
                          "text2": "comment"
                        }
                      }
                    }
                  ]
                },
                {  ### GlBatch
                  "id":124,
                  "glPostDate": "2009-07-19",
                  "org": {
                    "num": "CA"
                  },
                  "createdDate" "2009-07-19T17:31:21"
                  "arBatch": {
                    "id": 1000,
                    "lockbox": "CO-MANUAL",
                    "batchDate": "2009-07-18",
                    "glPostDate": "2009-07-19",
                    "createdDate": "2009-07-18T13:11:11",
                    "arPostedDate": "2009-07-19T16:21:21"
                  },
                  #### List of journals
                  "journals": [
                    {
                      "id": 618,
                      "glAcct": "UN-200",
                      "credit": 0.0000,
                      "debit":30.0000,
                      "discAmount": 0.0000,
                      "linkedEntity": "ArAdjustLineJournal",
                      "member": {
                        "id": 618,
                        "division": {
                          "num": "CA"
                        }
                      }
                    }
                  ]
                }
              ]
            }


            # RESPONSE WITH PROCESSED DATA WITH PROBLEMS:


            HTTP/1.1 207

            {
              "id": 1000,  #jobId
              "ok": false ,
              "state": "Finished",
              "sourceId": "POST /api/ar/gl/export?q={org:{'num':'CA', 'type':'Division'}}",
              "problems": [ # list of problems
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.problem",
                  "title": "Data Problem",
                  "detail": "No Session found for current thread"
                },
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.validation",
                  "title": "validation Problem",
                  "detail": "Credit and debit does not match."

              ],
              "data": [ # list of GlBatches
                {  ### GlBatch
                  "id":123,
                  "glPostDate": "2009-07-19",
                  "org": {
                    "num": "CA"
                  },
                  "createdDate" "2009-07-19T17:31:21"
                  "arBatch": {
                    "id": 1001,
                    "lockbox": "CO-FINTECH"
                  },
                  #### List of journals
                  "journals": [
                    {
                      "id": 616,
                      "glAcct": "AR-100",
                      "credit": 100.0000,
                      "debit":0.0000
                    },
                    {
                      "id": 617,
                      "glAcct": "WO-111",
                      "credit": 0.0000,
                      "debit":100.0000,
                      }
                    }
                  ]
                }
              ]
            }


            # CALL UPDATE JOB THAT DATA WAS RECEIVED SUCCESSFULLY:


            curl -X PUT "https://sandbox.9ci.io/api/rally/syncJob/{id}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'
            {
              "state": "Finished"
            }
  /ar/gl/closePeriod:
    post:
      tags:
        - gl
      summary: Close GL Period
      description: >-
        first validates that the period can be closed and if there is a new open
        period. Sets isClosed flag on the period. Period to close can be found
        by id or name and org (if org is set).
      operationId: glCLosePeriod
      parameters:
        - $ref: '#/components/parameters/q'
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: jobSource
          in: query
          description: You can specify source of job call
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200_Result'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # call close period for org CA and glPostPeriod name 202301

            curl -X POST
            "https://rcm.9ci.dev/api/ar/gl/closePeriod?q={org:{num:'CA'},
            name:'202301' }" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            # RESPONSE


            # call defaults to async so job id is returned

            HTTP/1.1 207

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/ar/gl/closePeriod?q={org:{num:'CA'}, name:'202301' }",
              "data": []
            }


            # RESPONSE WITH PROCESSED DATA:


            # call JobId to receive processed data

            HTTP/1.1 207

            {
              "id": 1000,  #jobId
              "ok": true ,
              "state": "Finished",
              "sourceId": "POST /api/ar/gl/closePeriod?q={org:{num:'CA'}, name:'202301' }",
              "data": [
                {
                  "ok":true,
                  "status": 200,
                  "data": {  ### GlPostPeriod with closed flag
                    "id": 101,
                    "name": "202301",
                    "orgId": 35,
                    "isClosed": true
                  }
                }
              ]

            # RESPONSE WITH PROCESSED DATA WITH PROBLEM:


            HTTP/1.1 207

            {
              "id": 1000,  #jobId
              "ok": false ,
              "state": "Finished",
              "sourceId": "POST /api/ar/gl/closePeriod?q={org:{num:'CA'}, name:'202301' }",
              "data": [
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.problem",
                  "title": "Data Problem",
                  "detail": "No new open period"
                }
              ]
  '/ar/glBatch/{id}/summary':
    post:
      tags:
        - glBatch
      summary: Journal summary
      description: |
        Summarize GlJournals by Gl accounts and flex fields (if configured).
      operationId: glBatchSummary
      parameters:
        - name: id
          in: path
          description: GlBatch id
          schema:
            type: integer
            format: int64
      responses:
        '200':
          $ref: '#/components/responses/200_Result'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: |

            curl -X GET "https://rcm.9ci.dev/api/ar/glBatch/123/summary" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'


            # RESPONSE

            HTTP/1.1 200
            [
              {
                "credit": 100.00,
                "debit": 0.0
                "glAcct": "20110-000",
                "test1": "textvalue"
                "num1": num1Value
              },
              {
                "credit": 0.00,
                "debit": 110.00,
                "glAcct": "10050-000",
                "test1": "textvalue"
                "num1": num1Value
              }
            ]
  /ar/glJournal/summary:
    post:
      tags:
        - glJournal
      summary: Journal summary
      description: |
        Summarize GlJournals by Gl accounts and flex fields (if configured).
      operationId: glJournalSummary
      parameters:
        - $ref: '#/components/parameters/q'
      responses:
        '200':
          $ref: '#/components/responses/200_Result'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >

            ## Summarize by partition org and journal date range

            curl -X GET
            "http://localhost:8080/api/ar/glJournal/summary?q={createdDate:{$gte:2023-01-11T04:00,
            $lt:2023-01-12T04:00}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'


            # RESPONSE

            HTTP/1.1 200

            [
              {
                "credit": 100.00,
                "debit": 0.00,
                "glAcct": "20110-000",
                "test1": "textvalue"
                "num1": num1Value
              },
              {
                "credit": 0.00,
                "debit": 100.00,
                "glAcct": "10050-000",
                "test1": "textvalue"
                "num1": num1Value
              }
            ]



            # Summarize by partition org and glpost date

            curl -X GET
            "http://localhost:8080/api/ar/glJournal/summary?q={glPostBatch.org.id:2,
            glPostDate:2023-01-11}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'


            # RESPONSE


            HTTP/1.1 200

            [
              {
                "credit": 100.00,
                "debit": 0.00,
                "glAcct": "20110-000",
                "test1": "textvalue"
                "num1": num1Value
              },
              {
                "credit": 0.00,
                "debit": 100.00,
                "glAcct": "10050-000",
                "test1": "textvalue"
                "num1": num1Value
              }
            ]
  /banks/ach:
    post:
      tags:
        - ach
      summary: Create ACH Batch(s)
      description: >-
        Creates a new ACH Batch from unposted PayTrans. Can optional sftp as
        well to a supported bank.
      operationId: postAchBatch
      parameters:
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/async'
      requestBody:
        $ref: '#/components/requestBodies/achPostBody'
      responses:
        '201':
          $ref: '#/components/responses/201_SyncJobBatch'
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Shell
          lang: bash
          source: >

            # EXAMPLE #1: When single bank and account are setup for
            Client/Company in 9ci

            # 1. Creates a batches, with all the unposted PayTrans

            # 2. so we generate a NACHA file for the Batch

            # 4. push that file up to the configured location for the banks sftp

            http POST https://rcm.9ci.dev/api/banks/ach \

            "Authorization:$ACCESS_TOKEN_9CI" \

            --raw '{
              "bank": "wells",
              "push": true
            }'


            # EXAMPLE #2: When multiple partition Orgs are setup, process ACH
            PayTrans for JPM California Division (id=45)

            # 1. Create a batch for all PayTrans for california (id=45)

            # 2. Generate the NACHA file for the batch.

            # 4. push that file up to the configured location for the the
            jpmorgan sftp

            http POST https://rcm.9ci.dev/api/banks/ach \

            "Authorization:$ACCESS_TOKEN_9CI" \

            --raw '{
              "orgs": [
                {"id": 45}
              ],
              "bank": "jpm",
              "push": true
            }'


            # EXAMPLE #3: Process ACH PayTrans for Division members,
            Denver(id=59), New Orleans(id=58) for Wells Fargo

            # 1. Create 2 batches, 1 for each division, with the unposted
            PayTrans restricted by the q criteria

            # 2. For Wells Fargo we generate a single NACHA file with 2 NACHA
            batches (record 5), 1 for each 9ci batch.

            # 3. push that file up to the configured location for the the wells
            sftp

            http POST https://rcm.9ci.dev/api/banks/ach \

            "Authorization:$ACCESS_TOKEN_9CI" \

            --raw '{
              "orgs": [
                {"id": 58}, {"id": 59}
              ],
              "bank": "wells",
              "push": true
            }'


            # RESPONSE


            # If any intial errors then will return a problem and status 400

            400

            {
              "ok": false,
              "status": 400,
              "code": "error.data.problem",
              "title": "Data Problem",
              "detail": "Bank configuration error, sftp settings are not setup yet"
            }


            # SUCCESS, rest call default to async so the job info is returned
            without data.

            201

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/banks/ach",
            }


            # PULL the SyncJob 60 seconds later

            http POST https://rcm.9ci.dev/api/rally/syncJob/1000
            "Authorization:$ACCESS_TOKEN_9CI"


            # Check if state="Finished", if not poll again in 60 seconds.


            # RESPONSE 200

            {
              "id": 1000,  #jobId
              "ok": true,
              "state": "Finished",
              "sourceId": "POST /api/banks/ach",
              # will get 1 record per Batch.
              "data": [
                {
                  "id": 123,
                  "org": {id: 45},
                  "controlAmount": 599.99
                }
              ]
            }


            # RESPONSE 207,

            # HAS PROBLEMS, ok=false and problems as list of issues.

            {
              "id": 1000,  #jobId
              "ok": false,
              "state": "Finished",
              "sourceId": "POST /api/banks/ach",
              "problems": [ # list of problems
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.problem",
                  "title": "Data Problem",
                  "detail": "problem detail will be described"
                },
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.validation",
                  "title": "Validation Problem",
                  "detail": "ACH Lockbox is not setup properly for this bank"
                }
              ],
              # data should be empty as its currently an all or nothing operation.
              data: []
            }
    put:
      tags:
        - ach
      summary: Confirmation or Returns
      description: >
        Updates the ACH batches and its PayTrans using the confirmation file or
        the returns file.

        For supported banks this will sync their sftp first and scan for the
        files first and then run the update.

        In future will be able to put file into body or via attachmentId and
        have it use that to process it.
      operationId: updateAch
      parameters:
        - name: type
          in: query
          required: true
          description: |
            `returns` or `confirmation` to specify what to process
          schema:
            type: string
        - name: bank
          in: query
          description: 'The bank key for the bank this is for (wells, jpm, boa)'
          required: true
          schema:
            type: string
        - name: pull
          in: query
          description: >
            <small>(default: false)</small> When true will sync with the
            supported bank's sftp and find configured files based on the type.
          schema:
            type: boolean
      responses:
        '201':
          $ref: '#/components/responses/201_SyncJobBatch'
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Shell
          lang: bash
          source: >

            # 15 minutes after wells POST is called to send file, JPM is 60
            minutes


            http PUT
            https://rcm.greenbill.work/api/banks/ach?type=confirmation&bank=wells&pull=true
            \

            "Authorization:$ACCESS_TOKEN_9CI"



            # In morning between 4am and 7am Returns file should be ready


            http PUT
            https://rcm.greenbill.work/api/banks/ach?type=returns&bank=wells&pull=true
            \

            "Authorization:$ACCESS_TOKEN_9CI"



            # SUCCESS, rest call default to async so the job info is returned
            without data.

            201

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/banks/ach",
            }


            # PULL the SyncJob 60 seconds later

            http POST https://rcm.9ci.dev/api/rally/syncJob/1000
            "Authorization:$ACCESS_TOKEN_9CI"


            # Check if state="Finished", if not poll again in 60 seconds.
  /banks/cards:
    post:
      tags:
        - cards
      summary: Create Credit Card Batch(s)
      description: Creates one or more credit card Batches from posted PayTrans.
      operationId: postCardBatch
      parameters:
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/async'
      requestBody:
        $ref: '#/components/requestBodies/cardsPostBody'
      responses:
        '201':
          $ref: '#/components/responses/201_SyncJobBatch'
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Shell
          lang: bash
          source: >

            # EXAMPLE #1: When a single partition org is setup for
            Client/Company in 9ci

            http POST https://rcm.greenbill.work/api/banks/cards \

            "Authorization:$ACCESS_TOKEN_9CI"


            # EXAMPLE #2: When multiple partition Orgs are setup, Denver(id=59),
            New Orleans(id=58)

            http POST https://rcm.greenbill.work/api/banks/cards \

            "Authorization:$ACCESS_TOKEN_9CI" \

            --raw '{
              "orgs": [
                {"id": 58}, {"id": 59}
              ]
            }'


            # RESPONSE


            # If any intial errors then will return a problem and status 400

            400

            {
              "ok": false,
              "status": 400,
              "code": "error.data.problem",
              "title": "Data Problem",
              "detail": "....."
            }


            # SUCCESS, rest call default to async so the job info is returned
            without data.

            201

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/banks/cards",
            }


            # POLL the SyncJob 60 seconds later

            http POST https://rcm.greenbill.work/api/rally/syncJob/1000
            "Authorization:$ACCESS_TOKEN_9CI"


            # Check if state="Finished", if not poll again in 60 seconds.


            # RESPONSE 200

            {
              "id": 1000,  #jobId
              "ok": true,
              "state": "Finished",
              "sourceId": "POST /api/banks/cards",
              # will get 1 record per Batch.
              "data": [
                {
                  "id": 123,
                  "org": {id: 45},
                  "controlAmount": 599.99
                },
                ...
              ]
            }


            # RESPONSE 207,

            # HAS PROBLEMS, ok=false and problems as list of issues.

            {
              "id": 1000,  #jobId
              "ok": false,
              "state": "Finished",
              "sourceId": "POST /api/banks/cards",
              "problems": [ # list of problems
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.problem",
                  "title": "Data Problem",
                  "detail": "problem detail will be described"
                },
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.validation",
                  "title": "Validation Problem",
                  "detail": "ACH Lockbox is not setup properly for this bank"
                }
              ],
              # data should be empty as its currently an all or nothing operation.
              data: []
            }
  /banks/inbound:
    post:
      tags:
        - inbound
      summary: Process Incoming Lockbox
      description: Process incoming lockbox or wire files from the bank
      operationId: postInbound
      parameters:
        - name: bank
          in: query
          description: 'The bank key for the bank this is for (wells, jpm, boa)'
          required: true
          schema:
            type: string
        - name: pull
          in: query
          description: >
            <small>(default: false)</small> When true will Sync with the
            supported bank's sftp and copy inbound files to import dir
          schema:
            type: boolean
        - name: import
          in: query
          description: >
            <small>(default: false)</small> When true will Sync will import into
            autocash any files in the banks import dir
          schema:
            type: boolean
        - name: op
          in: query
          description: >
            Optional. Can specify `correct` or `post` to run an operation after
            batch has been imported.

            if `correct` is specified then will only `correct` and not `post`
            the AR Batch.

            If `post`is specified then will `correct` first and then if
            reconciled will `post` the batch.

            If its can't post the batch because it coudlnt reconcile the it will
            show up in the problems list.
          schema:
            type: boolean
        - $ref: '#/components/parameters/async'
      responses:
        '201':
          $ref: '#/components/responses/201_SyncJobBatch'
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Shell
          lang: bash
          source: >

            # EXAMPLE #1: When a single partition org is setup for
            Client/Company

            http POST
            https://rcm.greenbill.work/api/banks/inbound?bank=jpm&pull=true&import=true
            \

            "Authorization:$ACCESS_TOKEN_9CI"


            # EXAMPLE #1: When a single partition org is setup for
            Client/Company

            http POST
            https://rcm.greenbill.work/api/banks/inbound?bank=wells&pull=true&import=true&run=post
            \

            "Authorization:$ACCESS_TOKEN_9CI"


            # RESPONSE


            # If any intial errors then will return a problem and status 400

            400

            {
              "ok": false,
              "status": 400,
              "code": "error.data.problem",
              "title": "Data Problem",
              "detail": "....."
            }


            # SUCCESS, rest call defaults to async so the job info is returned
            without data.

            201

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/banks/inbound",
            }


            # POLL the SyncJob 60 seconds later

            http POST https://rcm.greenbill.work/api/rally/syncJob/1000
            "Authorization:$ACCESS_TOKEN_9CI"


            # Check if state="Finished", if not poll again in 60 seconds.


            # RESPONSE 200

            {
              "id": 1000,  #jobId
              "ok": true,
              "state": "Finished",
              "sourceId": "POST /api/banks/inbound",
              # will get 1 record per Batch.
              "data": [
                {
                  "id": 123,
                  "org": {id: 45},
                  "controlAmount": 599.99
                },
                ...more batches if created.
              ]
            }


            # RESPONSE 207,

            # HAS PROBLEMS, ok=false and problems as list of issues.

            {
              "id": 1000,  #jobId
              "ok": false,
              "state": "Finished",
              "sourceId": "POST /api/banks/inbound",
              "problems": [ # list of problems
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.problem",
                  "title": "Data Problem",
                  "detail": "problem detail will be described"
                },
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.validation",
                  "title": "Validation Problem",
                  "detail": "ACH Lockbox is not setup properly for this bank"
                }
              ],
              # data should be empty as its currently an all or nothing operation.
              data: []
            }
  /reports/statement/rpc:
    post:
      tags:
        - statement
      summary: RPC Operations
      description: >-
        There are 2 steps to get statements to customers. First, generate
        statement report per customer and then send them with emails
      operationId: statementRpc
      parameters:
        - name: op
          required: true
          in: query
          schema:
            type: string
            enum:
              - generate
              - send
          description: |
            The process to run:
              * `generate` - generates Activities for the Statement reports. Will be 1 activity per customer with an attachement for the pdf.
                each activity will get a source field as described below.
              * `send` - email the generated statement reports to customers (Note: q.source is required for op=send)
        - name: source
          in: query
          required: false
          description: >
            Specify the unique base source for the statement, such as
            `CA-statements`.

            Each activity will have a source field as this with date/time
            appeneded to it. `CA-statements-2023-08-31T12:01`

            If not sent then will default to `Statements`.
          schema:
            type: string
        - name: q
          in: query
          required: true
          description: >
            For the `generate` this is a mango query against the Customer
            schema.

            For the `send` this is a query against the Activity schema.
          schema:
            type: object
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
      responses:
        '200':
          description: >-
            [SyncJob](#core-rally-syncjob) result of the rpc call. See examples
            for the schema of the result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
        '400':
          $ref: '#/components/responses/400_Problem'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >

            # generate statement for CA division

            curl -X POST
            'https://rcm.9ci.dev/jobs/reports/statement/rpc?op=generate&source=DEN-Statements&q={"org":{"member":{"division":{"id":
            59}}}}'


            # RESPONSE


            # call with async that returns job id

            HTTP/1.1 207

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "source": "DEN-Statements"
              "sourceId": "POST /jobs/reports/statement/rpc?op=generate"
            }


            # keep checking till it's state is Finished

            curl - X GET `/api/rally/syncJob/1000`


            HTTP/1.1 200

            {
              "id": 1000,
              "ok": true,
              "state": "Finished",
              "source": "DEN-Statements"
              "sourceId": "POST /jobs/reports/statement/rpc?op=generate",
              "data": [
                  {
                    source: "DEN-Statements-2023-08-31T12:01",
                    success: 1299
                  }
                ]
            }



            # send statements generated with source
            DEN-Statements-2023-08-31T12:01

            curl -X POST
            'https://rcm.9ci.dev/jobs/reports/statement/rpc?op=send&source=DEN-Statements&q={"source":"DEN-Statements-2023-08-31T12:01"}'


            # call with async that returns job id

            HTTP/1.1 207

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "source": "DEN-Statements"
              "sourceId": "POST /jobs/reports/statement/rpc?op=send&source=DEN-Statements....",
            }


            # keep checking till it's state is Finished

            curl - X GET `/api/rally/syncJob/1000`


            HTTP/1.1 200

            {
              "id": 1000,
              "ok": true,
              "state": "Finished",
              "source": "DEN-Statements"
              "sourceId": "POST /jobs/reports/statement/rpc?op=send&source=DEN-Statements....",
              "data": [
                  {
                    source: "DEN-Statements-2023-08-31T12:01",
                    success: 1299
                  }
                ]
            }



            # Example when there are Problems


            # ERROR or PROBLEM RESPONSE WITH PROCESSED DATA WITH PROBLEMS:


            HTTP/1.1 200

            {
              "id": 1000,
              "ok": false ,
              "state": "Finished",
              "source": "DEN-Statements"
              "sourceId": "POST /jobs/reports/statement/rpc?op=send&source=DEN-Statements....",
              "problems": [ # list of problems that may have occurred
                {
                  "ok": false,
                  "status": 400,
                  "code": "error.data.problem",
                  "title": "Data Problem",
                  "detail": "Problem Detail"
                }
              ],
              "data": [ # success
                {
                  source: "DEN-Statements-2023-08-31T12:01",
                  success: 1100
                  problems: 1
                }
              ]
            }
  /rally/activity:
    get:
      tags:
        - activity
      summary: Activity list
      description: Query and retrieve a Activity list
      operationId: getActivityList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Activity Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - activity
      summary: Create a Activity
      description: Create a new Activity
      operationId: createActivity
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Activity resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity_Create'
      responses:
        '201':
          description: Activity Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/rally/activity/{id}':
    get:
      tags:
        - activity
      summary: Get a Activity
      description: Retrieve a Activity
      operationId: getActivityById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Activity Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - activity
      summary: Update a Activity
      description: ''
      operationId: updateActivity
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Activity resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity_Update'
      responses:
        '200':
          description: Activity Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - activity
      summary: Delete a Activity
      description: ''
      operationId: deleteActivity
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/activity/bulk:
    post:
      tags:
        - activity
      summary: Bulk Create
      description: >
        Bulk Create Activity Data should be passed in <b>as json object in
        body</b>. Expertimental option to pass an <b>attachment file id in query
        param</b>.
      operationId: bulkCreateActivity
      requestBody:
        description: >-
          Array of objects to create Activity following the same schema as a
          single POST for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Activity
                $ref: '#/components/schemas/Activity_Create'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: op
          in: query
          description: >
            Supports op=upsert. When this is set, will look for entity
            indentifier and updated if found.

            If not found it will insert.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem

            Will return a SyncJob entity. See docs for more details on its
            schema
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    put:
      tags:
        - activity
      summary: Bulk Update
      description: |
        Bulk Update Activity
      operationId: bulkUpdateActivity
      requestBody:
        description: >-
          Array of objects to update Activity using the same schema as a single
          PUT for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Activity
                $ref: '#/components/schemas/Activity_Update'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Job resource with Running status. When Finshed will have data with
            results.

            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem.

            Will return a SyncJob entity. See link for more details on its
            schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
                properties:
                  data:
                    description: Data will be an array of resources created
                    type: array
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  /rally/activityNote:
    get:
      tags:
        - activityNote
      summary: ActivityNote list
      description: Query and retrieve a ActivityNote list
      operationId: getActivityNoteList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: ActivityNote Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - activityNote
      summary: Create a ActivityNote
      description: Create a new ActivityNote
      operationId: createActivityNote
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: ActivityNote resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityNote_Create'
      responses:
        '201':
          description: ActivityNote Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNote'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/rally/activityNote/{id}':
    get:
      tags:
        - activityNote
      summary: Get a ActivityNote
      description: Retrieve a ActivityNote
      operationId: getActivityNoteById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: ActivityNote Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNote'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - activityNote
      summary: Update a ActivityNote
      description: ''
      operationId: updateActivityNote
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: ActivityNote resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityNote_Update'
      responses:
        '200':
          description: ActivityNote Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNote'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - activityNote
      summary: Delete a ActivityNote
      description: ''
      operationId: deleteActivityNote
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/appParam:
    get:
      tags:
        - appParam
      summary: AppParam list
      description: Query and retrieve a AppParam list
      operationId: getAppParamList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: AppParam Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  '/rally/appParam/{id}':
    get:
      tags:
        - appParam
      summary: Get a AppParam
      description: Retrieve a AppParam
      operationId: getAppParamById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: AppParam Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppParam'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - appParam
      summary: Update a AppParam
      description: ''
      operationId: updateAppParam
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: AppParam resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppParam_Update'
      responses:
        '200':
          description: AppParam Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppParam'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - appParam
      summary: Delete a AppParam
      description: ''
      operationId: deleteAppParam
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/attachment:
    get:
      tags:
        - attachment
      summary: Attachment list
      description: Query and retrieve a Attachment list
      operationId: getAttachmentList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Attachment Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  '/rally/attachment/{id}':
    get:
      tags:
        - attachment
      summary: Get a Attachment
      description: Retrieve a Attachment
      operationId: getAttachmentById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Attachment Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - attachment
      summary: Update a Attachment
      description: ''
      operationId: updateAttachment
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Attachment resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment_Update'
      responses:
        '200':
          description: Attachment Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - attachment
      summary: Delete a Attachment
      description: ''
      operationId: deleteAttachment
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/company:
    get:
      tags:
        - company
      summary: Company list
      description: Query and retrieve a Company list
      operationId: getCompanyList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Company Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - company
      summary: Create a Company
      description: Create a new Company
      operationId: createCompany
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Company resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company_Create'
      responses:
        '201':
          description: Company Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/rally/company/{id}':
    get:
      tags:
        - company
      summary: Get a Company
      description: Retrieve a Company
      operationId: getCompanyById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Company Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - company
      summary: Update a Company
      description: ''
      operationId: updateCompany
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Company resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company_Update'
      responses:
        '200':
          description: Company Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - company
      summary: Delete a Company
      description: ''
      operationId: deleteCompany
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/contact:
    get:
      tags:
        - contact
      summary: Contact list
      description: Query and retrieve a Contact list
      operationId: getContactList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Contact Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - contact
      summary: Create a Contact
      description: Create a new Contact
      operationId: createContact
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Contact resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_Create'
      responses:
        '201':
          description: Contact Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/rally/contact/{id}':
    get:
      tags:
        - contact
      summary: Get a Contact
      description: Retrieve a Contact
      operationId: getContactById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Contact Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - contact
      summary: Update a Contact
      description: ''
      operationId: updateContact
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Contact resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_Update'
      responses:
        '200':
          description: Contact Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - contact
      summary: Delete a Contact
      description: ''
      operationId: deleteContact
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/contact/bulk:
    post:
      tags:
        - contact
      summary: Bulk Create
      description: >
        Bulk Create Contact Data should be passed in <b>as json object in
        body</b>. Expertimental option to pass an <b>attachment file id in query
        param</b>.
      operationId: bulkCreateContact
      requestBody:
        description: >-
          Array of objects to create Contact following the same schema as a
          single POST for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Contact
                $ref: '#/components/schemas/Contact_Create'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: op
          in: query
          description: >
            Supports op=upsert. When this is set, will look for entity
            indentifier and updated if found.

            If not found it will insert.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem

            Will return a SyncJob entity. See docs for more details on its
            schema
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    put:
      tags:
        - contact
      summary: Bulk Update
      description: |
        Bulk Update Contact
      operationId: bulkUpdateContact
      requestBody:
        description: >-
          Array of objects to update Contact using the same schema as a single
          PUT for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Contact
                $ref: '#/components/schemas/Contact_Update'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Job resource with Running status. When Finshed will have data with
            results.

            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem.

            Will return a SyncJob entity. See link for more details on its
            schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
                properties:
                  data:
                    description: Data will be an array of resources created
                    type: array
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  /rally/org:
    get:
      tags:
        - org
      summary: Org list
      description: Query and retrieve a Org list
      operationId: getOrgList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Org Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >+
            ## Common requests to manage orgs:


            ### Customer and CustAccounts have special end points. All other org
            types can share the same end point with org type specified:


            ###     Branch  - id:3

            ###     Division- id:4

            ###     Business- id:5

            ###     Company - id:6

            ###     Prospect- id:7

            ###     Sales   - id:8

            ###     Client  - id:9

            ###     Factory - id:10

            ###     Region  - id:11


            ### get list of Division orgs:

            curl -X GET "https://rcm.9ci.dev/api/rally/org?q={"type":{"id":4}}"


            ### get list of Factory orgs:

            curl -X GET "https://rcm.9ci.dev/api/rally/org?q={"type":{"id":10}}"


            ## create single Org, if sourceId not specified 9ci will assign num
            to sourceId. It will fail if it's not unique

            curl -X POST "https://rcm.9ci.dev/api/rally/org"

            {
                "num": "123",
                "name": "Sales1",
                "orgTypeId": 8
            }


            ## create single Org and assign unique sourceId:

            curl -X POST "https://rcm.9ci.dev/api/rally/org"

            {
                "num": "123",
                "name": "Sales1",
                "orgTypeId": 8,
                "source": {
                    "sourceId": "7547654-123"
                }
            }


            ## create bulk of Orgs:

            curl -X POST "https://rcm.9ci.dev/api/rally/org/bulk"

            [
                {
                "num": "234",
                "name": "Factory1",
                "orgTypeId": 10
                },
                {
                "num": "345",
                "name": "Factory2",
                "orgTypeId": 10
                },
                {
                "num": "456",
                "name": "Factory3",
                "orgTypeId": 10
                }
            ]



            ### response is SyncJob object. If it's in Running state you ahve to
            call it again till you get a Finished state.

            {
                "id": 80001,
                "ok": true,
                "state": "Finished",
                "sourceId": "POST /api/rally/org/bulk?null",
                "data": [
                    {
                        "ok": true,
                        "status": 201,
                        "data": {
                            "id": 355024,
                            "createdDate": "2023-02-14T11:49:05.020297",
                            "orgTypeId": 10,
                            "inactive": false,
                            "version": 0,
                            "editedDate": "2023-02-14T11:49:05.020297",
                            "name": "Factory1",
                            "editedBy": 1,
                            "companyId": 2,
                            "source": {
                                "id": 46823706
                            },
                            "type": {
                                "id": 10,
                                "name": "Factory"
                            },
                            "createdBy": 1,
                            "num": "234"
                        }
                    },
                    {
                        "ok": true,
                        "status": 201,
                        "data": {
                            "id": 355025,
                            "createdDate": "2023-02-14T11:49:05.036612",
                            "orgTypeId": 10,
                            "inactive": false,
                            "version": 0,
                            "editedDate": "2023-02-14T11:49:05.036612",
                            "name": "Factory2",
                            "editedBy": 1,
                            "companyId": 2,
                            "source": {
                                "id": 46823707
                            },
                            "type": {
                                "id": 10,
                                "name": "Factory"
                            },
                            "createdBy": 1,
                            "num": "345"
                        }
                    },
                    {
                        "ok": true,
                        "status": 201,
                        "data": {
                            "id": 355026,
                            "createdDate": "2023-02-14T11:49:05.041861",
                            "orgTypeId": 10,
                            "inactive": false,
                            "version": 0,
                            "editedDate": "2023-02-14T11:49:05.041861",
                            "name": "Factory3",
                            "editedBy": 1,
                            "companyId": 2,
                            "source": {
                                "id": 46823708
                            },
                            "type": {
                                "id": 10,
                                "name": "Factory"
                            },
                            "createdBy": 1,
                            "num": "456"
                        }
                    }
                ]
            }


            ### response with error:

            {
                "id": 80002,
                "ok": false,
                "state": "Finished",
                "sourceId": "POST /api/rally/org/bulk?null",
                "data": [
                    {
                        "ok": false,
                        "status": 400,
                        "data": {
                            "num": "234",
                            "name": "Factory1",
                            "orgTypeId": 10
                        },
                        "code": "error.data.uniqueConstraintViolation",
                        "title": "Unique index or primary key violation",
                        "detail": "ERROR: duplicate key value violates unique constraint \"ix_orgsource_unique\"\n  Detail: Key (sourcetype, sourceid, orgtypeid)=(App, 234, 10) already exists."
                    }
                ]
            }

    post:
      tags:
        - org
      summary: Create a Org
      description: Create a new Org
      operationId: createOrg
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Org resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Org_Create'
      responses:
        '201':
          description: Org Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/rally/org/{id}':
    get:
      tags:
        - org
      summary: Get a Org
      description: Retrieve a Org
      operationId: getOrgById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Org Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - org
      summary: Update a Org
      description: ''
      operationId: updateOrg
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Org resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Org_Update'
      responses:
        '200':
          description: Org Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - org
      summary: Delete a Org
      description: ''
      operationId: deleteOrg
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/org/bulk:
    post:
      tags:
        - org
      summary: Bulk Create
      description: >
        Bulk Create Org Data should be passed in <b>as json object in body</b>.
        Expertimental option to pass an <b>attachment file id in query
        param</b>.
      operationId: bulkCreateOrg
      requestBody:
        description: >-
          Array of objects to create Org following the same schema as a single
          POST for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Org
                $ref: '#/components/schemas/Org_Create'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: op
          in: query
          description: >
            Supports op=upsert. When this is set, will look for entity
            indentifier and updated if found.

            If not found it will insert.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem

            Will return a SyncJob entity. See docs for more details on its
            schema
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    put:
      tags:
        - org
      summary: Bulk Update
      description: |
        Bulk Update Org
      operationId: bulkUpdateOrg
      requestBody:
        description: >-
          Array of objects to update Org using the same schema as a single PUT
          for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Org
                $ref: '#/components/schemas/Org_Update'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Job resource with Running status. When Finshed will have data with
            results.

            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem.

            Will return a SyncJob entity. See link for more details on its
            schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
                properties:
                  data:
                    description: Data will be an array of resources created
                    type: array
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  /rally/orgTypeSetup:
    get:
      tags:
        - orgTypeSetup
      summary: OrgTypeSetup list
      description: Query and retrieve a OrgTypeSetup list
      operationId: getOrgTypeSetupList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: OrgTypeSetup Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  '/rally/orgTypeSetup/{id}':
    get:
      tags:
        - orgTypeSetup
      summary: Get a OrgTypeSetup
      description: Retrieve a OrgTypeSetup
      operationId: getOrgTypeSetupById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OrgTypeSetup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgTypeSetup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - orgTypeSetup
      summary: Update a OrgTypeSetup
      description: ''
      operationId: updateOrgTypeSetup
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: OrgTypeSetup resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgTypeSetup_Update'
      responses:
        '200':
          description: OrgTypeSetup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgTypeSetup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  /rally/partitionOrg:
    get:
      tags:
        - partitionOrg
      summary: PartitionOrg list
      description: Query and retrieve a PartitionOrg list
      operationId: getPartitionOrgList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: PartitionOrg Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - partitionOrg
      summary: Create a PartitionOrg
      description: Create a new PartitionOrg
      operationId: createPartitionOrg
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: PartitionOrg resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionOrg_Create'
      responses:
        '201':
          description: PartitionOrg Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionOrg'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/rally/partitionOrg/{id}':
    get:
      tags:
        - partitionOrg
      summary: Get a PartitionOrg
      description: Retrieve a PartitionOrg
      operationId: getPartitionOrgById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: PartitionOrg Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionOrg'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - partitionOrg
      summary: Update a PartitionOrg
      description: ''
      operationId: updatePartitionOrg
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: PartitionOrg resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionOrg_Update'
      responses:
        '200':
          description: PartitionOrg Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionOrg'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - partitionOrg
      summary: Delete a PartitionOrg
      description: ''
      operationId: deletePartitionOrg
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/role:
    get:
      tags:
        - role
      summary: Role list
      description: Query and retrieve a Role list
      operationId: getRoleList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Role Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  '/rally/role/{id}':
    get:
      tags:
        - role
      summary: Get a Role
      description: Retrieve a Role
      operationId: getRoleById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Role Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecRole'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/roleUser:
    get:
      tags:
        - roleUser
      summary: RoleUser list
      description: Query and retrieve a RoleUser list
      operationId: getRoleUserList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: RoleUser Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - roleUser
      summary: Create a RoleUser
      description: Create a new RoleUser
      operationId: createRoleUser
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: RoleUser resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecRoleUser_Create'
      responses:
        '201':
          description: RoleUser Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecRoleUser'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/rally/roleUser/{id}':
    get:
      tags:
        - roleUser
      summary: Get a RoleUser
      description: Retrieve a RoleUser
      operationId: getRoleUserById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: RoleUser Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecRoleUser'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    delete:
      tags:
        - roleUser
      summary: Delete a RoleUser
      description: ''
      operationId: deleteRoleUser
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/syncJob:
    get:
      tags:
        - syncJob
      summary: SyncJob list
      description: Query and retrieve a SyncJob list
      operationId: getSyncJobList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: SyncJob Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  '/rally/syncJob/{id}':
    get:
      tags:
        - syncJob
      summary: Get a SyncJob
      description: Retrieve a SyncJob
      operationId: getSyncJobById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: SyncJob Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/tag:
    get:
      tags:
        - tag
      summary: Tag list
      description: Query and retrieve a Tag list
      operationId: getTagList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Tag Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - tag
      summary: Create a Tag
      description: Create a new Tag
      operationId: createTag
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Tag resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag_Create'
      responses:
        '201':
          description: Tag Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/rally/tag/{id}':
    get:
      tags:
        - tag
      summary: Get a Tag
      description: Retrieve a Tag
      operationId: getTagById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Tag Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - tag
      summary: Update a Tag
      description: ''
      operationId: updateTag
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Tag resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag_Update'
      responses:
        '200':
          description: Tag Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - tag
      summary: Delete a Tag
      description: ''
      operationId: deleteTag
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /rally/user:
    get:
      tags:
        - user
      summary: User list
      description: Query and retrieve a User list
      operationId: getUserList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: User Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: |
            ## Common requests to manage users:

            ### get list of users by customer (org) id
            curl -X GET "https://rcm.9ci.dev/api/rally/user?q={"orgId":123}"

            ### response:
            {
                "page": 1,
                "total": 1,
                "records": 2,
                "data": [
                    {
                        "id": 100,
                        "createdDate": "2022-10-26T16:57:30.718943",
                        "inactive": false,
                        "version": 0,
                        "editedDate": "2022-10-26T16:57:30.718943",
                        "name": "Joe Doe",
                        "editedBy": 112,
                        "passwordExpired": false,
                        "orgId": 123,
                        "username": "joedoe",
                        "createdBy": 112,
                        "email": "joedoe@testme.com",
                        "roles": [
                            {
                                "id": 5,
                                "code": "CUSTOMER",
                                "name": "Customer"
                            }
                        ]
                    },
                    {
                        "id": 101,
                        "createdDate": "2022-10-26T16:43:51.801492",
                       ...
                    }
                ]
            }

            ## create user for customer (org) and assign role Customer
            curl -X POST "https://rcm.9ci.dev/api/rally/user" \
              -H "Content-Type: application/json" \

            {
                "username": "testme",
                "name": "Joe Doe",
                "orgId": 123,
                "email": "joedoe@testme.com",
                "roles": [
                    {
                        "id": 5
                    }
                ]
            }

            ### response with id created::
            {
                "id": 100,
                "createdDate": "2022-10-26T16:43:51.801492",
                "inactive": false,
                "version": 1,
                ...
            }

            ### response with error:
            {
                "ok": false,
                "status": 422,
                "code": "validation.problem",
                "title": "AppUser Validation Error(s)",
                "errors": [
                    {
                        "code": "Email",
                        "message": "must be a well-formed email address",
                        "field": "email"
                    }
                ]
            }

            ## update user (id 100) to make active
            curl -X PUT "https://rcm.9ci.dev/api/rally/user/100" \
              -H "Content-Type: application/json" \

            {
                "inactive":false
            }

            ### response:
            {
                "id": 100,
                "createdDate": "2022-10-26T16:43:51.801492",
                "inactive": false,
                "version": 1,
                ...
            }
    post:
      tags:
        - user
      summary: Create a User
      description: Create a new User
      operationId: createUser
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: User resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser_Create'
      responses:
        '201':
          description: User Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/rally/user/{id}':
    get:
      tags:
        - user
      summary: Get a User
      description: Retrieve a User
      operationId: getUserById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: User Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - user
      summary: Update a User
      description: ''
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: User resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser_Update'
      responses:
        '200':
          description: User Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - user
      summary: Delete a User
      description: ''
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/adjust:
    get:
      tags:
        - adjust
      summary: Adjust list
      description: Query and retrieve a Adjust list
      operationId: getAdjustList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Adjust Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - adjust
      summary: Create a Adjust
      description: Create a new Adjust
      operationId: createAdjust
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Adjust resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArAdjust_Create'
      responses:
        '201':
          description: Adjust Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAdjust'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/adjust/{id}':
    get:
      tags:
        - adjust
      summary: Get a Adjust
      description: Retrieve a Adjust
      operationId: getAdjustById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Adjust Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAdjust'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - adjust
      summary: Update a Adjust
      description: ''
      operationId: updateAdjust
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Adjust resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArAdjust_Update'
      responses:
        '200':
          description: Adjust Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAdjust'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - adjust
      summary: Delete a Adjust
      description: ''
      operationId: deleteAdjust
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/adjust/bulk:
    post:
      tags:
        - adjust
      summary: Bulk Create
      description: >
        Bulk Create Adjust Data should be passed in <b>as json object in
        body</b>. Expertimental option to pass an <b>attachment file id in query
        param</b>.
      operationId: bulkCreateAdjust
      requestBody:
        description: >-
          Array of objects to create Adjust following the same schema as a
          single POST for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Adjust
                $ref: '#/components/schemas/ArAdjust_Create'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: op
          in: query
          description: >
            Supports op=upsert. When this is set, will look for entity
            indentifier and updated if found.

            If not found it will insert.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem

            Will return a SyncJob entity. See docs for more details on its
            schema
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    put:
      tags:
        - adjust
      summary: Bulk Update
      description: |
        Bulk Update Adjust
      operationId: bulkUpdateAdjust
      requestBody:
        description: >-
          Array of objects to update Adjust using the same schema as a single
          PUT for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Adjust
                $ref: '#/components/schemas/ArAdjust_Update'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Job resource with Running status. When Finshed will have data with
            results.

            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem.

            Will return a SyncJob entity. See link for more details on its
            schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
                properties:
                  data:
                    description: Data will be an array of resources created
                    type: array
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  /ar/adjustJournal:
    get:
      tags:
        - adjustJournal
      summary: AdjustJournal list
      description: Query and retrieve a AdjustJournal list
      operationId: getAdjustJournalList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: AdjustJournal Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - adjustJournal
      summary: Create a AdjustJournal
      description: Create a new AdjustJournal
      operationId: createAdjustJournal
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: AdjustJournal resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArAdjustJournal_Create'
      responses:
        '201':
          description: AdjustJournal Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAdjustJournal'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/adjustJournal/{id}':
    get:
      tags:
        - adjustJournal
      summary: Get a AdjustJournal
      description: Retrieve a AdjustJournal
      operationId: getAdjustJournalById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: AdjustJournal Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAdjustJournal'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - adjustJournal
      summary: Update a AdjustJournal
      description: ''
      operationId: updateAdjustJournal
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: AdjustJournal resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArAdjustJournal_Update'
      responses:
        '200':
          description: AdjustJournal Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAdjustJournal'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - adjustJournal
      summary: Delete a AdjustJournal
      description: ''
      operationId: deleteAdjustJournal
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/adjustLine:
    get:
      tags:
        - adjustLine
      summary: AdjustLine list
      description: Query and retrieve a AdjustLine list
      operationId: getAdjustLineList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: AdjustLine Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - adjustLine
      summary: Create a AdjustLine
      description: Create a new AdjustLine
      operationId: createAdjustLine
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: AdjustLine resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArAdjustLine_Create'
      responses:
        '201':
          description: AdjustLine Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAdjustLine'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/adjustLine/{id}':
    get:
      tags:
        - adjustLine
      summary: Get a AdjustLine
      description: Retrieve a AdjustLine
      operationId: getAdjustLineById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: AdjustLine Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAdjustLine'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - adjustLine
      summary: Update a AdjustLine
      description: ''
      operationId: updateAdjustLine
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: AdjustLine resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArAdjustLine_Update'
      responses:
        '200':
          description: AdjustLine Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAdjustLine'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - adjustLine
      summary: Delete a AdjustLine
      description: ''
      operationId: deleteAdjustLine
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/agingSetup:
    get:
      tags:
        - agingSetup
      summary: AgingSetup list
      description: Query and retrieve a AgingSetup list
      operationId: getAgingSetupList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: AgingSetup Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  '/ar/agingSetup/{id}':
    get:
      tags:
        - agingSetup
      summary: Get a AgingSetup
      description: Retrieve a AgingSetup
      operationId: getAgingSetupById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: AgingSetup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAgingBucketSetup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - agingSetup
      summary: Update a AgingSetup
      description: ''
      operationId: updateAgingSetup
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: AgingSetup resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArAgingBucketSetup_Update'
      responses:
        '200':
          description: AgingSetup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAgingBucketSetup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  /ar/bank:
    get:
      tags:
        - bank
      summary: Bank list
      description: Query and retrieve a Bank list
      operationId: getBankList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Bank Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - bank
      summary: Create a Bank
      description: Create a new Bank
      operationId: createBank
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Bank resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_Create'
      responses:
        '201':
          description: Bank Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/bank/{id}':
    get:
      tags:
        - bank
      summary: Get a Bank
      description: Retrieve a Bank
      operationId: getBankById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Bank Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - bank
      summary: Update a Bank
      description: ''
      operationId: updateBank
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Bank resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_Update'
      responses:
        '200':
          description: Bank Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - bank
      summary: Delete a Bank
      description: ''
      operationId: deleteBank
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/bankAccount:
    get:
      tags:
        - bankAccount
      summary: BankAccount list
      description: Query and retrieve a BankAccount list
      operationId: getBankAccountList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: BankAccount Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - bankAccount
      summary: Create a BankAccount
      description: Create a new BankAccount
      operationId: createBankAccount
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: BankAccount resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount_Create'
      responses:
        '201':
          description: BankAccount Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/bankAccount/{id}':
    get:
      tags:
        - bankAccount
      summary: Get a BankAccount
      description: Retrieve a BankAccount
      operationId: getBankAccountById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: BankAccount Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - bankAccount
      summary: Update a BankAccount
      description: ''
      operationId: updateBankAccount
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: BankAccount resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount_Update'
      responses:
        '200':
          description: BankAccount Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - bankAccount
      summary: Delete a BankAccount
      description: ''
      operationId: deleteBankAccount
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/custAccount:
    get:
      tags:
        - custAccount
      summary: CustAccount list
      description: Query and retrieve a CustAccount list
      operationId: getCustAccountList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: CustAccount Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - custAccount
      summary: Create a CustAccount
      description: Create a new CustAccount
      operationId: createCustAccount
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: CustAccount resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustAccount_Create'
      responses:
        '201':
          description: CustAccount Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustAccount'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/custAccount/{id}':
    get:
      tags:
        - custAccount
      summary: Get a CustAccount
      description: Retrieve a CustAccount
      operationId: getCustAccountById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: CustAccount Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustAccount'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - custAccount
      summary: Update a CustAccount
      description: ''
      operationId: updateCustAccount
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: CustAccount resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustAccount_Update'
      responses:
        '200':
          description: CustAccount Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustAccount'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - custAccount
      summary: Delete a CustAccount
      description: ''
      operationId: deleteCustAccount
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/custAccount/bulk:
    post:
      tags:
        - custAccount
      summary: Bulk Create
      description: >
        Bulk Create CustAccount Data should be passed in <b>as json object in
        body</b>. Expertimental option to pass an <b>attachment file id in query
        param</b>.
      operationId: bulkCreateCustAccount
      requestBody:
        description: >-
          Array of objects to create CustAccount following the same schema as a
          single POST for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for CustAccount
                $ref: '#/components/schemas/CustAccount_Create'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: op
          in: query
          description: >
            Supports op=upsert. When this is set, will look for entity
            indentifier and updated if found.

            If not found it will insert.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem

            Will return a SyncJob entity. See docs for more details on its
            schema
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    put:
      tags:
        - custAccount
      summary: Bulk Update
      description: |
        Bulk Update CustAccount
      operationId: bulkUpdateCustAccount
      requestBody:
        description: >-
          Array of objects to update CustAccount using the same schema as a
          single PUT for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for CustAccount
                $ref: '#/components/schemas/CustAccount_Update'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Job resource with Running status. When Finshed will have data with
            results.

            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem.

            Will return a SyncJob entity. See link for more details on its
            schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
                properties:
                  data:
                    description: Data will be an array of resources created
                    type: array
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  /ar/custAccountType:
    get:
      tags:
        - custAccountType
      summary: CustAccountType list
      description: Query and retrieve a CustAccountType list
      operationId: getCustAccountTypeList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: CustAccountType Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - custAccountType
      summary: Create a CustAccountType
      description: Create a new CustAccountType
      operationId: createCustAccountType
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: CustAccountType resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustAccountType_Create'
      responses:
        '201':
          description: CustAccountType Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustAccountType'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/custAccountType/{id}':
    get:
      tags:
        - custAccountType
      summary: Get a CustAccountType
      description: Retrieve a CustAccountType
      operationId: getCustAccountTypeById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: CustAccountType Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustAccountType'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - custAccountType
      summary: Update a CustAccountType
      description: ''
      operationId: updateCustAccountType
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: CustAccountType resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustAccountType_Update'
      responses:
        '200':
          description: CustAccountType Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustAccountType'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - custAccountType
      summary: Delete a CustAccountType
      description: ''
      operationId: deleteCustAccountType
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/custClass:
    get:
      tags:
        - custClass
      summary: CustClass list
      description: Query and retrieve a CustClass list
      operationId: getCustClassList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: CustClass Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - custClass
      summary: Create a CustClass
      description: Create a new CustClass
      operationId: createCustClass
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: CustClass resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustClass_Create'
      responses:
        '201':
          description: CustClass Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustClass'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/custClass/{id}':
    get:
      tags:
        - custClass
      summary: Get a CustClass
      description: Retrieve a CustClass
      operationId: getCustClassById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: CustClass Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustClass'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - custClass
      summary: Update a CustClass
      description: ''
      operationId: updateCustClass
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: CustClass resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustClass_Update'
      responses:
        '200':
          description: CustClass Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustClass'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - custClass
      summary: Delete a CustClass
      description: ''
      operationId: deleteCustClass
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/custFamily:
    get:
      tags:
        - custFamily
      summary: CustFamily list
      description: Query and retrieve a CustFamily list
      operationId: getCustFamilyList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: CustFamily Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - custFamily
      summary: Create a CustFamily
      description: Create a new CustFamily
      operationId: createCustFamily
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: CustFamily resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustFamily_Create'
      responses:
        '201':
          description: CustFamily Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustFamily'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/custFamily/{id}':
    get:
      tags:
        - custFamily
      summary: Get a CustFamily
      description: Retrieve a CustFamily
      operationId: getCustFamilyById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: CustFamily Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustFamily'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - custFamily
      summary: Update a CustFamily
      description: ''
      operationId: updateCustFamily
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: CustFamily resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustFamily_Update'
      responses:
        '200':
          description: CustFamily Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustFamily'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - custFamily
      summary: Delete a CustFamily
      description: ''
      operationId: deleteCustFamily
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/custFamily/bulk:
    post:
      tags:
        - custFamily
      summary: Bulk Ops
      description: >
        To create custFamily, child and parent objects need to be passed in. If
        id is unknown for child/parent, lookup can be done by sourceId or num.
        To update custFamily, object has to be found by child record. Lookup on
        custFamily is by child customer id, sourceid or num. Once we find
        custFamily to update we can assign different parent or remove parent.
        Child customer cannot be changed.
      operationId: bulkFamily
      requestBody:
        description: Customer child and customer parent to link two customers together
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for CustFamily
                $ref: '#/components/schemas/CustFamily_Create'
              properties:
                data:
                  description: Customer parent record
                  type: array
                  items:
                    title: Customer Child and Customer parent
                    type: object
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: op
          in: query
          description: >
            Supports op=upsert. When this is set, will look for entity
            indentifier and updated if found.

            If not found it will insert.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem

            Will return a SyncJob entity. See docs for more details on its
            schema
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            ### CREATE


            # create custFamily knowing id of child and parent

            curl -X POST "https://sandbox.9ci.io/api/ar/custFamily/bulk" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            [
              {
                "child": {
                  "id": 1234
                },
                "parent": {
                  "id": 2345
                }
              }
            ]


            # create custFamily with child sourceId and parent sourceid

            curl -X POST "https://sandbox.9ci.io/api/ar/custFamily/bulk" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            [
              {
                "child": {
                  "sourceId": "Cust-123-123"
                },
                "parent": {
                  "sourceId": "Cust-234-234"
                }
              }
            ]



            ### UPDATES


            # set new parent knowing child and parent ids

            curl -X PUT "https://sandbox.9ci.io/api/ar/custFamily/bulk" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            [
              {
                "child": {
                  "id": 1234
                },
                "parent": {
                  "id": 2345
                }
              }
            ]


            # set new parent with child sourceId and new parent sourceid

            curl -X PUT "https://sandbox.9ci.io/api/ar/custFamily/bulk" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            [
              {
                "child": {
                  "sourceId": "Cust-123-123"
                },
                "parent": {
                  "sourceId": "Cust-234-234"
                }
              }
            ]


            # remove parent, lookup cust family by child sourceId

            curl -X PUT "https://sandbox.9ci.io/api/ar/custFamily/bulk" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            [
              {
                "child": {
                  "sourceId": "Cust-123-123"
                }
              }
            ]


            ##Upsert -operation upsert will lookup child (can be by id or
            sourceid) - if found update, if not insert

            curl -X POST
            "https://sandbox.9ci.io/api/ar/custFamily/bulk?op=upsert" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            [
              {
                "child": {
                  "id": 1234
                },
                "parent": {
                  "id": 2345
                }
              }
            ]
    put:
      tags:
        - custFamily
      summary: Bulk Update
      description: |
        Bulk Update CustFamily
      operationId: bulkUpdateCustFamily
      requestBody:
        description: >-
          Array of objects to update CustFamily using the same schema as a
          single PUT for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for CustFamily
                $ref: '#/components/schemas/CustFamily_Update'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Job resource with Running status. When Finshed will have data with
            results.

            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem.

            Will return a SyncJob entity. See link for more details on its
            schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
                properties:
                  data:
                    description: Data will be an array of resources created
                    type: array
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  /ar/custSetup:
    get:
      tags:
        - custSetup
      summary: CustSetup list
      description: Query and retrieve a CustSetup list
      operationId: getCustSetupList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: CustSetup Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - custSetup
      summary: Create a CustSetup
      description: Create a new CustSetup
      operationId: createCustSetup
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: CustSetup resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustSetup_Create'
      responses:
        '201':
          description: CustSetup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustSetup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/custSetup/{id}':
    get:
      tags:
        - custSetup
      summary: Get a CustSetup
      description: Retrieve a CustSetup
      operationId: getCustSetupById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: CustSetup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustSetup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - custSetup
      summary: Update a CustSetup
      description: ''
      operationId: updateCustSetup
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: CustSetup resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustSetup_Update'
      responses:
        '200':
          description: CustSetup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustSetup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - custSetup
      summary: Delete a CustSetup
      description: ''
      operationId: deleteCustSetup
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/customer:
    get:
      tags:
        - customer
      summary: Customer list
      description: Query and retrieve a Customer list
      operationId: getCustomerList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Customer Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # simple query

            curl -i -G 'https://rcm.9ci.dev/api/ar/customer?q=123'


            # example with mango, sort and paging, use -G for the get to append
            the data-urlencode, -v shows trace to see resulting url

            curl -i -v -G
            'https://rcm.9ci.dev/api/ar/customer?sort=foo&page=2&max=50' \

            --data-urlencode 'q={foo:"1234*"}'


            # Search customers by tags

            curl -i -G
            'https://rcm.9ci.dev/api/ar/customer?q={"tags":[{"id":8,"code":"Cred-chk","name":"Credit
            Check"}]}&page=1&max=20'


            # Search customers by terms

            curl -i -G
            'https://rcm.9ci.dev/api/ar/customer?q={"arTerms":[{"id":8},
            {"id":9}]}&page=1&max=20'


            # Search customers by Sales reps

            curl -i -G
            'https://rcm.9ci.dev/api/ar/customer?q={"salesReps":[{"id":8},
            {"id":9}]}&page=1&max=20'


            # Same search queries can be used for CustAccounts


            #Note: While searching by tags/terms/salesReps, only id field is
            considered, other fields such as code,name are not considered for
            search.
    post:
      tags:
        - customer
      summary: Create a Customer
      description: Create a new Customer
      operationId: createCustomer
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Customer resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer_Create'
      responses:
        '201':
          description: Customer Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/customer/{id}':
    get:
      tags:
        - customer
      summary: Get a Customer
      description: Retrieve a Customer
      operationId: getCustomerById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Customer Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - customer
      summary: Update a Customer
      description: ''
      operationId: updateCustomer
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Customer resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer_Update'
      responses:
        '200':
          description: Customer Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - customer
      summary: Delete a Customer
      description: ''
      operationId: deleteCustomer
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/customer/bulk:
    post:
      tags:
        - customer
      summary: Bulk Create
      description: >
        Bulk Create Customer Data should be passed in <b>as json object in
        body</b>. Expertimental option to pass an <b>attachment file id in query
        param</b>.
      operationId: bulkCreateCustomer
      requestBody:
        description: >-
          Array of objects to create Customer following the same schema as a
          single POST for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Customer
                $ref: '#/components/schemas/Customer_Create'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: op
          in: query
          description: >
            Supports op=upsert. When this is set, will look for entity
            indentifier and updated if found.

            If not found it will insert.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem

            Will return a SyncJob entity. See docs for more details on its
            schema
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    put:
      tags:
        - customer
      summary: Bulk Update
      description: |
        Bulk Update Customer
      operationId: bulkUpdateCustomer
      requestBody:
        description: >-
          Array of objects to update Customer using the same schema as a single
          PUT for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Customer
                $ref: '#/components/schemas/Customer_Update'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Job resource with Running status. When Finshed will have data with
            results.

            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem.

            Will return a SyncJob entity. See link for more details on its
            schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
                properties:
                  data:
                    description: Data will be an array of resources created
                    type: array
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  /ar/glAccount:
    get:
      tags:
        - glAccount
      summary: GlAccount list
      description: Query and retrieve a GlAccount list
      operationId: getGlAccountList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: GlAccount Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - glAccount
      summary: Create a GlAccount
      description: Create a new GlAccount
      operationId: createGlAccount
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: GlAccount resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlAccount_Create'
      responses:
        '201':
          description: GlAccount Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlAccount'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/glAccount/{id}':
    get:
      tags:
        - glAccount
      summary: Get a GlAccount
      description: Retrieve a GlAccount
      operationId: getGlAccountById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: GlAccount Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlAccount'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - glAccount
      summary: Update a GlAccount
      description: ''
      operationId: updateGlAccount
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: GlAccount resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlAccount_Update'
      responses:
        '200':
          description: GlAccount Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlAccount'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - glAccount
      summary: Delete a GlAccount
      description: ''
      operationId: deleteGlAccount
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/glBatch:
    get:
      tags:
        - glBatch
      summary: GlBatch list
      description: Query and retrieve a GlBatch list
      operationId: getGlBatchList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: GlBatch Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # simple query

            curl -i -G 'https://rcm.9ci.dev/api/ar/glBatch/123'


            # get open glbatch that failed. Include only 3 columns: id, status
            and glPostDate return in xlsx format

            # FIXME the customer filter below does not seem right

            curl -i -G
            'https://rcm.9ci.dev/api/ar/glBatch/q={"success":false,"customer":[{"num":"12345"}]}&includes=id,batchStatus,glPostDate&format=xlsx'
    post:
      tags:
        - glBatch
      summary: Create a GlBatch
      description: Create a new GlBatch
      operationId: createGlBatch
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: GlBatch resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlBatch_Create'
      responses:
        '201':
          description: GlBatch Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlBatch'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/glBatch/{id}':
    get:
      tags:
        - glBatch
      summary: Get a GlBatch
      description: Retrieve a GlBatch
      operationId: getGlBatchById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: GlBatch Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlBatch'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - glBatch
      summary: Update a GlBatch
      description: ''
      operationId: updateGlBatch
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: GlBatch resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlBatch_Update'
      responses:
        '200':
          description: GlBatch Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlBatch'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - glBatch
      summary: Delete a GlBatch
      description: ''
      operationId: deleteGlBatch
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/glJournal:
    get:
      tags:
        - glJournal
      summary: GlJournal list
      description: Query and retrieve a GlJournal list
      operationId: getGlJournalList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: GlJournal Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - glJournal
      summary: Create a GlJournal
      description: Create a new GlJournal
      operationId: createGlJournal
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: GlJournal resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlJournal_Create'
      responses:
        '201':
          description: GlJournal Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlJournal'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/glJournal/{id}':
    get:
      tags:
        - glJournal
      summary: Get a GlJournal
      description: Retrieve a GlJournal
      operationId: getGlJournalById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: GlJournal Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlJournal'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - glJournal
      summary: Update a GlJournal
      description: ''
      operationId: updateGlJournal
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: GlJournal resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlJournal_Update'
      responses:
        '200':
          description: GlJournal Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlJournal'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - glJournal
      summary: Delete a GlJournal
      description: ''
      operationId: deleteGlJournal
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/glPostPeriod:
    get:
      tags:
        - glPostPeriod
      summary: GlPostPeriod list
      description: Query and retrieve a GlPostPeriod list
      operationId: getGlPostPeriodList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: GlPostPeriod Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - glPostPeriod
      summary: Create a GlPostPeriod
      description: Create a new GlPostPeriod
      operationId: createGlPostPeriod
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: GlPostPeriod resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlPostPeriod_Create'
      responses:
        '201':
          description: GlPostPeriod Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlPostPeriod'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/glPostPeriod/{id}':
    get:
      tags:
        - glPostPeriod
      summary: Get a GlPostPeriod
      description: Retrieve a GlPostPeriod
      operationId: getGlPostPeriodById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: GlPostPeriod Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlPostPeriod'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - glPostPeriod
      summary: Update a GlPostPeriod
      description: ''
      operationId: updateGlPostPeriod
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: GlPostPeriod resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlPostPeriod_Update'
      responses:
        '200':
          description: GlPostPeriod Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlPostPeriod'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - glPostPeriod
      summary: Delete a GlPostPeriod
      description: ''
      operationId: deleteGlPostPeriod
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/lockbox:
    get:
      tags:
        - lockbox
      summary: Lockbox list
      description: Query and retrieve a Lockbox list
      operationId: getLockboxList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Lockbox Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - lockbox
      summary: Create a Lockbox
      description: Create a new Lockbox
      operationId: createLockbox
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Lockbox resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lockbox_Create'
      responses:
        '201':
          description: Lockbox Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lockbox'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/lockbox/{id}':
    get:
      tags:
        - lockbox
      summary: Get a Lockbox
      description: Retrieve a Lockbox
      operationId: getLockboxById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Lockbox Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lockbox'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - lockbox
      summary: Update a Lockbox
      description: ''
      operationId: updateLockbox
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Lockbox resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lockbox_Update'
      responses:
        '200':
          description: Lockbox Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lockbox'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - lockbox
      summary: Delete a Lockbox
      description: ''
      operationId: deleteLockbox
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/reason:
    get:
      tags:
        - reason
      summary: Reason list
      description: Query and retrieve a Reason list
      operationId: getReasonList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Reason Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - reason
      summary: Create a Reason
      description: Create a new Reason
      operationId: createReason
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Reason resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArReason_Create'
      responses:
        '201':
          description: Reason Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArReason'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/reason/{id}':
    get:
      tags:
        - reason
      summary: Get a Reason
      description: Retrieve a Reason
      operationId: getReasonById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Reason Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArReason'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - reason
      summary: Update a Reason
      description: ''
      operationId: updateReason
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Reason resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArReason_Update'
      responses:
        '200':
          description: Reason Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArReason'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - reason
      summary: Delete a Reason
      description: ''
      operationId: deleteReason
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/reasonGroup:
    get:
      tags:
        - reasonGroup
      summary: ReasonGroup list
      description: Query and retrieve a ReasonGroup list
      operationId: getReasonGroupList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: ReasonGroup Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - reasonGroup
      summary: Create a ReasonGroup
      description: Create a new ReasonGroup
      operationId: createReasonGroup
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: ReasonGroup resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArReasonGroup_Create'
      responses:
        '201':
          description: ReasonGroup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArReasonGroup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/reasonGroup/{id}':
    get:
      tags:
        - reasonGroup
      summary: Get a ReasonGroup
      description: Retrieve a ReasonGroup
      operationId: getReasonGroupById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: ReasonGroup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArReasonGroup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - reasonGroup
      summary: Update a ReasonGroup
      description: ''
      operationId: updateReasonGroup
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: ReasonGroup resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArReasonGroup_Update'
      responses:
        '200':
          description: ReasonGroup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArReasonGroup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - reasonGroup
      summary: Delete a ReasonGroup
      description: ''
      operationId: deleteReasonGroup
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/refnumGen:
    get:
      tags:
        - refnumGen
      summary: RefnumGen list
      description: Query and retrieve a RefnumGen list
      operationId: getRefnumGenList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: RefnumGen Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - refnumGen
      summary: Create a RefnumGen
      description: Create a new RefnumGen
      operationId: createRefnumGen
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: RefnumGen resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRefnumGenerator_Create'
      responses:
        '201':
          description: RefnumGen Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRefnumGenerator'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/refnumGen/{id}':
    get:
      tags:
        - refnumGen
      summary: Get a RefnumGen
      description: Retrieve a RefnumGen
      operationId: getRefnumGenById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: RefnumGen Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRefnumGenerator'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - refnumGen
      summary: Update a RefnumGen
      description: ''
      operationId: updateRefnumGen
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: RefnumGen resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRefnumGenerator_Update'
      responses:
        '200':
          description: RefnumGen Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRefnumGenerator'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - refnumGen
      summary: Delete a RefnumGen
      description: ''
      operationId: deleteRefnumGen
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/status:
    get:
      tags:
        - status
      summary: Status list
      description: Query and retrieve a Status list
      operationId: getStatusList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Status Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - status
      summary: Create a Status
      description: Create a new Status
      operationId: createStatus
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Status resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArStatus_Create'
      responses:
        '201':
          description: Status Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArStatus'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/status/{id}':
    get:
      tags:
        - status
      summary: Get a Status
      description: Retrieve a Status
      operationId: getStatusById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Status Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArStatus'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - status
      summary: Update a Status
      description: ''
      operationId: updateStatus
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Status resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArStatus_Update'
      responses:
        '200':
          description: Status Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArStatus'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - status
      summary: Delete a Status
      description: ''
      operationId: deleteStatus
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/term:
    get:
      tags:
        - term
      summary: Term list
      description: Query and retrieve a Term list
      operationId: getTermList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Term Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - term
      summary: Create a Term
      description: Create a new Term
      operationId: createTerm
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Term resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArTerm_Create'
      responses:
        '201':
          description: Term Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTerm'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/term/{id}':
    get:
      tags:
        - term
      summary: Get a Term
      description: Retrieve a Term
      operationId: getTermById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Term Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTerm'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - term
      summary: Update a Term
      description: ''
      operationId: updateTerm
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Term resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArTerm_Update'
      responses:
        '200':
          description: Term Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTerm'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - term
      summary: Delete a Term
      description: ''
      operationId: deleteTerm
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/tran:
    get:
      tags:
        - tran
      summary: Tran list
      description: Query and retrieve a Tran list
      operationId: getTranList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Tran Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            # simple query

            curl -i -G 'https://rcm.9ci.dev/api/ar/tran?q=123'


            # example with mango, sort and paging, use -G for the get to append
            the data-urlencode, -v shows trace to see resulting url

            curl -i -v -G
            'https://rcm.9ci.dev/api/ar/tran?sort=foo&page=2&max=50' \

            --data-urlencode 'q={foo:"1234*"}'


            # get open transactions per customer num. Include only 3 columns:
            refnum, amount and date. return in csv format

            curl -i -G
            'https://rcm.9ci.dev/api/ar/tran/q={"state":[0],"customer":[{"num":"12345"}]}&includes=refnum,
            amount, tranDate&format=csv'


            # get list of recent transactions (search by date), include more
            columns, sort by custNum, limit to top 1,000 records, return in
            Excel format

            GET 'https://rcm.9ci.dev/api/ar/tran?includes=refnum, ponum,
            refnum2, customer.num, customer.name, custAccount.num,
            custAccount.name, tranDate, dueDate, origAmount, amount,
            status.code, flex.text1, ext.bolNum, flex.text4,
            comments&q={"state":[0],"tranDate":{"$gt":"2022-06-26"},
            "docType":"IN"}&max=1000&format=xlsx&sort=custNum'


            # get list of transactions per customer id and use includesKey that
            has pre-configured list of columns

            GET
            'https://rcm.9ci.dev/api/ar/tran?q={"state":[0],"customer":[{"id":12345}]}&includesKey=getFull&format=csv'


            # get list of open transactions per segmentation org (in this case
            division represents state (num: CA))

            GET
            'https://rcm.9ci.dev/api/ar/tran?q={"state":[0],"member":{"division":{"num":"CA"}}&max=1000&format=xlsx&sort=custNum'


            # get list of closed payments since some date, payment's original
            amount was less than $0 (excludes offsets that are $0)

            GET
            'https://rcm.9ci.dev/api/ar/tran?q={"customerId":"123","state":[1],"docType":["PA"],"closedDate":{"$gte":"2022-08-13","$lte":"2022-09-13"},"origAmount":{"$lte":"0"}}'
    post:
      tags:
        - tran
      summary: Create a Tran
      description: Create a new Tran
      operationId: createTran
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Tran resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArTran_Create'
      responses:
        '201':
          description: Tran Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTran'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/tran/{id}':
    get:
      tags:
        - tran
      summary: Get a Tran
      description: Retrieve a Tran
      operationId: getTranById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Tran Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTran'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - tran
      summary: Update a Tran
      description: ''
      operationId: updateTran
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Tran resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArTran_Update'
      responses:
        '200':
          description: Tran Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTran'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - tran
      summary: Delete a Tran
      description: ''
      operationId: deleteTran
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/tran/bulk:
    post:
      tags:
        - tran
      summary: Bulk Create
      description: >
        Bulk Create Tran. Data should be passed in either <b>as json object
        array in body</b> An experimental feature for CSV exists to pass an
        attachment file id in query param. When data is passed in as json body
        it doesn't require attachmentId and when data is passed in as
        attachmentId it doesn't require json object in the body. Rest call with
        attachmentId will be processed as async=true.

        Query params used only to process data from the attachment file:
          * attachmentId
          * headerPathDelimiter
          * linkField
          * tranFilename
          * detailsFileName
          * controlCount
      operationId: bulkCreateTran
      requestBody:
        description: >-
          Array of objects to create Tran following the same schema as a single
          POST for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Tran
                $ref: '#/components/schemas/ArTran_Create'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: op
          in: query
          description: >
            Supports op=upsert. When this is set, will look for entity
            indentifier and updated if found.

            If not found it will insert.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
        - name: linkField
          in: query
          description: >-
            <small>(with attachmentId only)</small> Field that links lines
            (ArTranLines) to the header record (ArTran). Default is
            'arTran.sourceId' but if you have underscores pass in
            'arTran_sourceId'  (when data imported from the file)
          schema:
            type: string
        - name: tranFilename
          in: query
          description: >-
            <small>(with attachmentId only)</small> File name for ArTran csv
            inside zip. Default is data.csv
          schema:
            type: string
        - name: detailsFileName
          in: query
          description: >-
            <small>(with attachmentId only)</small> File name for ArTranLine csv
            inside zip. Default is detail.csv
          schema:
            type: string
        - name: controlCount
          in: query
          description: >-
            <small>(with attachmentId only)</small> Count of lines in ArTran
            file
          schema:
            type: integer
      responses:
        '207':
          description: >
            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem

            Will return a SyncJob entity. See docs for more details on its
            schema
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >+
            # call bulk with attachmentId

            curl -X POST
            "https://sandbox.9ci.io/api/ar/tran/bulk?detailLinkField=arTran_sourceId&headerPathDelimiter=_&attachmentId=1234&controlCount=1000"
            \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            # call bulk with json body

            curl -X POST
            "https://sandbox.9ci.io/api/ar/tran/bulk?jobSource=Oracle"\
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}'

            [
              {
                "amount": 100,
                "refnum": "123",
                "customer": {
                  "sourceId": "510100"
                }
              },
              {
                "amount": 200,
                "refnum": "234",
                "customer": {
                  "sourceId": "K14700"
                }
              }
            ]


            # RESPONSE


            # call with async that returns job id

            HTTP/1.1 207

            {
              "id": 1000,
              "ok": false,
              "state": "Running",
              "sourceId": "POST /api/ar/tran/bulk?async=true",
              "data": []
            }

    put:
      tags:
        - tran
      summary: Bulk Update
      description: |
        Bulk Update Tran
      operationId: bulkUpdateTran
      requestBody:
        description: >-
          Array of objects to update Tran using the same schema as a single PUT
          for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Tran
                $ref: '#/components/schemas/ArTran_Update'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Job resource with Running status. When Finshed will have data with
            results.

            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem.

            Will return a SyncJob entity. See link for more details on its
            schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
                properties:
                  data:
                    description: Data will be an array of resources created
                    type: array
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  /ar/tranJournal:
    get:
      tags:
        - tranJournal
      summary: TranJournal list
      description: Query and retrieve a TranJournal list
      operationId: getTranJournalList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: TranJournal Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - tranJournal
      summary: Create a TranJournal
      description: Create a new TranJournal
      operationId: createTranJournal
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: TranJournal resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArTranJournal_Create'
      responses:
        '201':
          description: TranJournal Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTranJournal'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/tranJournal/{id}':
    get:
      tags:
        - tranJournal
      summary: Get a TranJournal
      description: Retrieve a TranJournal
      operationId: getTranJournalById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: TranJournal Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTranJournal'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - tranJournal
      summary: Update a TranJournal
      description: ''
      operationId: updateTranJournal
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: TranJournal resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArTranJournal_Update'
      responses:
        '200':
          description: TranJournal Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTranJournal'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - tranJournal
      summary: Delete a TranJournal
      description: ''
      operationId: deleteTranJournal
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/tranLine:
    get:
      tags:
        - tranLine
      summary: TranLine list
      description: Query and retrieve a TranLine list
      operationId: getTranLineList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: TranLine Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - tranLine
      summary: Create a TranLine
      description: Create a new TranLine
      operationId: createTranLine
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: TranLine resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArTranLine_Create'
      responses:
        '201':
          description: TranLine Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTranLine'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/tranLine/{id}':
    get:
      tags:
        - tranLine
      summary: Get a TranLine
      description: Retrieve a TranLine
      operationId: getTranLineById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: TranLine Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTranLine'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - tranLine
      summary: Update a TranLine
      description: ''
      operationId: updateTranLine
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: TranLine resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArTranLine_Update'
      responses:
        '200':
          description: TranLine Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTranLine'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - tranLine
      summary: Delete a TranLine
      description: ''
      operationId: deleteTranLine
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ar/tranType:
    get:
      tags:
        - tranType
      summary: TranType list
      description: Query and retrieve a TranType list
      operationId: getTranTypeList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: TranType Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - tranType
      summary: Create a TranType
      description: Create a new TranType
      operationId: createTranType
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: TranType resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArTranType_Create'
      responses:
        '201':
          description: TranType Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTranType'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/ar/tranType/{id}':
    get:
      tags:
        - tranType
      summary: Get a TranType
      description: Retrieve a TranType
      operationId: getTranTypeById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: TranType Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTranType'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - tranType
      summary: Update a TranType
      description: ''
      operationId: updateTranType
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: TranType resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArTranType_Update'
      responses:
        '200':
          description: TranType Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArTranType'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - tranType
      summary: Delete a TranType
      description: ''
      operationId: deleteTranType
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/batch:
    get:
      tags:
        - batch
      summary: Batch list
      description: Query and retrieve a Batch list
      operationId: getBatchList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Batch Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - batch
      summary: Create a Batch
      description: Create a new Batch
      operationId: createBatch
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Batch resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch_Create'
      responses:
        '201':
          description: Batch Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/batch/{id}':
    get:
      tags:
        - batch
      summary: Get a Batch
      description: Retrieve a Batch
      operationId: getBatchById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Batch Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - batch
      summary: Update a Batch
      description: ''
      operationId: updateBatch
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Batch resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch_Update'
      responses:
        '200':
          description: Batch Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - batch
      summary: Delete a Batch
      description: ''
      operationId: deleteBatch
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/batch/bulk:
    post:
      tags:
        - batch
      summary: Bulk Create
      description: >
        Bulk Create Batch Data should be passed in <b>as json object in
        body</b>. Expertimental option to pass an <b>attachment file id in query
        param</b>.
      operationId: bulkCreateBatch
      requestBody:
        description: >-
          Array of objects to create Batch following the same schema as a single
          POST for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Batch
                $ref: '#/components/schemas/Batch_Create'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: op
          in: query
          description: >
            Supports op=upsert. When this is set, will look for entity
            indentifier and updated if found.

            If not found it will insert.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem

            Will return a SyncJob entity. See docs for more details on its
            schema
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    put:
      tags:
        - batch
      summary: Bulk Update
      description: |
        Bulk Update Batch
      operationId: bulkUpdateBatch
      requestBody:
        description: >-
          Array of objects to update Batch using the same schema as a single PUT
          for this resource.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                title: Create schema for Batch
                $ref: '#/components/schemas/Batch_Update'
      parameters:
        - name: source
          in: query
          description: >-
            You can specify consistent source name for the data, for example
            "Oracle ERP", "Dynamics" etc..
          required: true
          schema:
            type: string
        - name: jobSource
          in: query
          description: >-
            Legacy, better to use source instead but either this or source are
            required.
          schema:
            type: string
        - name: attachmentId
          in: query
          description: >-
            <small>(for CSV)</small> Id of attachment record for CSV. Attachment
            should be a zip with csv files.
          schema:
            type: integer
        - name: dataFilename
          in: query
          description: >
            <small>(with attachmentId only)</small> the name of the data file in
            the zip, defaults to data.csv
          schema:
            type: string
        - name: headerPathDelimiter
          in: query
          description: >
            <small>(with attachmentId only)</small> CSV header pathDelimiter.
            Default is `.`, pass in `_` for underscore (this is path delimiter
            for header names, not csv delimiter)
          schema:
            type: string
        - name: async
          in: query
          description: >
            <small>(default: true)</small> Whether it should run async in
            background thread and return the job immediately. SyncJob should
            then  be polled and checked for Finished status.
          schema:
            type: string
        - name: parallel
          in: query
          description: >
            <small>(default: true)</small> Normally used only for testing, Data
            is sliced and processed in chunks. Default it to process the slices
            asyncronously in parallel.

            If this is set to false then will not run in parallel and will be
            single threaded.

            Not normally used unless for testing, debugging or if encountering
            deadlocks.
          schema:
            type: string
      responses:
        '207':
          description: >
            Job resource with Running status. When Finshed will have data with
            results.

            Multi-Status - processing was completed and the data field will need
            to be checked for success or problem.

            Will return a SyncJob entity. See link for more details on its
            schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
                properties:
                  data:
                    description: Data will be an array of resources created
                    type: array
        '400':
          $ref: '#/components/responses/400_Problem'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  /autocash/corCode:
    get:
      tags:
        - corCode
      summary: CorCode list
      description: Query and retrieve a CorCode list
      operationId: getCorCodeList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: CorCode Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  '/autocash/corCode/{id}':
    get:
      tags:
        - corCode
      summary: Get a CorCode
      description: Retrieve a CorCode
      operationId: getCorCodeById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: CorCode Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorCode'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - corCode
      summary: Update a CorCode
      description: ''
      operationId: updateCorCode
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: CorCode resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorCode_Update'
      responses:
        '200':
          description: CorCode Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorCode'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  /autocash/layoutField:
    get:
      tags:
        - layoutField
      summary: LayoutField list
      description: Query and retrieve a LayoutField list
      operationId: getLayoutFieldList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: LayoutField Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - layoutField
      summary: Create a LayoutField
      description: Create a new LayoutField
      operationId: createLayoutField
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: LayoutField resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcLayoutField_Create'
      responses:
        '201':
          description: LayoutField Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcLayoutField'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/layoutField/{id}':
    get:
      tags:
        - layoutField
      summary: Get a LayoutField
      description: Retrieve a LayoutField
      operationId: getLayoutFieldById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: LayoutField Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcLayoutField'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - layoutField
      summary: Update a LayoutField
      description: ''
      operationId: updateLayoutField
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: LayoutField resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcLayoutField_Update'
      responses:
        '200':
          description: LayoutField Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcLayoutField'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - layoutField
      summary: Delete a LayoutField
      description: ''
      operationId: deleteLayoutField
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/layoutImport:
    get:
      tags:
        - layoutImport
      summary: LayoutImport list
      description: Query and retrieve a LayoutImport list
      operationId: getLayoutImportList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: LayoutImport Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - layoutImport
      summary: Create a LayoutImport
      description: Create a new LayoutImport
      operationId: createLayoutImport
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: LayoutImport resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcLayoutImport_Create'
      responses:
        '201':
          description: LayoutImport Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcLayoutImport'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/layoutImport/{id}':
    get:
      tags:
        - layoutImport
      summary: Get a LayoutImport
      description: Retrieve a LayoutImport
      operationId: getLayoutImportById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: LayoutImport Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcLayoutImport'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - layoutImport
      summary: Update a LayoutImport
      description: ''
      operationId: updateLayoutImport
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: LayoutImport resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcLayoutImport_Update'
      responses:
        '200':
          description: LayoutImport Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcLayoutImport'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - layoutImport
      summary: Delete a LayoutImport
      description: ''
      operationId: deleteLayoutImport
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/layoutRecord:
    get:
      tags:
        - layoutRecord
      summary: LayoutRecord list
      description: Query and retrieve a LayoutRecord list
      operationId: getLayoutRecordList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: LayoutRecord Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - layoutRecord
      summary: Create a LayoutRecord
      description: Create a new LayoutRecord
      operationId: createLayoutRecord
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: LayoutRecord resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcLayoutRecord_Create'
      responses:
        '201':
          description: LayoutRecord Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcLayoutRecord'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/layoutRecord/{id}':
    get:
      tags:
        - layoutRecord
      summary: Get a LayoutRecord
      description: Retrieve a LayoutRecord
      operationId: getLayoutRecordById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: LayoutRecord Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcLayoutRecord'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - layoutRecord
      summary: Update a LayoutRecord
      description: ''
      operationId: updateLayoutRecord
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: LayoutRecord resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcLayoutRecord_Update'
      responses:
        '200':
          description: LayoutRecord Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcLayoutRecord'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - layoutRecord
      summary: Delete a LayoutRecord
      description: ''
      operationId: deleteLayoutRecord
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/micrBlacklist:
    get:
      tags:
        - micrBlacklist
      summary: MicrBlacklist list
      description: Query and retrieve a MicrBlacklist list
      operationId: getMicrBlacklistList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: MicrBlacklist Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - micrBlacklist
      summary: Create a MicrBlacklist
      description: Create a new MicrBlacklist
      operationId: createMicrBlacklist
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: MicrBlacklist resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcMicrBlacklist_Create'
      responses:
        '201':
          description: MicrBlacklist Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcMicrBlacklist'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/micrBlacklist/{id}':
    get:
      tags:
        - micrBlacklist
      summary: Get a MicrBlacklist
      description: Retrieve a MicrBlacklist
      operationId: getMicrBlacklistById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: MicrBlacklist Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcMicrBlacklist'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - micrBlacklist
      summary: Update a MicrBlacklist
      description: ''
      operationId: updateMicrBlacklist
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: MicrBlacklist resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcMicrBlacklist_Update'
      responses:
        '200':
          description: MicrBlacklist Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcMicrBlacklist'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - micrBlacklist
      summary: Delete a MicrBlacklist
      description: ''
      operationId: deleteMicrBlacklist
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/payment:
    get:
      tags:
        - payment
      summary: Payment list
      description: Query and retrieve a Payment list
      operationId: getPaymentList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Payment Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - payment
      summary: Create a Payment
      description: Create a new Payment
      operationId: createPayment
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Payment resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment_Create'
      responses:
        '201':
          description: Payment Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/payment/{id}':
    get:
      tags:
        - payment
      summary: Get a Payment
      description: Retrieve a Payment
      operationId: getPaymentById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Payment Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - payment
      summary: Update a Payment
      description: Updates a Payment as well as its detail
      operationId: updatePayment
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: >
          Payment resource, See examples for options to update detail and
          ArTrans

          __AR Tran _add_ example__

          `{op: "add", ids:[123,124,125]}, {op: "remove", ids:[21,22]}`
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment_Update'
      responses:
        '200':
          description: Payment Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: |
            # update
            curl -X put 'http://demo.9ci.io/api/autocash/payment/123' \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer {access-token}' \
            --data '{
              "amount": 99.99
              ...
            }'

            # Add or Remove ArTrans
            --data '{
              trans: [
                {"op": "remove", "ids": [123,124]},
                {"op": "add",    "ids": [221,223]},
              ]
            }'

            # update with empty array to remove all payment details
            # cann also be done with rpc removeDetail
            --data '{
              detail: {
                "op": "update", data: []
              }
            }
    delete:
      tags:
        - payment
      summary: Delete a Payment
      description: ''
      operationId: deletePayment
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/paymentDeleted:
    get:
      tags:
        - paymentDeleted
      summary: PaymentDeleted list
      description: Query and retrieve a PaymentDeleted list
      operationId: getPaymentDeletedList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: PaymentDeleted Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
  '/autocash/paymentDeleted/{id}':
    get:
      tags:
        - paymentDeleted
      summary: Get a PaymentDeleted
      description: Retrieve a PaymentDeleted
      operationId: getPaymentDeletedById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: PaymentDeleted Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDeleted'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/paymentDetail:
    get:
      tags:
        - paymentDetail
      summary: PaymentDetail list
      description: Query and retrieve a PaymentDetail list
      operationId: getPaymentDetailList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: PaymentDetail Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - paymentDetail
      summary: Create a PaymentDetail
      description: Create a new PaymentDetail
      operationId: createPaymentDetail
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: PaymentDetail resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentDetail_Create'
      responses:
        '201':
          description: PaymentDetail Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetail'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/paymentDetail/{id}':
    get:
      tags:
        - paymentDetail
      summary: Get a PaymentDetail
      description: Retrieve a PaymentDetail
      operationId: getPaymentDetailById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: PaymentDetail Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetail'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - paymentDetail
      summary: Update a PaymentDetail
      description: ''
      operationId: updatePaymentDetail
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: PaymentDetail resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentDetail_Update'
      responses:
        '200':
          description: PaymentDetail Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetail'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - paymentDetail
      summary: Delete a PaymentDetail
      description: ''
      operationId: deletePaymentDetail
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/paymentDetailArTran:
    get:
      tags:
        - paymentDetailArTran
      summary: PaymentDetailArTran list
      description: Query and retrieve a PaymentDetailArTran list
      operationId: getPaymentDetailArTranList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: PaymentDetailArTran Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - paymentDetailArTran
      summary: Create a PaymentDetailArTran
      description: Create a new PaymentDetailArTran
      operationId: createPaymentDetailArTran
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: PaymentDetailArTran resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentDetailArTran_Create'
      responses:
        '201':
          description: PaymentDetailArTran Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailArTran'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/paymentDetailArTran/{id}':
    get:
      tags:
        - paymentDetailArTran
      summary: Get a PaymentDetailArTran
      description: Retrieve a PaymentDetailArTran
      operationId: getPaymentDetailArTranById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: PaymentDetailArTran Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailArTran'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - paymentDetailArTran
      summary: Update a PaymentDetailArTran
      description: ''
      operationId: updatePaymentDetailArTran
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: PaymentDetailArTran resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentDetailArTran_Update'
      responses:
        '200':
          description: PaymentDetailArTran Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailArTran'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - paymentDetailArTran
      summary: Delete a PaymentDetailArTran
      description: ''
      operationId: deletePaymentDetailArTran
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/paymentMultiHit:
    get:
      tags:
        - paymentMultiHit
      summary: PaymentMultiHit list
      description: Query and retrieve a PaymentMultiHit list
      operationId: getPaymentMultiHitList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: PaymentMultiHit Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - paymentMultiHit
      summary: Create a PaymentMultiHit
      description: Create a new PaymentMultiHit
      operationId: createPaymentMultiHit
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: PaymentMultiHit resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMultiHit_Create'
      responses:
        '201':
          description: PaymentMultiHit Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMultiHit'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/paymentMultiHit/{id}':
    get:
      tags:
        - paymentMultiHit
      summary: Get a PaymentMultiHit
      description: Retrieve a PaymentMultiHit
      operationId: getPaymentMultiHitById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: PaymentMultiHit Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMultiHit'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - paymentMultiHit
      summary: Update a PaymentMultiHit
      description: ''
      operationId: updatePaymentMultiHit
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: PaymentMultiHit resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMultiHit_Update'
      responses:
        '200':
          description: PaymentMultiHit Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMultiHit'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - paymentMultiHit
      summary: Delete a PaymentMultiHit
      description: ''
      operationId: deletePaymentMultiHit
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/paymentMultiHitArTrans:
    get:
      tags:
        - paymentMultiHitArTrans
      summary: PaymentMultiHitArTrans list
      description: Query and retrieve a PaymentMultiHitArTrans list
      operationId: getPaymentMultiHitArTransList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: PaymentMultiHitArTrans Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - paymentMultiHitArTrans
      summary: Create a PaymentMultiHitArTrans
      description: Create a new PaymentMultiHitArTrans
      operationId: createPaymentMultiHitArTrans
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: PaymentMultiHitArTrans resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMultiHitArTrans_Create'
      responses:
        '201':
          description: PaymentMultiHitArTrans Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMultiHitArTrans'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/paymentMultiHitArTrans/{id}':
    get:
      tags:
        - paymentMultiHitArTrans
      summary: Get a PaymentMultiHitArTrans
      description: Retrieve a PaymentMultiHitArTrans
      operationId: getPaymentMultiHitArTransById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: PaymentMultiHitArTrans Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMultiHitArTrans'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - paymentMultiHitArTrans
      summary: Update a PaymentMultiHitArTrans
      description: ''
      operationId: updatePaymentMultiHitArTrans
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: PaymentMultiHitArTrans resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMultiHitArTrans_Update'
      responses:
        '200':
          description: PaymentMultiHitArTrans Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMultiHitArTrans'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - paymentMultiHitArTrans
      summary: Delete a PaymentMultiHitArTrans
      description: ''
      operationId: deletePaymentMultiHitArTrans
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/reasonTolerance:
    get:
      tags:
        - reasonTolerance
      summary: ReasonTolerance list
      description: Query and retrieve a ReasonTolerance list
      operationId: getReasonToleranceList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: ReasonTolerance Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - reasonTolerance
      summary: Create a ReasonTolerance
      description: Create a new ReasonTolerance
      operationId: createReasonTolerance
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: ReasonTolerance resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcReasonTolerance_Create'
      responses:
        '201':
          description: ReasonTolerance Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcReasonTolerance'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/reasonTolerance/{id}':
    get:
      tags:
        - reasonTolerance
      summary: Get a ReasonTolerance
      description: Retrieve a ReasonTolerance
      operationId: getReasonToleranceById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: ReasonTolerance Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcReasonTolerance'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - reasonTolerance
      summary: Update a ReasonTolerance
      description: ''
      operationId: updateReasonTolerance
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: ReasonTolerance resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcReasonTolerance_Update'
      responses:
        '200':
          description: ReasonTolerance Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcReasonTolerance'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - reasonTolerance
      summary: Delete a ReasonTolerance
      description: ''
      operationId: deleteReasonTolerance
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /autocash/setupGroup:
    get:
      tags:
        - setupGroup
      summary: SetupGroup list
      description: Query and retrieve a SetupGroup list
      operationId: getSetupGroupList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: SetupGroup Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - setupGroup
      summary: Create a SetupGroup
      description: Create a new SetupGroup
      operationId: createSetupGroup
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: SetupGroup resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcSetupGroup_Create'
      responses:
        '201':
          description: SetupGroup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcSetupGroup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
  '/autocash/setupGroup/{id}':
    get:
      tags:
        - setupGroup
      summary: Get a SetupGroup
      description: Retrieve a SetupGroup
      operationId: getSetupGroupById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: SetupGroup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcSetupGroup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - setupGroup
      summary: Update a SetupGroup
      description: ''
      operationId: updateSetupGroup
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: SetupGroup resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcSetupGroup_Update'
      responses:
        '200':
          description: SetupGroup Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcSetupGroup'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - setupGroup
      summary: Delete a SetupGroup
      description: ''
      operationId: deleteSetupGroup
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ipay/paySchedule:
    get:
      tags:
        - paySchedule
      summary: PaySchedule list
      description: Query and retrieve a PaySchedule list
      operationId: getPayScheduleList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: PaySchedule Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - paySchedule
      summary: Create a PaySchedule
      description: Create a new PaySchedule
      operationId: createPaySchedule
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: PaySchedule resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaySchedule_Create'
      responses:
        '201':
          description: PaySchedule Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaySchedule'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            ## Create Schedule


            ## Create a Daily schedule to scan and pay all due transactions

            curl -X POST "https://rcm.9ci.dev/api/ipay/paySchedule" \
              -H "Content-Type: application/json" \
                {
                    "invoicesToPay": "Due",
                    "wallet": {
                        "id": "1eda8c57-49d8-6b32-b416-33b67b1ffb6a"
                    },
                    "period": "Daily"
                }

            ## Create a Weekly schedule to run every Wednesday and pay All open
            transactions

            curl -X POST "https://rcm.9ci.dev/api/ipay/paySchedule" \
              -H "Content-Type: application/json" \
                {
                    "invoicesToPay": "All",
                    "wallet": {
                        "id": "1eda8c57-49d8-6b32-b416-33b67b1ffb6a"
                    },
                    "period": "Weekly",
                    "dayInPeriod": 3
                }
  '/ipay/paySchedule/{id}':
    get:
      tags:
        - paySchedule
      summary: Get a PaySchedule
      description: Retrieve a PaySchedule
      operationId: getPayScheduleById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: PaySchedule Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaySchedule'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - paySchedule
      summary: Update a PaySchedule
      description: ''
      operationId: updatePaySchedule
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: PaySchedule resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaySchedule_Update'
      responses:
        '200':
          description: PaySchedule Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaySchedule'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
    delete:
      tags:
        - paySchedule
      summary: Delete a PaySchedule
      description: ''
      operationId: deletePaySchedule
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ipay/payTran:
    get:
      tags:
        - payTran
      summary: PayTran list
      description: Query and retrieve a PayTran list
      operationId: getPayTranList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: PayTran Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
    post:
      tags:
        - payTran
      summary: Create a PayTran
      description: Create a new PayTran
      operationId: createPayTran
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: PayTran resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTran_Create'
      responses:
        '201':
          description: PayTran Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTran'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Curl
          lang: shell
          source: |+
            ## Create PayTran

            ## ACH State Active (shopping cart scenario)
            curl -X POST "https://rcm.9ci.dev/api/ipay/payTran" \
              -H "Content-Type: application/json" \
                {
                    "applyAmount": 100,
                    "comments": "test",
                    "customer": {
                        "id": 2695
                    },
                    "state":"Active",
                    "payDate": "2023-02-16",
                    "payType": "ACH",
                    "refnum": "12345",
                    "wallet": {
                        "id": "1eda8c57-49d8-6b32-b416-33b67b1ffb6a"
                    },
                    "lines": [
                        {
                            "applyAmount": 100.00,
                            "arTran": {
                                "id": 46165831
                            }
                        }
                    ]
                }


            ### response with id created:
            {
                "id": "1edb7282-e516-6144-821d-bd5778607c2c",
                "createdDate": "2023-02-27T23:24:32.204647",
                "applyAmount": 100,
                "wallet": {
                    "id": "1edb7266-5e47-6091-821d-59178e735e5c"
                },
                "refnum": "12345",
                "customer": {
                    "id": 2695
                },
                "state": {
                    "id": 2,
                    "name": "Active"
                },
                "comments": "test"
            }


            ### response with validation error
            {
                "ok": false,
                "status": 422,
                "code": "validation.problem",
                "title": "PayTran Validation Error(s)",
                "errors": [
                    {
                        "code": "NotNull",
                        "message": "must not be null",
                        "field": "customer"
                    }
                ]
            }

            ## Credit Card Example
            curl -X POST "https://rcm.9ci.dev/api/ipay/payTran" \
              -H "Content-Type: application/json" \
                {
                    "applyAmount": 103,
                    "surcharge": 3.0,
                    "payType": "Card",
                    "comments": "test",
                    "customer": {
                        "id": 2695
                    },
                    "payDate": "2023-02-16",
                    "wallet": {
                        "id": "1edca0f4-93e8-6dc4-b1f6-6fa3aa864458"
                    },
                    "lines": [
                        {
                            "applyAmount": 100.00,
                            "arTran": {
                                "id": 751
                            }
                        }
                    ]
                }

            ### response with id created:
            {
                "id": "1f0162cc-b791-6562-a7b5-3ddeba6b1573",
                "createdDate": "2025-04-10T11:56:49.662613",
                "applyAmount": 100,
                "wallet": {
                    "id": "1edca0f4-93e8-6dc4-b1f6-6fa3aa864458"
                },
                "isPrepay": false,
                "refnum": "12345",
                "customer": {
                    "id": 4303,
                },
                "editedDate": "2025-04-10T11:56:49.662613",
                "version": 0,
                "state": {
                    "id": 2,
                    "name": "Active"
                },
                "comments": "test",
                "surcharge": 3.0,
                "createdBy": 1,
                "payType": "Card",
                "editedBy": 1,
                "amount": 103.0,
                "payDate": "2023-02-16"
            }

  '/ipay/payTran/{id}':
    get:
      tags:
        - payTran
      summary: Get a PayTran
      description: Retrieve a PayTran
      operationId: getPayTranById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: PayTran Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTran'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - payTran
      summary: Update a PayTran
      description: ''
      operationId: updatePayTran
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: PayTran resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTran_Update'
      responses:
        '200':
          description: PayTran Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTran'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            ## Update PayTran


            curl -X PUT "https://rcm.9ci.dev/api/ipay/payTran/{id}" \
              -H "Content-Type: application/json" \
              -H 'Authorization: Bearer {access-token}' \
              --data '{
                   "amount": 100
                   "lines": [
                              {
                                "applyAmount": 100.00,
                                  "arTran": {
                                    "id": 46165831
                                }
                              }
                            ]
                    # ...see body for all available parameter...
                  }'

            ## Note : Passing lines array when updating a PayTran will delete
            all existing lines of the PayTran and insert new lines from request
            body
    delete:
      tags:
        - payTran
      summary: Delete a PayTran
      description: ''
      operationId: deletePayTran
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
  /ipay/wallet:
    get:
      tags:
        - wallet
      summary: Wallet list
      description: Query and retrieve a Wallet list
      operationId: getWalletList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Wallet Pager Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pager'
        '403':
          $ref: '#/components/responses/403_Forbidden'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >

            # Show page 2 of wallets

            curl -i -v -G 'https://demo.9ci.io/api/ipay/wallet?sort=name&page=2'
            \


            # Show a customers Wallets. Normally should only show isSaved=true

            curl -i -v -G
            'https://demo.9ci.io/api/ipay/wallet?q={"customer":{"id":1234},"isSaved":
            true}?sort=name' \
    post:
      tags:
        - wallet
      summary: Create a Wallet
      description: Create a new Wallet
      operationId: createWallet
      parameters:
        - $ref: '#/components/parameters/bindId'
      requestBody:
        description: Wallet resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet_Create'
      responses:
        '201':
          description: Wallet Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: |
            ## Common requests to manage wallets:

            ## create ACH wallet
            curl -X POST "https://rcm.9ci.dev/api/ipay/wallet" \
              -H "Content-Type: application/json" \
                {
                    "customer": {
                        "id": 2695
                    },
                    "isPrimary": false,
                    "isSaved": true,
                    "name": " Main checking",
                    "payType": "ACH",
                    "routingNum": "021000021",
                    "accountNum": "000087"
                }

            ## create Credit Card wallet
            curl -X POST "https://rcm.9ci.dev/api/ipay/wallet" \
              -H "Content-Type: application/json" \

            {
                "ccBrand": "VISA",
                "ccExpireMonth": "12",
                "ccExpireYear": "2024",
                "ccHolderName": "Joe Doe",
                "customer": {
                    "id": 2695
                },
                "isPrimary": true,
                "last4": "7890",
                "name": "BusAcct VISA",
                "payType": "Card",
                "token": "1111123ABC456DEF"
            }

            ### response with id created::
            {
                "id": "1edb7260-abfe-6b90-821d-4b8c86869246",
                "createdDate": "2023-02-27T23:09:13.538071",
                "isSaved": true,
                "token": "1111123ABC456DEF",
                ....
            }

            ## response with routing num validation
            {
                "ok": false,
                "status": 422,
                "code": "validation.problem",
                "title": "Wallet Validation Error(s)",
                "errors": [
                    {
                        "code": "ipay.error.wallet.routingNumChecksum",
                        "message": "Invalid routing number. Checksum error",
                        "field": "routingNum"
                    }
                ]
            }

            ### response with multiple errors:
            {
                "ok": false,
                "status": 422,
                "code": "validation.problem",
                "title": "Wallet Validation Error(s)",
                "errors": [
                    {
                        "code": "ipay.error.wallet.routingNumChecksum",
                        "message": "Invalid routing number. Checksum error",
                        "field": "routingNum"
                    },
                    {
                        "code": "NotNull",
                        "message": "must not be null",
                        "field": "customer"
                    }
                ]
            }
  '/ipay/wallet/{id}':
    get:
      tags:
        - wallet
      summary: Get a Wallet
      description: Retrieve a Wallet
      operationId: getWalletById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Wallet Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
    put:
      tags:
        - wallet
      summary: Update a Wallet
      description: ''
      operationId: updateWallet
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Wallet resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet_Update'
      responses:
        '200':
          description: Wallet Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_ValidationError'
      x-codeSamples:
        - label: Curl
          lang: bash
          source: >
            ## Common requests to update wallets:


            # Update the account and routing number

            curl -X PUT https://demo.9ci.io/api/ipay/wallet/{id} \
              --data '{
                "routingNum": "021000021",
                "accountNum": "000087"
              }'

            # Update the isSaved to false so it can be removed in the purge
            process.

            curl -X PUT https://demo.9ci.io/api/ipay/wallet/{id} \
              --data '{
                "isSaved": false
              }'
    delete:
      tags:
        - wallet
      summary: Delete a Wallet
      description: >
        Deletes a wallet. If wallet is associated with a PayTran or Schedule it
        will error on a delete.

        When its associated with a closed PayTran then call PUT with
        isSaved=false and the wallet be purged in nightly process

        If wallet is associated with a Schedule then the Schedule needs to
        either be disabled or associated with a different wallet before

        it can be updated to isSaved=false.
      operationId: deleteWallet
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
components:
  schemas:
    BlankProblem:
      description: >-
        The Problem Details JSON Object
        [[RFC7807](https://tools.ietf.org/html/rfc7807)].
      type: object
      minProperties: 1
      additionalProperties: true
      properties:
        status:
          type: integer
          description: The HTTP status code.
          minimum: 400
          maximum: 599
        title:
          type: string
          description: >-
            A short, human-readable summary of the problem type. It SHOULD NOT
            change from occurrence to occurrence of the problem, except for
            purposes of localization.
    DocumentedProblem:
      type: object
      allOf:
        - properties:
            type:
              type: string
              description: >-
                A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)]
                that identifies the problem type. It should provide
                human-readable documentation for the problem type. When this
                member is not present, its value is assumed to be "about:blank".
              format: uri
        - $ref: '#/components/schemas/BlankProblem'
    DetailedProblem:
      type: object
      allOf:
        - $ref: '#/components/schemas/BlankProblem'
        - properties:
            detail:
              type: string
              description: >-
                A human-readable explanation specific to this occurrence of the
                problem.
    Error:
      type: object
      allOf:
        - $ref: '#/components/schemas/DocumentedProblem'
        - $ref: '#/components/schemas/DetailedProblem'
    Tag:
      title: Tag
      x-entity: Tag
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this tag
          maxLength: 255
          type: string
        entityName:
          description: >-
            The entity this tag can be applied to. May be a comma sep list of
            entity names
          maxLength: 255
          type: string
        name:
          description: The name of tag
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Attachment:
      title: Attachment
      x-entity: Attachment
      type: object
      required:
        - name
      properties:
        contentLength:
          description: The file size/contentLength in bytes. Populated on save
          example: '7896'
          readOnly: true
          type: integer
          format: int64
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        extension:
          description: >-
            The extension the file should have. Pulled from the name if not set.
            Helps dictate the mime-type
          example: pdf
          maxLength: 255
          type: string
        kind:
          description: The kind of attachment
          example: Activity
          type: string
          enum:
            - Activity
            - Collection
            - Invoice
            - Report
        locationKey:
          description: >-
            Defaults to attachments.location but can be changed to another key
            such as creditFiles.location
          example: attachments.location
          maxLength: 255
          type: string
        mimeType:
          description: The mime type of the file. Will be pulled from the names extension
          example: application/pdf
          maxLength: 255
          type: string
        name:
          description: >-
            This should be the file display name without dir; foo.txt, bar.pdf,
            etc.

            Populated from originalFileName when using a multiPart upload.

            Location has the relative path and unique name on system. Use
            description for any other useful info
          maxLength: 100
          type: string
        source:
          description: A source description if this is synced from another system
          maxLength: 50
          type: string
        subject:
          description: >-
            Optional value for a email template or collectionStep this is the
            generally the subject of an email or fax cover page.
          example: Customer
          maxLength: 255
          type: string
        tags:
          description: the tags for this item
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Problem:
      description: >-
        The Problem Details JSON Object
        [[RFC7807](https://tools.ietf.org/html/rfc7807)].
      type: object
      minProperties: 1
      additionalProperties: true
      properties:
        ok:
          type: boolean
          description: ok will always be false for a problem
        status:
          type: integer
          description: The HTTP status code.
          minimum: 400
          maximum: 599
        title:
          type: string
          description: >-
            A short, human-readable summary of the problem type. It SHOULD NOT
            change from occurrence to occurrence of the problem, except for
            purposes of localization.
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        code:
          type: string
          description: a unique message key. Can be used to build the message title
          format: uri
        type:
          type: string
          description: >-
            A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)]
            that identifies the problem type. It should provide human-readable
            documentation for the problem type. When this member is not present,
            its value is assumed to be "about:blank".
        data:
          type: object
          description: Data that caused the error. Optional and not always returned
    Result:
      description: A Result object for a process. A subset of Problem Details JSON Object
      type: object
      minProperties: 1
      additionalProperties: true
      properties:
        ok:
          type: boolean
          description: >-
            true for success or false if an error occured. Can be true and still
            have warnings.
        status:
          type: integer
          description: The HTTP status code.
          minimum: 400
          maximum: 599
        title:
          type: string
          description: >-
            A short, human-readable summary of the result. It SHOULD NOT change
            from occurrence to occurrence of the result, except for purposes of
            localization.
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            result.
        code:
          type: string
          description: a unique message key. Can be used to build the message title
        data:
          type: object
          description: Data payload for this result.
    Bank:
      title: Bank
      x-entity: Bank
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: 'bank code for ACH, Config and Lockboxes; wells, boa, jpm, usb, citi'
          maxLength: 10
          type: string
        name:
          description: name of the bank
          maxLength: 50
          type: string
        id:
          type: string
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    OrgCalc:
      title: OrgCalc
      x-entity: OrgCalc
      type: object
      properties:
        adjustedTotal:
          type: number
          format: money
        adjusterAmt:
          type: number
          format: money
        adp:
          description: avg days to pay
          type: number
          format: 'decimal(9,1)'
        adpWtd:
          description: weighted average days to pay
          type: number
          format: 'decimal(9,1)'
        aging1:
          description: Aging bucket 1
          type: number
          format: money
        aging10:
          description: Aging bucket 10
          type: number
          format: money
        aging2:
          description: Aging bucket 2
          type: number
          format: money
        aging3:
          description: Aging bucket 3
          type: number
          format: money
        aging4:
          description: Aging bucket 4
          type: number
          format: money
        aging5:
          description: Aging bucket 5
          type: number
          format: money
        aging6:
          description: Aging bucket 6
          type: number
          format: money
        aging7:
          description: Aging bucket 7
          type: number
          format: money
        aging8:
          description: Aging bucket 8
          type: number
          format: money
        aging9:
          description: Aging bucket 9
          type: number
          format: money
        avgDaysBt:
          description: avg days paid late / avg days beyond terms
          type: number
          format: 'decimal(9,1)'
        beginBal:
          type: number
          format: money
        cei:
          description: collection effectiveness index
          type: number
          format: 'decimal(9,1)'
        curBal:
          description: whats not due yet
          type: number
          format: money
        ddo:
          description: days deductions and disputes outstanding
          type: number
          format: 'decimal(9,1)'
        dso:
          description: day sales outstanding
          type: number
          format: 'decimal(9,1)'
        dso12:
          description: DSO using the last 12 month average
          type: number
          format: 'decimal(9,1)'
        dsoad:
          description: DSO add back
          type: number
          format: 'decimal(9,1)'
        dsobp:
          description: DSO best possible
          type: number
          format: 'decimal(9,1)'
        glPostPeriod:
          type: string
        grossProfit:
          type: number
          format: money
        grossProfitPct:
          type: number
          format: money
        maxDue:
          description: max totalDue in this month and last 12 months
          type: number
          format: money
        maxDuePer:
          description: period the highest balance occured in the last 12 months
          maxLength: 255
          type: string
        newCM:
          type: number
          format: money
        newDD:
          type: number
          format: money
        newDM:
          type: number
          format: money
        newIN:
          type: number
          format: money
        newPA:
          type: number
          format: money
        newTotal:
          type: number
          format: money
        num1:
          type: number
          format: money
        num2:
          type: number
          format: money
        num3:
          type: number
          format: money
        num4:
          type: number
          format: money
        num5:
          type: number
          format: money
        num6:
          type: number
          format: money
        openCM:
          type: number
          format: money
        openDD:
          type: number
          format: money
        openDM:
          type: number
          format: money
        openIN:
          type: number
          format: money
        openPA:
          type: number
          format: money
        pastDue:
          description: balance past due
          type: number
          format: money
        salesRolling12:
          type: number
          format: money
        salesYtd:
          type: number
          format: money
        totalDue:
          description: >-
            total due, sum of all open items. will be the ending balance when
            month is closed
          type: number
          format: money
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
    Contact:
      title: Contact
      x-entity: Contact
      type: object
      required:
        - firstName
        - name
        - orgId
      properties:
        altName:
          description: 'Alternate name, nickname or job name'
          maxLength: 255
          type: string
        comments:
          description: Notes about the contact
          maxLength: 255
          type: string
        email:
          description: Default email
          maxLength: 255
          format: email
          type: string
        emails:
          type: array
          items:
            $ref: '#/components/schemas/ContactEmail'
        firstName:
          description: First name
          maxLength: 50
          type: string
        flex:
          description: Custom user fields for this contact
          $ref: '#/components/schemas/ContactFlex'
        inactive:
          description: True when not active
          type: boolean
        jobTitle:
          description: Job title
          maxLength: 50
          type: string
        lastName:
          description: Last name
          maxLength: 50
          type: string
        location:
          description: Default location
          $ref: '#/components/schemas/Location'
        name:
          description: 'Name of Contact, joined using firstName + lastName'
          maxLength: 50
          type: string
        num:
          description: 'num, used for job or organization type contacts'
          maxLength: 50
          type: string
        org:
          description: The organization this contact belongs to
          $ref: '#/components/schemas/Org'
        orgId:
          description: The org id for the contact
          type: integer
          format: int64
        phone:
          description: Default phone
          maxLength: 255
          type: string
        phones:
          type: array
          items:
            $ref: '#/components/schemas/ContactPhone'
        source:
          description: Originator source info
          $ref: '#/components/schemas/ContactSource'
        tagForReminders:
          description: If this contact should get correspondence
          type: boolean
        tags:
          description: the tags for this item
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        user:
          description: The user if this contact is able to login
          $ref: '#/components/schemas/AppUser'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ContactEmail:
      title: ContactEmail
      x-entity: ContactEmail
      type: object
      required:
        - address
      properties:
        address:
          description: The email addy
          maxLength: 255
          type: string
        contact:
          $ref: '#/components/schemas/Contact'
        isPrimary:
          description: If this is the contacts primary email
          type: boolean
        kind:
          description: future use
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ContactFlex:
      title: ContactFlex
      x-entity: ContactFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Org:
      title: Org
      x-entity: Org
      type: object
      required:
        - name
        - type
        - num
      properties:
        calc:
          description: Calculated fields
          readOnly: true
          $ref: '#/components/schemas/OrgCalc'
        comments:
          description: A user visible comment
          example: Lorem ipsum
          maxLength: 255
          type: string
        companyId:
          description: Company id this org belongs to
          example: '2'
          type: integer
          format: int64
        contact:
          description: The default or key Contact for this organization
          $ref: '#/components/schemas/Contact'
        flex:
          description: User flex fields
          $ref: '#/components/schemas/OrgFlex'
        inactive:
          description: indicator for an Org that is no longer active
          type: boolean
        info:
          description: Info such as phone and website for an organization
          $ref: '#/components/schemas/OrgInfo'
        location:
          description: The primary organization address info
          $ref: '#/components/schemas/Location'
        locations:
          description: List of locations
          type: array
          items:
            $ref: '#/components/schemas/Location'
        member:
          description: Dimension hierarchy fields
          $ref: '#/components/schemas/OrgMember'
        name:
          description: The full name for this organization
          example: SpaceX Corp.
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this organization
          example: SPX-321
          maxLength: 50
          type: string
        orgTypeId:
          type: integer
          format: int64
        source:
          description: 'Originator source info, used when this is sourced externally'
          $ref: '#/components/schemas/OrgSource'
        tags:
          description: the tags for this item
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        type:
          description: The type of org
          example: Customer
          type: string
          enum:
            - Customer
            - CustAccount
            - Branch
            - Division
            - Business
            - Company
            - Prospect
            - Sales
            - Client
            - Factory
            - Region
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Location:
      title: Location
      x-entity: Location
      type: object
      required:
        - orgId
      properties:
        address3:
          maxLength: 100
          type: string
        address4:
          maxLength: 100
          type: string
        city:
          maxLength: 100
          type: string
        contact:
          description: The contact this belongs to
          $ref: '#/components/schemas/Contact'
        country:
          maxLength: 3
          type: string
        county:
          maxLength: 50
          type: string
        kind:
          description: The address type
          type: string
          enum:
            - work
            - home
            - other
            - mailing
            - remittance
            - physical
        name:
          description: 'A descriptive name, can be used for reports an letters'
          maxLength: 255
          type: string
        org:
          description: The organization this belongs to
          $ref: '#/components/schemas/Org'
        orgId:
          description: The org id for this
          type: integer
          format: int64
        state:
          maxLength: 25
          type: string
        street1:
          maxLength: 100
          type: string
        street2:
          maxLength: 100
          type: string
        zipCode:
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ContactPhone:
      title: ContactPhone
      x-entity: ContactPhone
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/Contact'
        isPrimary:
          description: if this is the contacts primary number
          type: boolean
        kind:
          description: future use
          maxLength: 50
          type: string
        num:
          description: future use
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ContactSource:
      title: ContactSource
      x-entity: ContactSource
      type: object
      required:
        - contactId
        - sourceId
      properties:
        contactId:
          description: The id of the contact this is for
          type: integer
          format: int64
        source:
          description: A description of where this came from
          example: 'Oracle, BankOfAmerica, Lockbox'
          maxLength: 255
          type: string
        sourceId:
          description: the unique id from the outside source or name of the scheduled job
          example: AR-123-A64
          maxLength: 255
          type: string
        sourceType:
          description: 'Enum, defaults to SourceType.App'
          example: App
          default: App
          type: string
          enum:
            - App
            - Scheduler
            - ERP
            - RestApi
            - PayGateway
        sourceVersion:
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    SecRole:
      title: SecRole
      x-entity: SecRole
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: Upper case role key
          maxLength: 25
          type: string
        description:
          description: A longer description
          maxLength: 255
          type: string
        name:
          description: The name of the role
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    AppUser:
      title: AppUser
      x-entity: AppUser
      type: object
      required:
        - username
        - email
        - secRoles
      properties:
        email:
          description: The email
          maxLength: 255
          format: email
          type: string
        inactive:
          description: >-
            True if user is inactive which means they cannot login but are still
            here for history
          readOnly: true
          type: boolean
        name:
          description: >-
            The full name, may come from contact, will default to username if
            not populated
          maxLength: 50
          type: string
        orgId:
          description: The org to which this user belongs to
          readOnly: true
          type: integer
          format: int64
        passwordChangedDate:
          description: The date password was changed
          type: string
          format: date-time
        passwordExpired:
          description: The password expired
          readOnly: true
          type: boolean
        roles:
          description: The string list of roles assigned to this user
          readOnly: true
          type: array
          items:
            type: string
        secRoles:
          description: The roles assigned to this user
          type: array
          items:
            $ref: '#/components/schemas/SecRole'
        username:
          description: >
            The unique user name, also known as your handle –– what you put
            after the “@” symbol ala github or twitter

            to mention others in comments or notes. appears in your profile URL.
            username is used to log in to your account,

            and is visible when sending and receiving. All lowercase and no
            spaces or special characters.
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    OrgFlex:
      title: OrgFlex
      x-entity: OrgFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    OrgInfo:
      title: OrgInfo
      x-entity: OrgInfo
      type: object
      properties:
        fax:
          description: primary fax
          maxLength: 255
          type: string
        phone:
          description: 'primary hq number, switchboard'
          maxLength: 255
          type: string
        website:
          description: website home page
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    OrgMember:
      title: OrgMember
      x-entity: OrgMember
      type: object
      properties:
        branch:
          description: The branch for the Org
          $ref: '#/components/schemas/Org'
        business:
          description: The business for the Org
          $ref: '#/components/schemas/Org'
        company:
          $ref: '#/components/schemas/Org'
        division:
          description: The division for the Org
          $ref: '#/components/schemas/Org'
        factory:
          description: The factory for the Org
          $ref: '#/components/schemas/Org'
        region:
          description: The region for the Org
          $ref: '#/components/schemas/Org'
        sales:
          description: The sales for the Org
          $ref: '#/components/schemas/Org'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    OrgSource:
      title: OrgSource
      x-entity: OrgSource
      type: object
      required:
        - sourceId
        - orgId
      properties:
        orgId:
          description: The id of the org this is for
          example: '954'
          type: integer
          format: int64
        orgType:
          description: >-
            denormalized orgType so we can have unique index within org type
            (sourceType, sourceId and orgType)
          example: Customer
          readOnly: true
          type: string
          enum:
            - Customer
            - CustAccount
            - Branch
            - Division
            - Business
            - Company
            - Prospect
            - Sales
            - Client
            - Factory
            - Region
        originator:
          description: >-
            indicates this source was the creator of this org, should only be 1
            per Org
          type: boolean
        source:
          description: A description of where this came from
          example: 'Oracle, BankOfAmerica, Lockbox'
          maxLength: 255
          type: string
        sourceId:
          description: the unique id from the outside source or name of the scheduled job
          example: AR-123-A64
          maxLength: 255
          type: string
        sourceType:
          description: 'Enum, defaults to SourceType.App'
          example: App
          default: App
          type: string
          enum:
            - App
            - Scheduler
            - ERP
            - RestApi
            - PayGateway
        sourceVersion:
          description: the version of the last edit in source system
          example: '912'
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    BankAccount:
      title: BankAccount
      x-entity: BankAccount
      type: object
      required:
        - org
        - code
        - bank
        - name
        - num
      properties:
        bank:
          description: Bank for the account
          $ref: '#/components/schemas/Bank'
        code:
          description: 'Bank account code, used as primary key'
          maxLength: 10
          type: string
        glAcct:
          description: Gl Account for payments under this batch.
          maxLength: 50
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        num:
          description: 'bank account number, used in ArBatch.lockbox'
          maxLength: 255
          type: string
        org:
          description: >-
            The partition org that this lockbox belongs to, drives the different
            orgs on the ArBatch
          $ref: '#/components/schemas/Org'
        sourceId:
          description: 'Unique when populated, used for lookups on import keys from bank '
          maxLength: 50
          type: string
        visibleToAutocash:
          description: >-
            Whether this should be shown as an option in the drop down for
            autocash batch
          default: 'false'
          type: boolean
        id:
          type: string
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArBatchFlex:
      title: ArBatchFlex
      x-entity: ArBatchFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    PartitionOrg:
      title: PartitionOrg
      x-entity: PartitionOrg
      type: object
      required:
        - name
        - num
      properties:
        name:
          description: The full name for this organization
          example: SpaceX Corp.
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this organization
          example: SPX-321
          maxLength: 50
          type: string
        org:
          $ref: '#/components/schemas/Org'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Batch:
      title: Batch
      x-entity: Batch
      type: object
      required:
        - controlAmount
        - batchType
        - batchDate
      properties:
        arPostedDate:
          description: Date/time the batch was posted to ar
          type: string
          format: date-time
        bankAccount:
          description: The bankAccount (Lockbox) for this batch
          $ref: '#/components/schemas/BankAccount'
        bankAccountNum:
          description: The bank account number assigned during import
          maxLength: 50
          type: string
        bankSequence:
          description: The bank sequence number
          type: integer
          format: int64
        batchDate:
          description: Date of the batch
          type: string
          format: date
        batchType:
          description: Type of batch
          type: string
          enum:
            - Lockbox
            - Manual
            - Merge
            - ACH
            - IACH
            - Card
            - Wire
        companyId:
          type: integer
          format: int64
        controlAmount:
          description: Control Amount should equal the sum of payments amount
          type: number
          format: money
        correctedDate:
          description: The date the batch was originally corrected
          type: string
          format: date-time
        divisionId:
          type: integer
          format: int64
        errorDesc:
          description: Error message from batch reconcile process
          maxLength: 4000
          type: string
        fileName:
          description: >-
            File name the batch was imported from or the ACH file generated for
            this batch
          maxLength: 255
          type: string
        flex:
          description: link to ArBatchFlex
          $ref: '#/components/schemas/ArBatchFlex'
        glPostDate:
          description: The gl posting date in the gl period
          type: string
          format: date
        glPostPeriod:
          description: GL Post Period in YYYYMM format for the glPostDate
          maxLength: 7
          type: string
        isCorrected:
          description: Has been corrected
          type: boolean
        isError:
          description: >
            True if batch cannot be reconciled and has errors or payments have
            errors.

            errorDesc field may provide more information here or in the payments
            for this batch.
          type: boolean
        isPosted:
          description: Has been posted
          type: boolean
        lockbox:
          description: 'The bank lockbox, should be entry from Lockbox name resource'
          maxLength: 50
          type: string
        name:
          description: A descriptive name for this batch
          maxLength: 50
          type: string
        origBatchAmount:
          description: >-
            amount of the original batch if this batch was created or split off
            from another batch
          type: number
          format: money
        origBatchId:
          description: >-
            If this batch was created or split off from another then this is
            batch id of the original
          type: integer
          format: int64
        partitionOrg:
          description: The partition org this batch belongs to
          $ref: '#/components/schemas/PartitionOrg'
        source:
          description: The lockbox.bankNumber to lookup
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this batch
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ValidationErrorExtensions:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: >-
                  The field name. Dot notation is used for nested object field
                  names.
              message:
                type: string
          example:
            - field: field1
              message: field1 is invalid
            - field: subObject.field2
              message: field2 is invalid
            - field: subObject.field2
              message: another error in the field2
    ValidationError:
      description: Invalid data was sent.
      allOf:
        - $ref: '#/components/schemas/Problem'
        - $ref: '#/components/schemas/ValidationErrorExtensions'
    SyncJob:
      title: SyncJob
      x-entity: SyncJob
      type: object
      required:
        - state
      properties:
        data:
          description: >-
            The result data json, will normally be an array with items for
            errors.
          type: object
        message:
          description: Status message or log
          maxLength: 500
          type: string
        ok:
          type: boolean
        payload:
          description: The payload this job was sent to process
          type: object
        problems:
          type: array
          items:
            type: object
        source:
          description: A description of where this came from
          example: 'Oracle, BankOfAmerica, Lockbox'
          maxLength: 255
          type: string
        sourceId:
          description: the unique id from the outside source for the scheduled job
          example: AR-123-A64
          maxLength: 255
          type: string
        sourceType:
          description: 'Enum, defaults to SourceType.App'
          example: App
          default: App
          type: string
          enum:
            - App
            - Scheduler
            - ERP
            - RestApi
            - PayGateway
        state:
          description: State of the job
          type: string
          enum:
            - Queued
            - Running
            - Finished
            - Cancelled
            - WTF
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArBatch:
      title: ArBatch
      x-entity: ArBatch
      type: object
      required:
        - controlAmount
        - batchType
        - batchDate
      properties:
        arPostedDate:
          description: Date/time the batch was posted to ar
          type: string
          format: date-time
        bankAccount:
          description: The bankAccount (Lockbox) for this batch
          $ref: '#/components/schemas/BankAccount'
        bankAccountNum:
          description: The bank account number assigned during import
          maxLength: 50
          type: string
        bankSequence:
          description: The bank sequence number
          type: integer
          format: int64
        batchDate:
          description: Date of the batch
          type: string
          format: date
        batchType:
          description: Type of batch
          type: string
          enum:
            - Lockbox
            - Manual
            - Merge
            - ACH
            - IACH
            - Card
            - Wire
        companyId:
          type: integer
          format: int64
        controlAmount:
          description: Control Amount should equal the sum of payments amount
          type: number
          format: money
        correctedDate:
          description: The date the batch was originally corrected
          type: string
          format: date-time
        errorDesc:
          description: Error message from batch reconcile process
          maxLength: 4000
          type: string
        fileName:
          description: >-
            File name the batch was imported from or the ACH file generated for
            this batch
          maxLength: 255
          type: string
        flex:
          description: link to ArBatchFlex
          $ref: '#/components/schemas/ArBatchFlex'
        glPostDate:
          description: The gl posting date in the gl period
          type: string
          format: date
        glPostPeriod:
          description: GL Post Period in YYYYMM format for the glPostDate
          maxLength: 7
          type: string
        isCorrected:
          description: Has been corrected
          type: boolean
        isError:
          description: >
            True if batch cannot be reconciled and has errors or payments have
            errors.

            errorDesc field may provide more information here or in the payments
            for this batch.
          type: boolean
        isPosted:
          description: Has been posted
          type: boolean
        lockbox:
          description: 'The bank lockbox, should be entry from Lockbox name resource'
          maxLength: 50
          type: string
        name:
          description: A descriptive name for this batch
          maxLength: 50
          type: string
        origBatchAmount:
          description: >-
            amount of the original batch if this batch was created or split off
            from another batch
          type: number
          format: money
        origBatchId:
          description: >-
            If this batch was created or split off from another then this is
            batch id of the original
          type: integer
          format: int64
        partitionOrg:
          description: The partition org this batch belongs to
          $ref: '#/components/schemas/PartitionOrg'
        source:
          description: The lockbox.bankNumber to lookup
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this batch
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranAutoCash:
      title: ArTranAutoCash
      x-entity: ArTranAutoCash
      type: object
      properties:
        applyComments:
          description: Apply comments from payment record
          maxLength: 255
          type: string
        createdByPayId:
          description: >-
            Id of arTran payment the record was created under (if created in
            autocash)
          type: integer
          format: int64
        createdByPayNum:
          description: >-
            Check number of payment the record was created under (if created in
            autocash)
          maxLength: 255
          type: string
        imageFileName:
          description: check image from Payment
          maxLength: 255
          type: string
        linkedDomain:
          description: 'Name of linked domain, either Payment or PaymentDetail'
          maxLength: 50
          type: string
        linkedId:
          description: 'Id to linked domain in Autocash, either Payment or PaymentDetail'
          type: integer
          format: int64
        recentPayId:
          description: Id of recent arTran payment applied
          type: integer
          format: int64
        recentPayNum:
          description: Recent Check number
          maxLength: 50
          type: string
        recentPayType:
          description: Recent payment type
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranBillShip:
      title: ArTranBillShip
      x-entity: ArTranBillShip
      type: object
      properties:
        billCity:
          description: Bill to city
          maxLength: 255
          type: string
        billCountry:
          description: Bill to country
          maxLength: 255
          type: string
        billCounty:
          description: Bill to county
          maxLength: 255
          type: string
        billIns1:
          description: 'Bill Instructions 1, flexible field'
          maxLength: 255
          type: string
        billIns2:
          description: 'Bill Instructions 2, flexible field'
          maxLength: 255
          type: string
        billIns3:
          description: 'Bill Instructions 3, flexible field'
          maxLength: 255
          type: string
        billIns4:
          description: 'Bill Instructions 4, flexible field'
          maxLength: 255
          type: string
        billName:
          description: Bill to name
          maxLength: 255
          type: string
        billState:
          description: Bill to state
          maxLength: 255
          type: string
        billStreet1:
          description: Bill to street1
          maxLength: 255
          type: string
        billStreet2:
          description: Bill to street2
          maxLength: 255
          type: string
        billZipCode:
          description: Bill to zipcode
          maxLength: 255
          type: string
        shipCity:
          description: Ship to city
          maxLength: 255
          type: string
        shipCountry:
          description: Ship to country
          maxLength: 255
          type: string
        shipCounty:
          description: Ship to county
          maxLength: 255
          type: string
        shipIns1:
          description: 'Ship Instructions 1, flexible field'
          maxLength: 255
          type: string
        shipIns2:
          description: 'Ship Instructions 2, flexible field'
          maxLength: 255
          type: string
        shipIns3:
          description: 'Ship Instructions 3, flexible field'
          maxLength: 255
          type: string
        shipIns4:
          description: 'Ship Instructions 4, flexible field'
          maxLength: 255
          type: string
        shipName:
          description: Ship to name
          maxLength: 255
          type: string
        shipPhone:
          description: Ship to phone
          maxLength: 255
          type: string
        shipState:
          description: Ship to state
          maxLength: 255
          type: string
        shipStreet1:
          description: Ship to street1
          maxLength: 255
          type: string
        shipStreet2:
          description: Ship to street2
          maxLength: 255
          type: string
        shipVia:
          description: Ship via
          maxLength: 255
          type: string
        shipZipCode:
          description: Ship to zipcode
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTran:
      title: ArTran
      x-entity: ArTran
      type: object
      required:
        - tranType
        - tranDate
        - glPostDate
        - refnum
        - customer
        - glPostPeriod
        - partitionOrg
        - amount
        - custNum
        - lines
      properties:
        amount:
          description: >-
            Transaction balance or open amount. For new trans will be equal to
            origAmount.

            If docType is PA or CM then must be < 0.
          type: number
          format: money
        autoCash:
          $ref: '#/components/schemas/ArTranAutoCash'
        billShip:
          description: Billing and Shipping info
          $ref: '#/components/schemas/ArTranBillShip'
        closedDate:
          description: The date transaction was closed on
          type: string
          format: date-time
        closingArAdjust:
          description: ArAdjust that arTran was closed with
          $ref: '#/components/schemas/ArAdjust'
        comments:
          description: 'Comments left on transaction, by collector or customer'
          maxLength: 255
          type: string
        companyId:
          description: 'Company id, will always be set from Customer'
          example: '2'
          default: '2'
          type: integer
          format: int64
        createdArBatch:
          description: ArBatch source for created transactions with a 9ci source
          $ref: '#/components/schemas/ArBatch'
        currency:
          description: >-
            Standard ISO 4217 currency code. Defaults to USD or the Customers
            default currency
          example: USD
          default: USD
          type: string
        custAccount:
          $ref: '#/components/schemas/CustAccount'
        custNum:
          description: customer number
          maxLength: 50
          type: string
        customer:
          description: Customer
          $ref: '#/components/schemas/Customer'
        discAmount:
          description: Discount amount
          type: number
          format: money
        discDate:
          description: >-
            The date discount is valid until, can be extended by grace days
            period
          type: string
          format: date
        dispute:
          $ref: '#/components/schemas/ArTranDispute'
        docType:
          description: 'Document type - PA, IN, CM, DM, DD. 9ci Controlled based on TranType'
          default: '=tranType.docType'
          maxLength: 5
          type: string
        dueDate:
          description: Transaction due date
          default: '=tranDate'
          type: string
          format: date
        ext:
          description: Link to transaction fields not commonly used
          $ref: '#/components/schemas/ArTranExt'
        flex:
          description: Link to transaction fields that may be customer defined
          $ref: '#/components/schemas/ArTranFlex'
        glAcct:
          description: Gl account driven from tran type or reason code
          maxLength: 50
          type: string
        glPostBatch:
          description: GlBatch for this transaction used to post GlJournal
          $ref: '#/components/schemas/GlBatch'
        glPostDate:
          description: The gl posting date in the gl period
          type: string
          format: date
        glPostPeriod:
          description: GL Post Period in YYYYMM format for the glPostDate
          maxLength: 7
          type: string
        lineSum:
          description: >-
            Collection of select fields typically found on transaction lines,
            such as tax, freight, etc
          $ref: '#/components/schemas/ArTranLineSum'
        lines:
          description: List of lines
          type: array
          items:
            $ref: '#/components/schemas/ArTranLine'
        member:
          description: >-
            Link to transactions associated non-customer Org records such as
            branch, region, business unit
          $ref: '#/components/schemas/ArTranOrgMember'
        origAmount:
          description: Transaction original amount
          default: '=amount'
          type: number
          format: money
        origArTranId:
          description: >-
            Id of arTran the transaction was created from, can be orig reversed
            payment
          type: integer
          format: int64
        partitionOrg:
          description: The partition org arTran belongs to
          $ref: '#/components/schemas/PartitionOrg'
        ponum:
          description: Purchase order number
          maxLength: 50
          type: string
        refnum:
          description: 'Transaction ref num, invoice number or check number'
          maxLength: 50
          type: string
        refnum2:
          description: Second reference number
          maxLength: 50
          type: string
        related:
          $ref: '#/components/schemas/ArTranRelated'
        source:
          description: Link to string uniquely identifying this transaction
          $ref: '#/components/schemas/ArTranSource'
        state:
          description: >-
            Transaction state (OPEN=0, CLOSED=1, DRAFT=2, VOID=3). Normally
            driven by status.tranState
          default: '0'
          type: integer
        stats:
          $ref: '#/components/schemas/ArTranStats'
        status:
          description: >-
            User definable status indicator, such as open, closed, void,
            disputed, approved. Defaults to 'Open', status.id=1.
          default: '1'
          $ref: '#/components/schemas/ArStatus'
        tags:
          description: the tags for this item
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        term:
          description: Transaction arTerms reference
          $ref: '#/components/schemas/ArTerm'
        tranDate:
          description: 'Transaction date, invoice date, check date'
          type: string
          format: date
        tranType:
          description: The transaction type. Drives docType and logic on amount sign.
          $ref: '#/components/schemas/ArTranType'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    GlJournalFlex:
      title: GlJournalFlex
      x-entity: GlJournalFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    GlBatch:
      title: GlBatch
      x-entity: GlBatch
      type: object
      required:
        - org
        - glPostDate
        - glPostPeriod
        - batchStatus
        - journals
      properties:
        arBatch:
          description: ArBatch that this glbatch has data for
          $ref: '#/components/schemas/ArBatch'
        batchStatus:
          description: 'Failed 0, Success 1, In Progress 2, Void 3'
          type: string
          enum:
            - Failed
            - Success
            - InProcess
            - Void
        controlAmount:
          description: Sum of credit amount (debit amount)
          type: number
          format: money
        description:
          description: Description of posting failures
          maxLength: 4000
          type: string
        glPostDate:
          description: The gl posting date
          type: string
          format: date
        glPostPeriod:
          description: The gl posting period
          maxLength: 7
          type: string
        jobId:
          description: id of SyncJob that exported GlBatch to ERP
          type: integer
          format: int64
        journals:
          description: List of glJournals
          type: array
          items:
            $ref: '#/components/schemas/GlJournal'
        org:
          description: org from appConfig.partitionOrgType
          $ref: '#/components/schemas/Org'
        source:
          description: >-
            Source of data this glBatch has gl journals for; for example App,
            Erp
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    GlJournalOrgMember:
      title: GlJournalOrgMember
      x-entity: GlJournalOrgMember
      type: object
      properties:
        branch:
          description: Link to org branch domain
          $ref: '#/components/schemas/Org'
        business:
          description: Link to org business domain
          $ref: '#/components/schemas/Org'
        division:
          description: Link to org division domain
          $ref: '#/components/schemas/Org'
        factory:
          description: Link to org factory domain
          $ref: '#/components/schemas/Org'
        region:
          description: Link to org region domain
          $ref: '#/components/schemas/Org'
        sales:
          description: Link to org sales domain
          $ref: '#/components/schemas/Org'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    GlJournal:
      title: GlJournal
      x-entity: GlJournal
      type: object
      required:
        - glPostDate
        - debit
        - glPostPeriod
        - glPostBatch
        - glAcct
        - credit
      properties:
        credit:
          description: Credit amount
          type: number
          format: money
        debit:
          description: Debit amount
          type: number
          format: money
        flex:
          description: Link to GlJournalFlex
          $ref: '#/components/schemas/GlJournalFlex'
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        glPostBatch:
          description: Gl Batch it was posted to GL with
          $ref: '#/components/schemas/GlBatch'
        glPostDate:
          description: The date glJournal was posted to GL
          type: string
          format: date
        glPostPeriod:
          description: Gl Period glJournal was posted to GL
          maxLength: 7
          type: string
        linkedEntity:
          description: Name of linked entity this gl entry came from
          example: 'ArAdjustLineJournal, ArAdjustJournal, ArTranJournal'
          type: string
          enum:
            - ArTranJournal
            - ArAdjustLineJournal
            - ArAdjustJournal
        member:
          description: Link to GlJournalMember
          $ref: '#/components/schemas/GlJournalOrgMember'
        source:
          description: source of gl entries
          example: 'Autocash, InApi'
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArAdjust:
      title: ArAdjust
      x-entity: ArAdjust
      type: object
      required:
        - glPostDate
        - arTran
        - glPostPeriod
        - amount
        - lines
      properties:
        amount:
          description: >-
            Total amount of adjustment. Will equal the sum of the lines amount
            not including discount
          type: number
          format: money
        arBatch:
          description: >-
            The arbatch that this was created under, can be null if it came from
            ERP with rest api
          $ref: '#/components/schemas/ArBatch'
        arPostDate:
          description: The arPostDate
          type: string
          format: date
        arTran:
          description: Payment or credit to apply this is the "adjuster"
          $ref: '#/components/schemas/ArTran'
        glPostBatch:
          description: >-
            GlBatch that was created in posting to GlJournal process. Always the
            same as ArdjustJournal.glBatch
          $ref: '#/components/schemas/GlBatch'
        glPostDate:
          description: The gl posting date
          type: string
          format: date
        glPostPeriod:
          description: The gl posting period
          maxLength: 7
          type: string
        jobId:
          description: JobId from outApi job that exported arAdjust to ERP
          type: integer
          format: int64
        lines:
          description: List of adjust lines
          type: array
          items:
            $ref: '#/components/schemas/ArAdjustLine'
        reversedJobId:
          description: Special jobId from outApi job assigned only for reversed adjust
          type: integer
          format: int64
        source:
          description: Where this came from
          default: RCM
          type: string
          enum:
            - RCM
            - Autocash
            - ERP
            - FC
            - BDWO
            - iPay
        state:
          description: 'CLOSED=1, VOID=3'
          default: '0'
          type: integer
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArAdjustLine:
      title: ArAdjustLine
      x-entity: ArAdjustLine
      type: object
      required:
        - arTran
        - amount
        - arAdjust
      properties:
        amount:
          description: The amount adjusted
          type: number
          format: money
        arAdjust:
          description: The arAdjust this line belongs to
          $ref: '#/components/schemas/ArAdjust'
        arTran:
          description: The tran that was adjusted
          $ref: '#/components/schemas/ArTran'
        discAmount:
          description: The discount amount taken during adjustment
          type: number
          format: money
        isOriginator:
          description: Flag that arTran was cerated/originated with this ArAdjustLine
          type: boolean
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
    ArTerm:
      title: ArTerm
      x-entity: ArTerm
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        discountDays:
          description: Number of days discount is valid for from tranDate
          default: '0'
          type: integer
        discountForACH:
          description: Special discount if paid by ACH
          type: number
          format: money
        discountForACHDays:
          description: Number of days discount is valid for if paid by ACH
          type: integer
        discountPercent:
          description: Discount percentage
          default: '0'
          type: number
          format: money
        dueInDays:
          description: Number of days transaction is due from tranDate
          type: integer
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustCreditInfo:
      title: CustCreditInfo
      x-entity: CustCreditInfo
      type: object
      properties:
        annualSales:
          type: number
          format: money
        comments1:
          description: Comments 1
          maxLength: 65535
          type: string
        comments2:
          description: Comments 2
          maxLength: 65535
          type: string
        comments3:
          description: Comments 3
          maxLength: 65535
          type: string
        corpGuarExpDate:
          type: string
          format: date
        corpGuarantee:
          type: boolean
        creditApp:
          type: boolean
        creditAppDate:
          type: string
          format: date
        creditClassId:
          type: integer
          format: int64
        creditHoldDate:
          type: string
          format: date
        creditLimit:
          type: number
          format: money
        creditLimit2:
          type: number
          format: money
        creditRating:
          description: Credit Rating
          maxLength: 255
          type: string
        creditScore:
          description: Credit Score
          maxLength: 255
          type: string
        creditStatus:
          description: Credit Status
          maxLength: 255
          type: string
        creditThreshold:
          description: Credit Threshold
          minimum: 0
          type: number
          format: money
        dateOpened:
          type: string
          format: date
        duns:
          description: Dunning
          maxLength: 255
          type: string
        financialsDate:
          type: string
          format: date
        lcExpDate:
          type: string
          format: date
        netWorth:
          type: number
          format: money
        parFinancialsDate:
          type: string
          format: date
        parentNetWorth:
          type: number
          format: money
        peopleEmployed:
          type: integer
          format: int64
        persFinancialsDate:
          type: string
          format: date
        personalGuarantee:
          type: boolean
        personalNetWorth:
          type: number
          format: money
        riskClass:
          description: 'High, Medium or Low'
          maxLength: 255
          type: string
        ticker:
          description: Ticker
          maxLength: 255
          type: string
        uccExpDate:
          type: string
          format: date
        yearStarted:
          type: string
          format: date
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustAcSetup:
      title: CustAcSetup
      x-entity: CustAcSetup
      type: object
      properties:
        discPct:
          description: >-
            Allowed discount percentage that overrides setting from discount
            group 
          type: number
          format: money
        discountGroupId:
          description: Id of discount setup group
          type: integer
          format: int64
        graceDays:
          description: 'Allowed grace days that overrides setting from discount group '
          type: integer
        matchGroupId:
          description: Id of match setup group
          type: integer
          format: int64
        memoGroupId:
          description: Id of memo setup group
          type: integer
          format: int64
        offsetGroupId:
          description: Id of offset setup group
          type: integer
          format: int64
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustExt:
      title: CustExt
      x-entity: CustExt
      type: object
      properties:
        dipDate:
          description: DIP Date
          type: string
          format: date
        dipNum:
          description: DIP Num
          maxLength: 255
          type: string
        freightTerms:
          description: Freight Terms
          maxLength: 255
          type: string
        gln:
          description: GLN number
          maxLength: 255
          type: string
        is850:
          description: Should customer get an EDI 850 invoice
          type: boolean
        payablesWebsite:
          description: URL link for this customers payables website
          maxLength: 255
          type: string
        removedDate:
          description: Date customer was removed
          type: string
          format: date-time
        setupDate:
          description: Date customer was setup
          type: string
          format: date-time
        sic:
          description: SIC code
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustRelated:
      title: CustRelated
      x-entity: CustRelated
      type: object
      properties:
        cashUser:
          description: The user who posted from autocash
          $ref: '#/components/schemas/AppUser'
        collector:
          description: Primary collector assigned to this
          $ref: '#/components/schemas/AppUser'
        disputeResolver:
          description: The person responsible for the dispute/deduction
          $ref: '#/components/schemas/AppUser'
        payFromNum:
          maxLength: 255
          type: string
        salesPerson:
          description: The sales person
          $ref: '#/components/schemas/Contact'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustClass:
      title: CustClass
      x-entity: CustClass
      type: object
      required:
        - code
        - name
      properties:
        acDiscountGroupId:
          description: >-
            Id of the discount group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        acMatchGroupId:
          description: >-
            Id of the match group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        acMemoGroupId:
          description: >-
            Id of the memo group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        acOffsetGroupId:
          description: >-
            Id of the offset group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        sourceId:
          type: string
        validFor:
          maxLength: 20
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustSetup:
      title: CustSetup
      x-entity: CustSetup
      type: object
      properties:
        arTermsId:
          description: ArTerms Id
          type: integer
          format: int64
        class1:
          description: The CustClass 1
          $ref: '#/components/schemas/CustClass'
        class2:
          description: The CustClass 2
          $ref: '#/components/schemas/CustClass'
        class3:
          description: The CustClass 3
          $ref: '#/components/schemas/CustClass'
        currency:
          description: standard ISO 4217 currency code
          example: USD
          type: string
        deliveryEmail:
          description: >-
            The email to use for statement delivery, comma separated list of
            emails
          maxLength: 255
          type: string
        ediInvoices:
          type: boolean
        emailInvoices:
          type: boolean
        financeChargePct:
          description: >-
            Percentage rate for finance charge. If null of empty then looks in
            ArUsStateRate
          type: number
          format: money
        onlinePayGroupId:
          description: Greenbill payment group
          type: integer
          format: int64
        paperInvoices:
          type: boolean
        recurringPayGroupId:
          description: recurring payment group
          type: integer
          format: int64
        stmtDelivery:
          description: 'How to send the statement - null, Email, Fax, Parcel'
          maxLength: 255
          type: string
        timeZone:
          description: Standard TimeZone
          example: GMT
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustStats:
      title: CustStats
      x-entity: CustStats
      type: object
      properties:
        balanceChangeDate:
          description: Last balance update time
          type: string
          format: date-time
        hasArTransInHistory:
          description: Flag that transactions have been purged to history system
          type: boolean
        historyMessage:
          description: Message to users about transactions moved to history system
          maxLength: 50
          type: string
        lastActBy:
          description: Id of user who had last activity for customer
          type: integer
          format: int64
        lastActDate:
          description: Date of last activity
          type: string
          format: date-time
        lastActId:
          description: Id of last activity
          type: integer
          format: int64
        lastInTran:
          description: Last invoice ArTran
          $ref: '#/components/schemas/ArTran'
        lastPaTran:
          description: Last payment ArTran
          $ref: '#/components/schemas/ArTran'
        lastShipTran:
          description: Last shipped invoice ArTran
          $ref: '#/components/schemas/ArTran'
        nextActDate:
          description: Date of next activity
          type: string
          format: date-time
        nextActId:
          description: Id of next activity
          type: integer
          format: int64
        pastDue:
          description: Past due
          type: number
          format: money
        totalDue:
          description: Total due
          type: number
          format: money
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
    Customer:
      title: Customer
      x-entity: Customer
      type: object
      required:
        - name
        - partitionOrg
        - num
        - arTerms
        - salesReps
      properties:
        acSetup:
          description: >-
            Link to parameter values controlling cash application for this
            customer
          $ref: '#/components/schemas/CustAcSetup'
        arTerms:
          description: List of arTerm
          type: array
          items:
            $ref: '#/components/schemas/ArTerm'
        commentsCollector:
          description: 'Comments for internal collectors only, customer wont see'
          maxLength: 255
          type: string
        companyId:
          description: 'Company id, denormalized from Org'
          default: '2'
          type: integer
          format: int64
        creditInfo:
          description: Link to CustCreditInfo
          $ref: '#/components/schemas/CustCreditInfo'
        custFamilyType:
          description: Type of customer family
          type: string
          enum:
            - Parent
            - Grandparent
        ext:
          description: >-
            Link to fields such as sic code, DIP number, customer payables
            website
          $ref: '#/components/schemas/CustExt'
        inactive:
          description: Is active?
          type: boolean
        name:
          description: Full name for this customer
          maxLength: 255
          type: string
        name2:
          description: Customer secondary name (or num)
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this entity
          maxLength: 50
          type: string
        org:
          description: Link to Org domain
          $ref: '#/components/schemas/Org'
        partitionOrg:
          description: The partition org customer belongs to
          $ref: '#/components/schemas/PartitionOrg'
        payablesContact:
          description: Accounts payable dept info
          $ref: '#/components/schemas/Contact'
        related:
          description: >-
            Link to syste fields related to this customer such as collector,
            dispute specialist, cash applier, etc
          $ref: '#/components/schemas/CustRelated'
        salesReps:
          description: List of sales reps
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        setup:
          description: >-
            Link to customer setup fields such as class, statement control,
            finance charge control
          $ref: '#/components/schemas/CustSetup'
        stats:
          description: >-
            Link to dynamic customer information such as last payment, last
            invoice, etc
          $ref: '#/components/schemas/CustStats'
        tags:
          description: User definable descriptive tage associated with this customer
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustAccountLien:
      title: CustAccountLien
      x-entity: CustAccountLien
      type: object
      properties:
        bond:
          description: bond
          $ref: '#/components/schemas/Contact'
        city:
          description: City
          maxLength: 255
          type: string
        contractAmt:
          description: contractAmt
          type: number
          format: money
        contractor:
          description: Contractor Contact domain
          $ref: '#/components/schemas/Contact'
        custJobNum:
          description: customer job num
          maxLength: 255
          type: string
        custPo:
          description: Customer PO
          maxLength: 255
          type: string
        firstShip:
          description: firstShip
          type: string
          format: date
        jobName:
          description: Job name
          maxLength: 255
          type: string
        jobTerms:
          description: Job terms
          maxLength: 255
          type: string
        jobType:
          description: Type of job
          maxLength: 255
          type: string
        lastShip:
          description: lastShip
          type: string
          format: date
        lender:
          description: lender
          $ref: '#/components/schemas/Contact'
        lotNum:
          description: lot number
          maxLength: 255
          type: string
        materialAmt:
          description: materialAmt
          type: number
          format: money
        org:
          $ref: '#/components/schemas/Org'
        owner:
          description: Owner Contact domain
          $ref: '#/components/schemas/Contact'
        state:
          description: State
          maxLength: 255
          type: string
        street:
          description: Street 1
          maxLength: 255
          type: string
        street2:
          description: Street 2
          maxLength: 255
          type: string
        tenantImprov:
          description: tenantImprov
          type: boolean
        tractNum:
          description: tract number
          maxLength: 255
          type: string
        zipCode:
          description: Zipcode
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustAccountType:
      title: CustAccountType
      x-entity: CustAccountType
      type: object
      properties:
        code:
          description: Code
          maxLength: 10
          type: string
        isJob:
          description: Flag if type is a job
          type: boolean
        name:
          description: Name
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustAccount:
      title: CustAccount
      x-entity: CustAccount
      type: object
      required:
        - name
        - customer
        - partitionOrg
        - num
        - arTerms
        - salesReps
      properties:
        arTerms:
          description: List of arTerm
          type: array
          items:
            $ref: '#/components/schemas/ArTerm'
        commentsCollector:
          description: 'Comments for internal collectors only, customer wont see'
          maxLength: 255
          type: string
        creditInfo:
          description: Link to CustCreditInfo domain
          $ref: '#/components/schemas/CustCreditInfo'
        customer:
          description: >
            The Customer this CustAccount belongs to.

            Updating the Customer field is ONLY allowed when there are no
            existing ArTrans (open or closed) for this CustAccount.
          $ref: '#/components/schemas/Customer'
        inactive:
          description: Is active?
          type: boolean
        isLocationDifferent:
          description: Is Location different from customer
          type: boolean
        lien:
          description: >-
            Link to fiekds associated with materials/construction such as bank,
            contractor, property owner, etc
          $ref: '#/components/schemas/CustAccountLien'
        name:
          description: Full name for this customer
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this entity
          maxLength: 50
          type: string
        org:
          description: >-
            Link to Org fields for this custAccount such as website, phone
            number, fax, etc
          $ref: '#/components/schemas/Org'
        partitionOrg:
          description: >-
            The partition org custAccount belongs to, assigned from customer
            level.
          $ref: '#/components/schemas/PartitionOrg'
        related:
          description: >-
            Link to system fields related to this custAccount such as collector,
            dispute specialist, cash applier, etc
          $ref: '#/components/schemas/CustRelated'
        salesReps:
          description: List of sales reps
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        setup:
          description: >-
            Link to customer setup fileds such as class, statement control,
            finance charge control
          $ref: '#/components/schemas/CustSetup'
        stats:
          description: >-
            Link to dynamic cust account information such as last payment, last
            invoice, etc
          $ref: '#/components/schemas/CustStats'
        tags:
          description: User definable descriptive tage associated with this customer
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        type:
          description: >-
            User definable field describing custAccout type such as Industial,
            government, secured
          $ref: '#/components/schemas/CustAccountType'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArReasonGroup:
      title: ArReasonGroup
      x-entity: ArReasonGroup
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArReason:
      title: ArReason
      x-entity: ArReason
      type: object
      required:
        - name
        - code
      properties:
        clearAccount:
          description: GL Account that goes on ArTranLine when reason assigned
          maxLength: 50
          type: string
        clearSubAcct:
          description: GL Account that goes on ArTran header record when reason assigned
          maxLength: 50
          type: string
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        group:
          description: Reason Grouping
          $ref: '#/components/schemas/ArReasonGroup'
        inactive:
          description: Inactive flag
          type: boolean
        modules:
          description: >-
            Specifies whether the ArReason should be visible/selectable in
            Autocash/ArTran screens or not
          type: string
          enum:
            - Autocash
            - Collection
            - IPay
            - None
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this reason code
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranDispute:
      title: ArTranDispute
      x-entity: ArTranDispute
      type: object
      required:
        - amount
      properties:
        amount:
          description: Dispute or deduction amount
          type: number
          format: money
        comments:
          description: Comments about this dispute
          maxLength: 1000
          type: string
        disputeDate:
          description: Date disputed
          type: string
          format: date
        reason:
          description: Dispute reason
          $ref: '#/components/schemas/ArReason'
        reasonChangedDate:
          description: Date reason was assigned
          type: string
          format: date
        splitFromArTranId:
          description: Id of orig arTran the dispute was split from
          type: integer
          format: int64
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranExt:
      title: ArTranExt
      x-entity: ArTranExt
      type: object
      properties:
        bolNum:
          description: Bill of lading number
          maxLength: 50
          type: string
        crossRefnum:
          description: Cross reference number
          maxLength: 50
          type: string
        masterTranAmount:
          description: >-
            Amount of arTran that came in from ERP when it's different from 9ci
            amount
          type: number
          format: money
        masterTranDate:
          description: >-
            Transaction date of arTran that came in from ERP when it's different
            from 9ci transaction date
          type: string
          format: date
        masterTranNum:
          description: >-
            Refnum of arTran that came in from ERP when it's different from 9ci
            refnum
          maxLength: 50
          type: string
        masterTranType:
          description: >-
            TranType of arTran that came in from ERP when it's different from
            9ci tranType
          maxLength: 50
          type: string
        orderNum:
          description: Order number
          maxLength: 50
          type: string
        origCurrencyAmount:
          description: Original Amount in original currency
          type: number
          format: money
        poAmount:
          description: Purchase Order amount
          type: number
          format: money
        poDate:
          description: Purchase Order date
          type: string
          format: date
        reasonSubId:
          description: 'id of additional reason code, reasonSub'
          type: integer
          format: int64
        rmaNum:
          description: Rma num
          maxLength: 50
          type: string
        shipDate:
          description: Shipping date
          type: string
          format: date
        shipToAttn:
          description: Ship to Attn
          maxLength: 255
          type: string
        shipToName:
          description: Ship to name
          maxLength: 50
          type: string
        statusChangeDate:
          description: Date the status was changed
          type: string
          format: date-time
        statusRemarkId:
          description: 'Id of additional status assigned, remark status'
          type: integer
          format: int64
        storeNum:
          description: Store number
          maxLength: 50
          type: string
        syncDateReentered:
          description: Date when transaction was re opened with sync process
          type: string
          format: date-time
        syncMasterAmount:
          description: >-
            Amount transaction was reopened with, amount from the master system
            (ERP)
          type: number
          format: money
        syncOldAmount:
          description: Original amount before transaction was reopened
          type: number
          format: money
        xferOrg:
          description: >-
            partition Org assigned on inter company transactions from autocash
            (ICCM, ICDM and ICPA)
          $ref: '#/components/schemas/Org'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranFlex:
      title: ArTranFlex
      x-entity: ArTranFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranLineSum:
      title: ArTranLineSum
      x-entity: ArTranLineSum
      type: object
      properties:
        discAmount:
          description: >-
            Dicount amount or the sum where lineKind is Discount, should be
            positive
          type: number
          format: money
        discPct:
          description: Discount percentage
          type: number
          format: money
        shippingAmount:
          description: Shipping amount or the sum where itemKind is Shipping
          type: number
          format: money
        svcChargeAmount:
          description: Service Charge amount or the sum where itemKind is svcCharge
          type: number
          format: money
        taxAmount:
          description: Tax amount or the sum where itemKind is tax
          type: number
          format: money
        taxCode:
          description: Tax code if applies to all the lines
          maxLength: 255
          type: string
        taxPct:
          description: Tax percentage if applies to all the lines
          type: number
          format: money
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranLineFlex:
      title: ArTranLineFlex
      x-entity: ArTranLineFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranLineType:
      title: ArTranLineType
      x-entity: ArTranLineType
      type: object
      required:
        - code
        - kind
        - name
      properties:
        code:
          description: Line type code
          maxLength: 10
          type: string
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        inactive:
          description: Active/inactive flag
          default: 'false'
          type: boolean
        invisible:
          description: Flag to show/hide on the statement
          default: 'false'
          type: boolean
        isSystem:
          description: >-
            internal use only, true for the base system items that can't be
            deleted but can be inactivated
          type: boolean
        kind:
          description: kind
          type: string
          enum:
            - Memo
            - Item
            - Discount
            - Tax
            - Journal
            - Comments
        name:
          description: Name
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this line type
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Item:
      title: Item
      x-entity: Item
      type: object
      required:
        - unitPrice
        - code
        - kind
        - name
      properties:
        code:
          maxLength: 10
          type: string
        description:
          maxLength: 255
          type: string
        glAcctExpense:
          type: string
        glAcctIncome:
          type: string
        glAcctInventory:
          type: string
        kind:
          type: string
          enum:
            - Service
            - Product
            - Shipping
            - SvcCharge
            - FinCharge
            - Other
        lineType:
          $ref: '#/components/schemas/ArTranLineType'
        name:
          maxLength: 50
          type: string
        num:
          maxLength: 50
          type: string
        unitOfMeasure:
          maxLength: 10
          type: string
        unitPrice:
          type: number
          format: money
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranLineItem:
      title: ArTranLineItem
      x-entity: ArTranLineItem
      type: object
      required:
        - unitPrice
        - qty
        - item
        - kind
      properties:
        code:
          description: >-
            Code of the item. Denormalized from item, overridden at creation
            time or imported from source system
          maxLength: 10
          type: string
        costAmount:
          description: >-
            The cogs (cost of goods sold) for the line used to calculate the
            gross margin for the ArTran
          default: '0'
          type: number
          format: money
        discAmount:
          description: 'The discount for the line, flat amount'
          type: number
          format: money
        discPct:
          description: 'the discount percent, discAmount = discPct * (units * unitPrice) '
          type: number
          format: money
        item:
          description: 'Invoiced item, must exist in items if imported, default to Product'
          $ref: '#/components/schemas/Item'
        kind:
          description: The kind from item
          type: string
          enum:
            - Service
            - Product
            - Shipping
            - SvcCharge
            - FinCharge
            - Other
        name:
          description: The name of the item. Denormalized from Item.name
          maxLength: 255
          type: string
        num:
          description: The num of the item. Denormalized from item
          maxLength: 255
          type: string
        orderNum:
          description: the order number this line came from
          maxLength: 50
          type: string
        qty:
          description: Unit quantity.  amount should equal units * unitPrice
          type: number
          format: money
        taxAmount:
          description: 'The tax for the line, flat amount'
          type: number
          format: money
        taxCode:
          description: Imported tax code
          maxLength: 10
          type: string
        taxPct:
          description: >-
            Set to 0 if it should be exempt but want to show the tax code its
            from
          type: number
          format: money
        unitOfMeasure:
          description: >-
            Unit of measure. ex. each, hour, case, pound, etc... can just be
            null if not needed or imported
          maxLength: 50
          type: string
        unitPrice:
          description: The price or rate per unit in qty
          type: number
          format: money
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranLine:
      title: ArTranLine
      x-entity: ArTranLine
      type: object
      required:
        - arTran
        - lineType
        - kind
        - amount
      properties:
        amount:
          description: Line amount
          type: number
          format: money
        arTran:
          description: Transaction this line belongs to
          $ref: '#/components/schemas/ArTran'
        comments:
          description: Comments with no impact
          maxLength: 255
          type: string
        description:
          type: string
        flex:
          description: Link to ArTranLineFlex
          $ref: '#/components/schemas/ArTranLineFlex'
        glAcct:
          description: >-
            Gl account, from ArTran.tranType, reason, lineType, Item, imported
            or manually entered
          maxLength: 50
          type: string
        invisible:
          description: if true then don't show on invoice print or view by default
          type: boolean
        kind:
          description: kind of line
          example: 'Memo, Item'
          type: string
          enum:
            - Memo
            - Item
            - Discount
            - Tax
            - Journal
            - Comments
        lineItem:
          description: Link to ArTranLineItem for additional line info
          $ref: '#/components/schemas/ArTranLineItem'
        lineSequence:
          description: Optional line sequence to order the lines on a invoice or report
          type: integer
        lineType:
          description: >-
            The type of line item, The 2 most common types will be Memo and
            Item. They can drive GL
          $ref: '#/components/schemas/ArTranLineType'
        sourceId:
          description: The source identifier for this line
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranOrgMember:
      title: ArTranOrgMember
      x-entity: ArTranOrgMember
      type: object
      properties:
        branch:
          description: Link to org branch domain
          $ref: '#/components/schemas/Org'
        business:
          description: Link to org business domain
          $ref: '#/components/schemas/Org'
        company:
          $ref: '#/components/schemas/Org'
        division:
          description: Link to org division domain
          $ref: '#/components/schemas/Org'
        factory:
          description: Link to org factory domain
          $ref: '#/components/schemas/Org'
        region:
          description: Link to org region domain
          $ref: '#/components/schemas/Org'
        sales:
          description: Link to org sales domain
          $ref: '#/components/schemas/Org'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranRelated:
      title: ArTranRelated
      x-entity: ArTranRelated
      type: object
      properties:
        cashUser:
          description: The user who posted from autocash
          $ref: '#/components/schemas/AppUser'
        collector:
          description: The primary collector assigned to this
          $ref: '#/components/schemas/AppUser'
        disputeResolver:
          description: The person responsible for the dispute/deduction
          $ref: '#/components/schemas/AppUser'
        salesPerson:
          description: Sales person
          $ref: '#/components/schemas/Contact'
        shipToLocationId:
          description: The ship to location for this arTran
          type: integer
          format: int64
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranSource:
      title: ArTranSource
      x-entity: ArTranSource
      type: object
      required:
        - arTranId
        - sourceId
      properties:
        arTranId:
          description: Id of arTran this source belongs to
          type: integer
          format: int64
        originator:
          description: True if original source for transaction
          default: 'false'
          type: boolean
        source:
          description: The source for this transaction
          example: Oracle
          maxLength: 255
          type: string
        sourceId:
          description: the unique id from the outside source
          example: AR-123-A64
          maxLength: 255
          type: string
        sourceType:
          description: 'Enum, defaults to SourceType.App'
          example: App
          default: App
          type: string
          enum:
            - App
            - Scheduler
            - ERP
            - RestApi
            - PayGateway
        sourceVersion:
          description: Optional edit sequence number from the source system
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranStats:
      title: ArTranStats
      x-entity: ArTranStats
      type: object
      properties:
        bucketLastNight:
          description: Name of aging bucket last night
          maxLength: 255
          type: string
        bucketOnStatement:
          description: Name of aging bucket transaction was at the time of statement run
          maxLength: 255
          type: string
        hasActivity:
          description: 'If transaction has activities, used for screen visibility'
          type: boolean
        hasAttachments:
          description: 'If transaction has attachments, used for screen visibility'
          type: boolean
        hasNotes:
          description: 'If transaction has notes, used for screen visibility'
          type: boolean
        lastInJobId:
          description: Id of the last SyncJob this arTran was imported or updated with
          type: integer
          format: int64
        lastOutJobId:
          description: Id of the last SyncJob this arTran was sent out with
          type: integer
          format: int64
        lastStatementDate:
          description: Date of last statement
          type: string
          format: date-time
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArStatus:
      title: ArStatus
      x-entity: ArStatus
      type: object
      required:
        - code
        - name
      properties:
        baseStatus:
          type: string
          enum:
            - Open
            - PastDue
            - Sent
            - Dispute
            - Research
            - Denied
            - Pending
            - Exclude
            - PayPlan
            - Promise
            - BrokenPromise
            - Closed
            - Paid
            - Draft
            - Reversal
            - Void
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        inactive:
          description: Is inactive?
          type: boolean
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        requireReason:
          description: Is reason code required?
          type: boolean
        sourceId:
          description: The source identifier for this status
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArTranType:
      title: ArTranType
      x-entity: ArTranType
      type: object
      required:
        - baseTranType
        - name
        - docType
        - code
      properties:
        baseTranType:
          description: The base system tran type this inherits from
          type: string
          enum:
            - IN
            - PA
            - PAM
            - CM
            - DM
            - DD
            - oCM
            - oDM
            - cCM
            - cDM
            - rCM
            - rDM
            - OA
            - RET
            - RPA
            - RD
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        docType:
          description: DocType behind this tranType. Should be driven by the baseTranType
          maxLength: 2
          type: string
        glAcct:
          description: >

            When GL is enabled this is the account that will be Debited for
            DM,IN & DD and Credited for CM & PA types.

            e.g. for a PA this will either be AR or an Unaaplied cash account.
            For an DM or IN this will normally be the AR account.
          maxLength: 50
          type: string
        glDetailAcct:
          description: >

            If the tran type is driving the detail, and a transaction is created
            without lines, then this will be what balances the GL.

            This is the account that will be Credited for DM,IN & DD and Debited
            for CM & PA types.

            e.g. for a PA this will be the Cash/Bank GL. For an DM this might be
            a balancing account.

            For a Write-off this would be the write off expense account.
          maxLength: 50
          type: string
        hideForClosed:
          description: >

            When true will be hidden by default when viewing closed
            transactions.

            Can be used to hide the opposing and behind the scenes transactions
            (used primarily for accounting) from customers.
          default: 'false'
          type: boolean
        isOpposingTran:
          type: boolean
        movedTranTypeId:
          type: integer
          format: int64
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        newRefnumGeneratorId:
          type: integer
          format: int64
        opposing:
          $ref: '#/components/schemas/ArTranType'
        reversingTranTypeId:
          type: integer
          format: int64
        source:
          type: string
        sourceId:
          type: string
        useReasonGL:
          description: >-
            Used primarily in Autocash posting, mostly used for write offs, as
            write offs usually requires reason code. 
          default: 'false'
          type: boolean
        visibleToAutocash:
          description: >-
            Whether this should be shown as an option in the drop down for
            autocash payment detail
          default: 'false'
          type: boolean
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    PayTran:
      title: PayTran
      x-entity: PayTran
      type: object
      required:
        - applyAmount
        - customer
        - state
        - surcharge
        - payType
        - amount
        - lines
      properties:
        amount:
          description: >

            Calculated. applyAmount is prefered for when creating new PayTrans.

            If only amount is set, applyAmount will be assigned from amount
            first before any calculations

            : amount = applyAmount + surcharge fee
          type: number
          format: money
        applyAmount:
          description: >-
            Amount to apply to invoices. applyAmount = amount - surcharge. Same
            as amount when no fees
          type: number
          format: money
        arBatch:
          description: The batch that has been assigned for processing and posting
          $ref: '#/components/schemas/ArBatch'
        arTran:
          description: The arTran that was created for this after processing or posting
          $ref: '#/components/schemas/ArTran'
        comments:
          description: Comments
          maxLength: 500
          type: string
        currency:
          description: >-
            ISO 4217 currency (ex "USD") if Company is setup for multiple
            currencies
          type: string
        customer:
          description: 'Customer for payment, on create pass its id at minimum'
          $ref: '#/components/schemas/Customer'
        instrument:
          description: >-
            Payment instrument and billing used for the payment. The token from
            the iframe Tokenizer will submited here.
                              If coming from a wallet then its data is kept here for historical purposes.
          type: string
        isPrepay:
          description: >
            If this is a pre-payment it will not validate the lines and use
            logic to create an on-account open credit memo using the

            default tranType that has been configured for the payment type.
          default: 'false'
          type: boolean
        lines:
          description: 'The lines for instruction on how to apply payment '
          type: array
          items:
            $ref: '#/components/schemas/PayTranLine'
        payDate:
          description: >-
            The payment date, defaults to the day its created unless its
            scheduled for future.
          default: now
          type: string
          format: date
        payType:
          description: 'ACH, Card or RD (Returns)'
          type: string
          enum:
            - ACH
            - Card
            - RD
        postedDate:
          description: >-
            Date/time it was posted to ArTran and applied. When this is not null
            then arTranId will contain the id for the PA ArTran
          type: string
          format: date-time
        processedDate:
          description: >-
            Date/time it was processed with CC gateway or sent as ACH. WIll be
            null if it has not been processed yet and will have a
                              response when this has a value
          type: string
          format: date-time
        processorResponse:
          description: >-
            The last response from the credit card gateway or bank for ACH. See
            examples as the format will vary depending on the gateway
          type: string
        refnum:
          description: Payment reference number.
          maxLength: 50
          type: string
        sendRecieptTo:
          description: >
            Send a receipt (and a problem email if it gets returned) to this
            email address, can be any ISO valid email or comma seperated emails.

            To disable sending for this paytran, set this to FALSE or NO. If
            this is empty and nine.ipay.
          example: 'sarah123@gmail.com, "Blow, Joe" <joe@9ci.com>'
          maxLength: 1000
          type: string
        state:
          description: >-
            Last status of this ipay tran. Updates allow Ready only, all others
            will be system set.
          type: string
          enum:
            - Processed
            - Posted
            - Active
            - Void
            - Ready
            - Declined
            - Approved
            - Future
            - Error
        surcharge:
          description: >-
            Surcharges or Convenience Fee for payment (normally only for credit
            cards)
          type: number
          format: money
        tranType:
          description: >

            The ArTran tranType, will normally be automatically populated from
            the default config for ACH or CC

            and is not normally required on create. When isPrepay is true this
            will be the tranType for the open credit memo.
          $ref: '#/components/schemas/ArTranType'
        wallet:
          description: >-
            The saved payment instrument to use, can be null if its a one off.
            Can be thought of as a template for token
          $ref: '#/components/schemas/Wallet'
        id:
          type: string
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    PayTranLine:
      title: PayTranLine
      x-entity: PayTranLine
      type: object
      required:
        - applyAmount
        - arTran
      properties:
        applyAmount:
          description: >-
            the amount to pay on the Tran. If less then tran.amount then
            shortAmount and shortReason are required
          type: number
          format: money
        arTran:
          description: The ArTran being paid
          $ref: '#/components/schemas/ArTran'
        comments:
          description: Any special comment about this application
          maxLength: 500
          type: string
        disputeLines:
          description: JSON array with info on invoice lines being shorted or disputed
          type: array
          items:
            type: object
        isOriginator:
          description: >-
            Will be true if this tran was created for and during this payment
            application, sush as for FEECC
          type: boolean
        payTran:
          $ref: '#/components/schemas/PayTran'
        shortAmount:
          description: The amount shorted.
          type: number
          format: money
        shortReasonId:
          description: The reason Tran is not being paid in full
          type: integer
          format: int64
        id:
          type: string
          description: unique id
          example: 954
          readOnly: true
    Wallet:
      title: Wallet
      x-entity: Wallet
      type: object
      required:
        - customer
      properties:
        bankName:
          description: Name of bank
          maxLength: 50
          type: string
        billingInfo:
          description: Billing info object
          type: string
        ccBrand:
          description: 'Credit card brand description. Visa, Mastercard, Amex, etc..'
          maxLength: 50
          type: string
        ccExpireMonth:
          description: >-
            Credit card expiry month. If payType=Card then this is required as a
            valid numeric field.
          maxLength: 2
          type: string
        ccExpireYear:
          description: >-
            Credit card expiry year. If payType=Card then this is required as a
            valid numeric field.
          maxLength: 4
          type: string
        ccHolderName:
          description: Credit card holder
          maxLength: 255
          type: string
        customer:
          description: >-
            The Customer this wallet is valid for. May be a parent or
            grandparent.
          $ref: '#/components/schemas/Customer'
        isPrimary:
          description: >-
            Flag for primary form of payment. Only one wallet under a customer
            may be primary
          type: boolean
        isSaved:
          description: >-
            If true then owner approved for future use vs false where wallet is
            a one time usage.
                           Wallets marked with isSaved=false will be periodically purged (normally once per day).
                           To list saved wallets for a customer the criteira should normally include isSaved=true
          default: 'true'
          type: boolean
        last4:
          description: Last 4 numbers for account or credit card num
          maxLength: 255
          type: string
        name:
          description: >-
            Assigned by user to name a saved wallet. Defaults to '{payType}
            ending with {last4}'
          maxLength: 50
          type: string
        payType:
          description: Billing info object
          type: string
          enum:
            - ACH
            - Card
            - RD
        routingNum:
          description: Bank routing number
          maxLength: 10
          type: string
        token:
          description: The saved gateway token for this wallet
          maxLength: 255
          type: string
        id:
          type: string
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    GatewayDeclinedProblem:
      description: Invalid data was sent.
      allOf:
        - $ref: '#/components/schemas/Problem'
        - properties:
            responseCode:
              type: string
              description: >-
                The response declined code from the processor. example would be
                202 for insufficient funds.
            processorResponse:
              type: object
              description: >-
                Selected fields from the processor reponse. Will contain
                transactionId.
    Pager:
      type: object
      properties:
        page:
          description: the page number of the data
          type: integer
          example: 1
        total:
          description: the total number of pages
          type: integer
          example: 20
        records:
          description: the total count of items for the query result
          type: integer
          example: 100
        data:
          type: array
    ActivityNote_Create:
      title: ActivityNote
      x-entity: ActivityNote
      type: object
      required:
        - body
      properties:
        body:
          description: The note body
          maxLength: 65535
          type: string
        contentType:
          description: 'plain, html, markdown'
          default: plain
          maxLength: 255
          type: string
    Task_Create:
      title: Task
      x-entity: Task
      type: object
      required:
        - dueDate
        - taskType
      properties:
        completedBy:
          description: The user who completed
          type: integer
          format: int64
        completedDate:
          description: The date it was completed
          type: string
          format: date-time
        docTag:
          description: descriptor
          maxLength: 255
          type: string
        dueDate:
          description: The relative path to the locationKey
          type: string
          format: date-time
        priority:
          description: '10 is Critical, 20 High, 30 Medium, 40 Low'
          type: integer
        state:
          description: Defaults to Open
          type: string
          enum:
            - Open
            - Complete
            - Draft
            - Void
        status:
          description: Defaults to TaskStatus.OPEN
          title: TaskStatus
          type: object
          properties:
            id:
              description: TaskStatus id
              example: 954
              type: integer
              format: int64
        taskType:
          description: The type of the task
          title: TaskType
          type: object
          properties:
            id:
              description: TaskType id
              example: 954
              type: integer
              format: int64
        userId:
          description: >-
            User id who is responsible for making sure this thing is done. null
            means anyone.
          type: integer
          format: int64
    Activity_Create:
      title: Activity
      x-entity: Activity
      type: object
      required:
        - name
        - actDate
        - org
        - attachments
        - contacts
        - links
      properties:
        actDate:
          description: Activity date
          type: string
          format: date-time
        attachments:
          description: the attachments for this item
          type: array
          items:
            title: Attachment
            type: object
            properties:
              id:
                description: Attachment id
                example: 954
                type: integer
                format: int64
        contacts:
          description: The contacts associated with this activity.
          type: array
          items:
            title: Contact
            type: object
            properties:
              id:
                description: Contact id
                example: 954
                type: integer
                format: int64
        kind:
          description: 'The type of the activity, certain kinds are only valid for a Task.'
          default: Note
          type: string
          enum:
            - Note
            - Alert
            - Log
            - Email
            - Todo
            - Call
            - Meeting
        level:
          description: >-
            The priority level generally for an Alert or Log, but can be used
            for other Activity Kinds
          default: Info
          type: string
          enum:
            - Info
            - Urgent
            - Error
            - Warn
            - Resolved
        links:
          description: The entities this is linked to.
          type: array
          items:
            title: ActivityLink
            type: object
            properties:
              id:
                description: ActivityLink id
                example: 954
                type: integer
                format: int64
        mailMessage:
          title: MailMessage
          type: object
          properties:
            id:
              description: MailMessage id
              example: 954
              type: integer
              format: int64
        name:
          description: >-
            The short name or a 255 char string summary of the activity, if note
            it will ends with ... if there is more to the note.
          maxLength: 255
          type: string
        note:
          description: A note for this activity. Name will be built from this
          $ref: '#/components/schemas/ActivityNote_Create'
        org:
          description: The Org this activity belongs to
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        source:
          description: |-
            The source description for where this activity came from.
                           The gorm domain name of the record that generated this such as CollectionStep, Promise
          example: 'Oracle, BankOfAmerica, Lockbox'
          maxLength: 50
          type: string
        sourceId:
          description: >-
            The id from the outside source or of the collection step, promise or
            some future workflow template record that generated this
          example: AR-123-A64
          maxLength: 50
          type: string
        sourceType:
          description: 'Enum, defaults to SourceType.App'
          example: App
          default: App
          type: string
          enum:
            - App
            - Scheduler
            - ERP
            - RestApi
            - PayGateway
        tags:
          description: the tags for this item
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
        task:
          description: The task info if this is a task kind
          $ref: '#/components/schemas/Task_Create'
        visibleId:
          description: The id fo the role or group this is visible to if set to role
          type: integer
          format: int64
        visibleTo:
          description: Who can see this activity. Defaults to Everyone
          default: Everyone
          type: string
          enum:
            - Company
            - Everyone
            - Owner
            - Role
    ActivityLink:
      title: ActivityLink
      x-entity: ActivityLink
      type: object
      required:
        - linkedId
        - linkedEntity
      properties:
        linkedEntity:
          description: The simple class name of the linked entity
          example: ArTran
          maxLength: 255
          type: string
        linkedId:
          description: the id of the entity this tag is linked to
          example: '954'
          type: integer
          format: int64
    MailMessage:
      title: MailMessage
      x-entity: MailMessage
      type: object
      required:
        - sendTo
        - state
      properties:
        attachmentIds:
          description: ids list of attachments
          type: array
          items:
            type: integer
            format: int64
        bcc:
          description: bcc addys
          maxLength: 1000
          type: string
        body:
          description: body of message
          maxLength: 65535
          type: string
        cc:
          description: 'cc addys, see `sendTo` for format'
          maxLength: 1000
          type: string
        contentType:
          type: string
          enum:
            - plain
            - html
            - markdown
        inlineIds:
          description: Attachment ids with inline disposition.
          type: array
          items:
            type: integer
            format: int64
        messageId:
          description: >-
            When using something like mailgun this is the id returned from the
            send submit
          maxLength: 255
          type: string
        msgResponse:
          description: >-
            The last response or error message from the mail processor when
            availiable.
          maxLength: 2000
          type: string
        replyTo:
          description: what to show for replyTo in email
          maxLength: 255
          type: string
        sendDate:
          description: 'The send datetime, always in Zulu to match server time'
          type: string
          format: date-time
        sendFrom:
          description: who its from
          maxLength: 255
          type: string
        sendTo:
          description: >

            Email address of the recipient(s). RFC standard email format comma
            seperated with name in quotes and email in < .. >.
          example: '"Blow, Joe" <joe@joes.com>, john@galt.com'
          maxLength: 1000
          type: string
        source:
          description: any special source indicator
          maxLength: 255
          type: string
        state:
          description: the state of the message
          type: string
          enum:
            - Queued
            - Sent
            - Delivered
            - Opened
            - Complained
            - Error
            - Failed
        subject:
          description: email message subject
          maxLength: 1000
          type: string
        tags:
          type: array
          items:
            type: string
        id:
          type: string
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ActivityNote:
      title: ActivityNote
      x-entity: ActivityNote
      type: object
      required:
        - body
      properties:
        body:
          description: The note body
          maxLength: 65535
          type: string
        contentType:
          description: 'plain, html, markdown'
          default: plain
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    TaskStatus:
      title: TaskStatus
      x-entity: TaskStatus
      type: object
      required:
        - name
        - code
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        state:
          description: The task state this status assigns
          default: Open
          type: string
          enum:
            - Open
            - Complete
            - Draft
            - Void
        validForAr:
          type: boolean
        validForCall:
          type: boolean
        validForEmail:
          type: boolean
        validForFax:
          type: boolean
        validForMeeting:
          type: boolean
        validForParcel:
          type: boolean
        validForSales:
          type: boolean
        validForTask:
          type: boolean
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    TaskType:
      title: TaskType
      x-entity: TaskType
      type: object
      required:
        - name
        - code
        - kind
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        kind:
          type: string
          enum:
            - Note
            - Alert
            - Log
            - Email
            - Todo
            - Call
            - Meeting
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        validForAr:
          type: boolean
        validForSales:
          type: boolean
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Task:
      title: Task
      x-entity: Task
      type: object
      required:
        - dueDate
        - taskType
      properties:
        completedBy:
          description: The user who completed
          type: integer
          format: int64
        completedDate:
          description: The date it was completed
          type: string
          format: date-time
        docTag:
          description: descriptor
          maxLength: 255
          type: string
        dueDate:
          description: The relative path to the locationKey
          type: string
          format: date-time
        priority:
          description: '10 is Critical, 20 High, 30 Medium, 40 Low'
          type: integer
        state:
          description: Defaults to Open
          type: string
          enum:
            - Open
            - Complete
            - Draft
            - Void
        status:
          description: Defaults to TaskStatus.OPEN
          $ref: '#/components/schemas/TaskStatus'
        taskType:
          description: The type of the task
          $ref: '#/components/schemas/TaskType'
        userId:
          description: >-
            User id who is responsible for making sure this thing is done. null
            means anyone.
          type: integer
          format: int64
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Activity:
      title: Activity
      x-entity: Activity
      type: object
      required:
        - name
        - actDate
        - org
        - attachments
        - contacts
        - links
      properties:
        actDate:
          description: Activity date
          type: string
          format: date-time
        attachments:
          description: the attachments for this item
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        contacts:
          description: The contacts associated with this activity.
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        kind:
          description: 'The type of the activity, certain kinds are only valid for a Task.'
          default: Note
          type: string
          enum:
            - Note
            - Alert
            - Log
            - Email
            - Todo
            - Call
            - Meeting
        level:
          description: >-
            The priority level generally for an Alert or Log, but can be used
            for other Activity Kinds
          default: Info
          type: string
          enum:
            - Info
            - Urgent
            - Error
            - Warn
            - Resolved
        links:
          description: The entities this is linked to.
          type: array
          items:
            $ref: '#/components/schemas/ActivityLink'
        mailMessage:
          $ref: '#/components/schemas/MailMessage'
        name:
          description: >-
            The short name or a 255 char string summary of the activity, if note
            it will ends with ... if there is more to the note.
          maxLength: 255
          type: string
        note:
          description: A note for this activity. Name will be built from this
          $ref: '#/components/schemas/ActivityNote'
        org:
          description: The Org this activity belongs to
          $ref: '#/components/schemas/Org'
        source:
          description: |-
            The source description for where this activity came from.
                           The gorm domain name of the record that generated this such as CollectionStep, Promise
          example: 'Oracle, BankOfAmerica, Lockbox'
          maxLength: 50
          type: string
        sourceId:
          description: >-
            The id from the outside source or of the collection step, promise or
            some future workflow template record that generated this
          example: AR-123-A64
          maxLength: 50
          type: string
        sourceType:
          description: 'Enum, defaults to SourceType.App'
          example: App
          default: App
          type: string
          enum:
            - App
            - Scheduler
            - ERP
            - RestApi
            - PayGateway
        tags:
          description: the tags for this item
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        task:
          description: The task info if this is a task kind
          $ref: '#/components/schemas/Task'
        visibleId:
          description: The id fo the role or group this is visible to if set to role
          type: integer
          format: int64
        visibleTo:
          description: Who can see this activity. Defaults to Everyone
          default: Everyone
          type: string
          enum:
            - Company
            - Everyone
            - Owner
            - Role
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ActivityNote_Update:
      title: ActivityNote
      x-entity: ActivityNote
      type: object
      required:
        - body
      properties:
        body:
          description: The note body
          maxLength: 65535
          type: string
        contentType:
          description: 'plain, html, markdown'
          default: plain
          maxLength: 255
          type: string
    Task_Update:
      title: Task
      x-entity: Task
      type: object
      required:
        - dueDate
        - taskType
      properties:
        completedBy:
          description: The user who completed
          type: integer
          format: int64
        completedDate:
          description: The date it was completed
          type: string
          format: date-time
        docTag:
          description: descriptor
          maxLength: 255
          type: string
        dueDate:
          description: The relative path to the locationKey
          type: string
          format: date-time
        priority:
          description: '10 is Critical, 20 High, 30 Medium, 40 Low'
          type: integer
        state:
          description: Defaults to Open
          type: string
          enum:
            - Open
            - Complete
            - Draft
            - Void
        status:
          description: Defaults to TaskStatus.OPEN
          title: TaskStatus
          type: object
          properties:
            id:
              description: TaskStatus id
              example: 954
              type: integer
              format: int64
        taskType:
          description: The type of the task
          title: TaskType
          type: object
          properties:
            id:
              description: TaskType id
              example: 954
              type: integer
              format: int64
        userId:
          description: >-
            User id who is responsible for making sure this thing is done. null
            means anyone.
          type: integer
          format: int64
    Activity_Update:
      title: Activity
      x-entity: Activity
      type: object
      required:
        - name
        - org
        - attachments
        - contacts
        - links
      properties:
        attachments:
          description: the attachments for this item
          type: array
          items:
            title: Attachment
            type: object
            properties:
              id:
                description: Attachment id
                example: 954
                type: integer
                format: int64
        contacts:
          description: The contacts associated with this activity.
          type: array
          items:
            title: Contact
            type: object
            properties:
              id:
                description: Contact id
                example: 954
                type: integer
                format: int64
        kind:
          description: 'The type of the activity, certain kinds are only valid for a Task.'
          default: Note
          type: string
          enum:
            - Note
            - Alert
            - Log
            - Email
            - Todo
            - Call
            - Meeting
        level:
          description: >-
            The priority level generally for an Alert or Log, but can be used
            for other Activity Kinds
          default: Info
          type: string
          enum:
            - Info
            - Urgent
            - Error
            - Warn
            - Resolved
        links:
          description: The entities this is linked to.
          type: array
          items:
            title: ActivityLink
            type: object
            properties:
              id:
                description: ActivityLink id
                example: 954
                type: integer
                format: int64
        mailMessage:
          title: MailMessage
          type: object
          properties:
            id:
              description: MailMessage id
              example: 954
              type: integer
              format: int64
        name:
          description: >-
            The short name or a 255 char string summary of the activity, if note
            it will ends with ... if there is more to the note.
          maxLength: 255
          type: string
        note:
          description: A note for this activity. Name will be built from this
          $ref: '#/components/schemas/ActivityNote_Update'
        org:
          description: The Org this activity belongs to
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        source:
          description: |-
            The source description for where this activity came from.
                           The gorm domain name of the record that generated this such as CollectionStep, Promise
          example: 'Oracle, BankOfAmerica, Lockbox'
          maxLength: 50
          type: string
        sourceId:
          description: >-
            The id from the outside source or of the collection step, promise or
            some future workflow template record that generated this
          example: AR-123-A64
          maxLength: 50
          type: string
        sourceType:
          description: 'Enum, defaults to SourceType.App'
          example: App
          default: App
          type: string
          enum:
            - App
            - Scheduler
            - ERP
            - RestApi
            - PayGateway
        tags:
          description: the tags for this item
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
        task:
          description: The task info if this is a task kind
          $ref: '#/components/schemas/Task_Update'
        visibleId:
          description: The id fo the role or group this is visible to if set to role
          type: integer
          format: int64
        visibleTo:
          description: Who can see this activity. Defaults to Everyone
          default: Everyone
          type: string
          enum:
            - Company
            - Everyone
            - Owner
            - Role
    AppParam:
      title: AppParam
      x-entity: AppParam
      type: object
      required:
        - variable
      properties:
        companyId:
          type: integer
          format: int64
        value:
          description: The value
          maxLength: 50
          type: string
        variable:
          description: 'Parameter config prop name, unique'
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    AppParam_Update:
      title: AppParam
      x-entity: AppParam
      type: object
      required:
        - variable
      properties:
        companyId:
          type: integer
          format: int64
        value:
          description: The value
          maxLength: 50
          type: string
        variable:
          description: 'Parameter config prop name, unique'
          maxLength: 50
          type: string
    Attachment_Update:
      title: Attachment
      x-entity: Attachment
      type: object
      required:
        - name
      properties:
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        extension:
          description: >-
            The extension the file should have. Pulled from the name if not set.
            Helps dictate the mime-type
          example: pdf
          maxLength: 255
          type: string
        kind:
          description: The kind of attachment
          example: Activity
          type: string
          enum:
            - Activity
            - Collection
            - Invoice
            - Report
        locationKey:
          description: >-
            Defaults to attachments.location but can be changed to another key
            such as creditFiles.location
          example: attachments.location
          maxLength: 255
          type: string
        mimeType:
          description: The mime type of the file. Will be pulled from the names extension
          example: application/pdf
          maxLength: 255
          type: string
        name:
          description: >-
            This should be the file display name without dir; foo.txt, bar.pdf,
            etc.

            Populated from originalFileName when using a multiPart upload.

            Location has the relative path and unique name on system. Use
            description for any other useful info
          maxLength: 100
          type: string
        source:
          description: A source description if this is synced from another system
          maxLength: 50
          type: string
        subject:
          description: >-
            Optional value for a email template or collectionStep this is the
            generally the subject of an email or fax cover page.
          example: Customer
          maxLength: 255
          type: string
        tags:
          description: the tags for this item
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
    Company_Create:
      title: Company
      x-entity: Company
      type: object
      required:
        - name
        - num
      properties:
        name:
          description: Full name for this company
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this entity
          maxLength: 50
          type: string
        org:
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    Company:
      title: Company
      x-entity: Company
      type: object
      required:
        - name
        - num
      properties:
        name:
          description: Full name for this company
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this entity
          maxLength: 50
          type: string
        org:
          $ref: '#/components/schemas/Org'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Company_Update:
      title: Company
      x-entity: Company
      type: object
      required:
        - name
        - num
      properties:
        name:
          description: Full name for this company
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this entity
          maxLength: 50
          type: string
        org:
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    ContactEmail_Create:
      title: ContactEmail
      x-entity: ContactEmail
      type: object
      required:
        - address
      properties:
        address:
          description: The email addy
          maxLength: 255
          type: string
        contact:
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        isPrimary:
          description: If this is the contacts primary email
          type: boolean
        kind:
          description: future use
          maxLength: 50
          type: string
    ContactFlex_Create:
      title: ContactFlex
      x-entity: ContactFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    ContactPhone_Create:
      title: ContactPhone
      x-entity: ContactPhone
      type: object
      properties:
        contact:
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        isPrimary:
          description: if this is the contacts primary number
          type: boolean
        kind:
          description: future use
          maxLength: 50
          type: string
        num:
          description: future use
          maxLength: 255
          type: string
    Contact_Create:
      title: Contact
      x-entity: Contact
      type: object
      required:
        - firstName
        - name
        - orgId
      properties:
        altName:
          description: 'Alternate name, nickname or job name'
          maxLength: 255
          type: string
        comments:
          description: Notes about the contact
          maxLength: 255
          type: string
        email:
          description: Default email
          maxLength: 255
          format: email
          type: string
        emails:
          type: array
          items:
            $ref: '#/components/schemas/ContactEmail_Create'
        firstName:
          description: First name
          maxLength: 50
          type: string
        flex:
          description: Custom user fields for this contact
          $ref: '#/components/schemas/ContactFlex_Create'
        inactive:
          description: True when not active
          type: boolean
        isPrimary:
          description: >
            Set to true is this should this be set as the primary contact for
            the Org.

            Not persisted to the data store, this only serves as an instruction
            command when creating or updating a contact.

            If the Org already has a primary contact set then this contact will
            be set as the new primary leaving the old primary contact as

            a normal contact.
          type: boolean
        jobTitle:
          description: Job title
          maxLength: 50
          type: string
        lastName:
          description: Last name
          maxLength: 50
          type: string
        location:
          description: Default location
          title: Location
          type: object
          properties:
            id:
              description: Location id
              example: 954
              type: integer
              format: int64
        name:
          description: 'Name of Contact, joined using firstName + lastName'
          maxLength: 50
          type: string
        num:
          description: 'num, used for job or organization type contacts'
          maxLength: 50
          type: string
        org:
          description: The organization this contact belongs to
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        orgId:
          description: The org id for the contact
          type: integer
          format: int64
        phone:
          description: Default phone
          maxLength: 255
          type: string
        phones:
          type: array
          items:
            $ref: '#/components/schemas/ContactPhone_Create'
        source:
          description: Originator source info
          title: ContactSource
          type: object
          properties:
            source:
              type: string
            sourceType:
              type: string
            sourceId:
              type: string
        tagForReminders:
          description: If this contact should get correspondence
          type: boolean
        tags:
          description: the tags for this item
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
        user:
          description: The user if this contact is able to login
          title: AppUser
          type: object
          properties:
            id:
              description: AppUser id
              example: 954
              type: integer
              format: int64
    ContactEmail_Update:
      title: ContactEmail
      x-entity: ContactEmail
      type: object
      required:
        - address
      properties:
        address:
          description: The email addy
          maxLength: 255
          type: string
        contact:
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        isPrimary:
          description: If this is the contacts primary email
          type: boolean
        kind:
          description: future use
          maxLength: 50
          type: string
    ContactFlex_Update:
      title: ContactFlex
      x-entity: ContactFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    ContactPhone_Update:
      title: ContactPhone
      x-entity: ContactPhone
      type: object
      properties:
        contact:
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        isPrimary:
          description: if this is the contacts primary number
          type: boolean
        kind:
          description: future use
          maxLength: 50
          type: string
        num:
          description: future use
          maxLength: 255
          type: string
    Contact_Update:
      title: Contact
      x-entity: Contact
      type: object
      required:
        - firstName
        - name
        - orgId
      properties:
        altName:
          description: 'Alternate name, nickname or job name'
          maxLength: 255
          type: string
        comments:
          description: Notes about the contact
          maxLength: 255
          type: string
        email:
          description: Default email
          maxLength: 255
          format: email
          type: string
        emails:
          type: array
          items:
            $ref: '#/components/schemas/ContactEmail_Update'
        firstName:
          description: First name
          maxLength: 50
          type: string
        flex:
          description: Custom user fields for this contact
          $ref: '#/components/schemas/ContactFlex_Update'
        inactive:
          description: True when not active
          type: boolean
        isPrimary:
          description: >
            Set to true is this should this be set as the primary contact for
            the Org.

            Not persisted to the data store, this only serves as an instruction
            command when creating or updating a contact.

            If the Org already has a primary contact set then this contact will
            be set as the new primary leaving the old primary contact as

            a normal contact.
          type: boolean
        jobTitle:
          description: Job title
          maxLength: 50
          type: string
        lastName:
          description: Last name
          maxLength: 50
          type: string
        location:
          description: Default location
          title: Location
          type: object
          properties:
            id:
              description: Location id
              example: 954
              type: integer
              format: int64
        name:
          description: 'Name of Contact, joined using firstName + lastName'
          maxLength: 50
          type: string
        num:
          description: 'num, used for job or organization type contacts'
          maxLength: 50
          type: string
        org:
          description: The organization this contact belongs to
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        orgId:
          description: The org id for the contact
          type: integer
          format: int64
        phone:
          description: Default phone
          maxLength: 255
          type: string
        phones:
          type: array
          items:
            $ref: '#/components/schemas/ContactPhone_Update'
        source:
          description: Originator source info
          title: ContactSource
          type: object
          properties:
            id:
              description: ContactSource id
              example: 954
              type: integer
              format: int64
        tagForReminders:
          description: If this contact should get correspondence
          type: boolean
        tags:
          description: the tags for this item
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
        user:
          description: The user if this contact is able to login
          title: AppUser
          type: object
          properties:
            id:
              description: AppUser id
              example: 954
              type: integer
              format: int64
    OrgFlex_Create:
      title: OrgFlex
      x-entity: OrgFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    OrgInfo_Create:
      title: OrgInfo
      x-entity: OrgInfo
      type: object
      properties:
        fax:
          description: primary fax
          maxLength: 255
          type: string
        phone:
          description: 'primary hq number, switchboard'
          maxLength: 255
          type: string
        website:
          description: website home page
          maxLength: 255
          type: string
    Location_Create:
      title: Location
      x-entity: Location
      type: object
      required:
        - orgId
      properties:
        address3:
          maxLength: 100
          type: string
        address4:
          maxLength: 100
          type: string
        city:
          maxLength: 100
          type: string
        contact:
          description: The contact this belongs to
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        country:
          maxLength: 3
          type: string
        county:
          maxLength: 50
          type: string
        kind:
          description: The address type
          type: string
          enum:
            - work
            - home
            - other
            - mailing
            - remittance
            - physical
        name:
          description: 'A descriptive name, can be used for reports an letters'
          maxLength: 255
          type: string
        org:
          description: The organization this belongs to
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        orgId:
          description: The org id for this
          type: integer
          format: int64
        state:
          maxLength: 25
          type: string
        street1:
          maxLength: 100
          type: string
        street2:
          maxLength: 100
          type: string
        zipCode:
          maxLength: 50
          type: string
    OrgMember_Create:
      title: OrgMember
      x-entity: OrgMember
      type: object
      properties:
        branch:
          description: The branch for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
            num:
              type: string
        business:
          description: The business for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
            num:
              type: string
        company:
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        division:
          description: The division for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
            num:
              type: string
        factory:
          description: The factory for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
            num:
              type: string
        region:
          description: The region for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
            num:
              type: string
        sales:
          description: The sales for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
            num:
              type: string
    Org_Create:
      title: Org
      x-entity: Org
      type: object
      required:
        - name
        - type
        - num
      properties:
        comments:
          description: A user visible comment
          example: Lorem ipsum
          maxLength: 255
          type: string
        companyId:
          description: Company id this org belongs to
          example: '2'
          type: integer
          format: int64
        contact:
          description: The default or key Contact for this organization
          $ref: '#/components/schemas/Contact_Create'
        flex:
          description: User flex fields
          $ref: '#/components/schemas/OrgFlex_Create'
        inactive:
          description: indicator for an Org that is no longer active
          type: boolean
        info:
          description: Info such as phone and website for an organization
          $ref: '#/components/schemas/OrgInfo_Create'
        location:
          description: The primary organization address info
          $ref: '#/components/schemas/Location_Create'
        locations:
          description: List of locations
          type: array
          items:
            title: Location
            type: object
            properties:
              id:
                description: Location id
                example: 954
                type: integer
                format: int64
        member:
          description: Dimension hierarchy fields
          $ref: '#/components/schemas/OrgMember_Create'
        name:
          description: The full name for this organization
          example: SpaceX Corp.
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this organization
          example: SPX-321
          maxLength: 50
          type: string
        orgTypeId:
          type: integer
          format: int64
        source:
          description: 'Originator source info, used when this is sourced externally'
          title: OrgSource
          type: object
          properties:
            source:
              type: string
            sourceType:
              type: string
            sourceId:
              type: string
        tags:
          description: the tags for this item
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
        type:
          description: The type of org
          example: Customer
          type: string
          enum:
            - Customer
            - CustAccount
            - Branch
            - Division
            - Business
            - Company
            - Prospect
            - Sales
            - Client
            - Factory
            - Region
    OrgFlex_Update:
      title: OrgFlex
      x-entity: OrgFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    OrgInfo_Update:
      title: OrgInfo
      x-entity: OrgInfo
      type: object
      properties:
        fax:
          description: primary fax
          maxLength: 255
          type: string
        phone:
          description: 'primary hq number, switchboard'
          maxLength: 255
          type: string
        website:
          description: website home page
          maxLength: 255
          type: string
    Location_Update:
      title: Location
      x-entity: Location
      type: object
      required:
        - orgId
      properties:
        address3:
          maxLength: 100
          type: string
        address4:
          maxLength: 100
          type: string
        city:
          maxLength: 100
          type: string
        contact:
          description: The contact this belongs to
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        country:
          maxLength: 3
          type: string
        county:
          maxLength: 50
          type: string
        kind:
          description: The address type
          type: string
          enum:
            - work
            - home
            - other
            - mailing
            - remittance
            - physical
        name:
          description: 'A descriptive name, can be used for reports an letters'
          maxLength: 255
          type: string
        org:
          description: The organization this belongs to
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        orgId:
          description: The org id for this
          type: integer
          format: int64
        state:
          maxLength: 25
          type: string
        street1:
          maxLength: 100
          type: string
        street2:
          maxLength: 100
          type: string
        zipCode:
          maxLength: 50
          type: string
    OrgMember_Update:
      title: OrgMember
      x-entity: OrgMember
      type: object
      properties:
        branch:
          description: The branch for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        business:
          description: The business for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        company:
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        division:
          description: The division for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        factory:
          description: The factory for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        region:
          description: The region for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        sales:
          description: The sales for the Org
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    Org_Update:
      title: Org
      x-entity: Org
      type: object
      required:
        - name
        - type
        - num
      properties:
        comments:
          description: A user visible comment
          example: Lorem ipsum
          maxLength: 255
          type: string
        companyId:
          description: Company id this org belongs to
          example: '2'
          type: integer
          format: int64
        contact:
          description: The default or key Contact for this organization
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        flex:
          description: User flex fields
          $ref: '#/components/schemas/OrgFlex_Update'
        inactive:
          description: indicator for an Org that is no longer active
          type: boolean
        info:
          description: Info such as phone and website for an organization
          $ref: '#/components/schemas/OrgInfo_Update'
        location:
          description: The primary organization address info
          $ref: '#/components/schemas/Location_Update'
        locations:
          description: List of locations
          type: array
          items:
            title: Location
            type: object
            properties:
              id:
                description: Location id
                example: 954
                type: integer
                format: int64
        member:
          description: Dimension hierarchy fields
          $ref: '#/components/schemas/OrgMember_Update'
        name:
          description: The full name for this organization
          example: SpaceX Corp.
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this organization
          example: SPX-321
          maxLength: 50
          type: string
        orgTypeId:
          type: integer
          format: int64
        source:
          description: 'Originator source info, used when this is sourced externally'
          title: OrgSource
          type: object
          properties:
            id:
              description: OrgSource id
              example: 954
              type: integer
              format: int64
        tags:
          description: the tags for this item
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
        type:
          description: The type of org
          example: Customer
          type: string
          enum:
            - Customer
            - CustAccount
            - Branch
            - Division
            - Business
            - Company
            - Prospect
            - Sales
            - Client
            - Factory
            - Region
    OrgTypeSetup:
      title: OrgTypeSetup
      x-entity: OrgTypeSetup
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        inactive:
          type: boolean
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    OrgTypeSetup_Update:
      title: OrgTypeSetup
      x-entity: OrgTypeSetup
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        inactive:
          type: boolean
        name:
          description: The name for this entity
          maxLength: 50
          type: string
    PartitionOrg_Create:
      title: PartitionOrg
      x-entity: PartitionOrg
      type: object
      required:
        - name
        - num
      properties:
        name:
          description: The full name for this organization
          example: SpaceX Corp.
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this organization
          example: SPX-321
          maxLength: 50
          type: string
        org:
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    PartitionOrg_Update:
      title: PartitionOrg
      x-entity: PartitionOrg
      type: object
      required:
        - name
        - num
      properties:
        name:
          description: The full name for this organization
          example: SpaceX Corp.
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this organization
          example: SPX-321
          maxLength: 50
          type: string
        org:
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    SecRoleUser_Create:
      title: SecRoleUser
      x-entity: SecRoleUser
      type: object
      properties:
        role:
          description: The role for the user
          title: SecRole
          type: object
          properties:
            id:
              description: SecRole id
              example: 954
              type: integer
              format: int64
        roleId:
          description: The role id
          type: string
        user:
          description: The user for the role
          title: AppUser
          type: object
          properties:
            id:
              description: AppUser id
              example: 954
              type: integer
              format: int64
        userId:
          description: The user id to assign the role
          type: string
    SecRoleUser:
      title: SecRoleUser
      x-entity: SecRoleUser
      type: object
      properties:
        role:
          description: The role for the user
          $ref: '#/components/schemas/SecRole'
        roleId:
          description: The role id
          type: string
        user:
          description: The user for the role
          $ref: '#/components/schemas/AppUser'
        userId:
          description: The user id to assign the role
          type: string
    Tag_Create:
      title: Tag
      x-entity: Tag
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this tag
          maxLength: 255
          type: string
        entityName:
          description: >-
            The entity this tag can be applied to. May be a comma sep list of
            entity names
          maxLength: 255
          type: string
        name:
          description: The name of tag
          maxLength: 50
          type: string
    Tag_Update:
      title: Tag
      x-entity: Tag
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this tag
          maxLength: 255
          type: string
        entityName:
          description: >-
            The entity this tag can be applied to. May be a comma sep list of
            entity names
          maxLength: 255
          type: string
        name:
          description: The name of tag
          maxLength: 50
          type: string
    AppUser_Create:
      title: AppUser
      x-entity: AppUser
      type: object
      required:
        - username
        - email
        - secRoles
      properties:
        email:
          description: The email
          maxLength: 255
          format: email
          type: string
        name:
          description: >-
            The full name, may come from contact, will default to username if
            not populated
          maxLength: 50
          type: string
        password:
          description: The pwd
          maxLength: 255
          type: string
        secRoles:
          description: The roles assigned to this user
          type: array
          items:
            title: SecRole
            type: object
            properties:
              id:
                description: SecRole id
                example: 954
                type: integer
                format: int64
        username:
          description: >
            The unique user name, also known as your handle –– what you put
            after the “@” symbol ala github or twitter

            to mention others in comments or notes. appears in your profile URL.
            username is used to log in to your account,

            and is visible when sending and receiving. All lowercase and no
            spaces or special characters.
          maxLength: 50
          type: string
    AppUser_Update:
      title: AppUser
      x-entity: AppUser
      type: object
      required:
        - username
        - email
        - secRoles
      properties:
        email:
          description: The email
          maxLength: 255
          format: email
          type: string
        name:
          description: >-
            The full name, may come from contact, will default to username if
            not populated
          maxLength: 50
          type: string
        password:
          description: The pwd
          maxLength: 255
          type: string
        secRoles:
          description: The roles assigned to this user
          type: array
          items:
            title: SecRole
            type: object
            properties:
              id:
                description: SecRole id
                example: 954
                type: integer
                format: int64
        username:
          description: >
            The unique user name, also known as your handle –– what you put
            after the “@” symbol ala github or twitter

            to mention others in comments or notes. appears in your profile URL.
            username is used to log in to your account,

            and is visible when sending and receiving. All lowercase and no
            spaces or special characters.
          maxLength: 50
          type: string
    ArAdjustLine_Create:
      title: ArAdjustLine
      x-entity: ArAdjustLine
      type: object
      required:
        - arTran
        - amount
        - arAdjust
      properties:
        amount:
          description: The amount adjusted
          type: number
          format: money
        arAdjust:
          description: The arAdjust this line belongs to
          title: ArAdjust
          type: object
          properties:
            id:
              description: ArAdjust id
              example: 954
              type: integer
              format: int64
        arTran:
          description: The tran that was adjusted
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        discAmount:
          description: The discount amount taken during adjustment
          type: number
          format: money
        isOriginator:
          description: Flag that arTran was cerated/originated with this ArAdjustLine
          type: boolean
    ArAdjust_Create:
      title: ArAdjust
      x-entity: ArAdjust
      type: object
      required:
        - glPostDate
        - arTran
        - glPostPeriod
        - amount
        - lines
      properties:
        amount:
          description: >-
            Total amount of adjustment. Will equal the sum of the lines amount
            not including discount
          type: number
          format: money
        arBatch:
          description: >-
            The arbatch that this was created under, can be null if it came from
            ERP with rest api
          title: ArBatch
          type: object
          properties:
            id:
              description: ArBatch id
              example: 954
              type: integer
              format: int64
        arPostDate:
          description: The arPostDate
          type: string
          format: date
        arTran:
          description: Payment or credit to apply this is the "adjuster"
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        glPostBatch:
          description: >-
            GlBatch that was created in posting to GlJournal process. Always the
            same as ArdjustJournal.glBatch
          title: GlBatch
          type: object
          properties:
            id:
              description: GlBatch id
              example: 954
              type: integer
              format: int64
        glPostDate:
          description: The gl posting date
          type: string
          format: date
        glPostPeriod:
          description: The gl posting period
          maxLength: 7
          type: string
        jobId:
          description: JobId from outApi job that exported arAdjust to ERP
          type: integer
          format: int64
        lines:
          description: List of adjust lines
          type: array
          items:
            $ref: '#/components/schemas/ArAdjustLine_Create'
        reversedJobId:
          description: Special jobId from outApi job assigned only for reversed adjust
          type: integer
          format: int64
        source:
          description: Where this came from
          default: RCM
          type: string
          enum:
            - RCM
            - Autocash
            - ERP
            - FC
            - BDWO
            - iPay
        state:
          description: 'CLOSED=1, VOID=3'
          default: '0'
          type: integer
    ArAdjust_Update:
      title: ArAdjust
      x-entity: ArAdjust
      type: object
      required:
        - glPostDate
        - arTran
        - glPostPeriod
        - amount
        - lines
      properties:
        amount:
          description: >-
            Total amount of adjustment. Will equal the sum of the lines amount
            not including discount
          type: number
          format: money
        arBatch:
          description: >-
            The arbatch that this was created under, can be null if it came from
            ERP with rest api
          title: ArBatch
          type: object
          properties:
            id:
              description: ArBatch id
              example: 954
              type: integer
              format: int64
        arPostDate:
          description: The arPostDate
          type: string
          format: date
        arTran:
          description: Payment or credit to apply this is the "adjuster"
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        glPostBatch:
          description: >-
            GlBatch that was created in posting to GlJournal process. Always the
            same as ArdjustJournal.glBatch
          title: GlBatch
          type: object
          properties:
            id:
              description: GlBatch id
              example: 954
              type: integer
              format: int64
        glPostDate:
          description: The gl posting date
          type: string
          format: date
        glPostPeriod:
          description: The gl posting period
          maxLength: 7
          type: string
        jobId:
          description: JobId from outApi job that exported arAdjust to ERP
          type: integer
          format: int64
        lines:
          description: List of adjust lines
          type: array
          items:
            title: ArAdjustLine
            type: object
            properties:
              id:
                description: ArAdjustLine id
                example: 954
                type: integer
                format: int64
        reversedJobId:
          description: Special jobId from outApi job assigned only for reversed adjust
          type: integer
          format: int64
        source:
          description: Where this came from
          default: RCM
          type: string
          enum:
            - RCM
            - Autocash
            - ERP
            - FC
            - BDWO
            - iPay
        state:
          description: 'CLOSED=1, VOID=3'
          default: '0'
          type: integer
    ArAdjustJournal_Create:
      title: ArAdjustJournal
      x-entity: ArAdjustJournal
      type: object
      required:
        - glAcct
        - credit
        - debit
        - arAdjust
      properties:
        arAdjust:
          description: ArAdjust this journal entry came to
          title: ArAdjust
          type: object
          properties:
            id:
              description: ArAdjust id
              example: 954
              type: integer
              format: int64
        arAdjustLine:
          description: ArAdjustLine if journal entry is from arAdjustLine
          title: ArAdjustLine
          type: object
          properties:
            id:
              description: ArAdjustLine id
              example: 954
              type: integer
              format: int64
        credit:
          description: Credit amount
          type: number
          format: money
        debit:
          description: Debit amount
          type: number
          format: money
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        glPostBatch:
          description: >-
            Gl Batch it was posted to GL with, if null then it has not been
            posted to GL yet
          title: GlBatch
          type: object
          properties:
            id:
              description: GlBatch id
              example: 954
              type: integer
              format: int64
    ArAdjustJournal:
      title: ArAdjustJournal
      x-entity: ArAdjustJournal
      type: object
      required:
        - glAcct
        - credit
        - debit
        - arAdjust
      properties:
        arAdjust:
          description: ArAdjust this journal entry came to
          $ref: '#/components/schemas/ArAdjust'
        arAdjustLine:
          description: ArAdjustLine if journal entry is from arAdjustLine
          $ref: '#/components/schemas/ArAdjustLine'
        credit:
          description: Credit amount
          type: number
          format: money
        debit:
          description: Debit amount
          type: number
          format: money
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        glPostBatch:
          description: >-
            Gl Batch it was posted to GL with, if null then it has not been
            posted to GL yet
          $ref: '#/components/schemas/GlBatch'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
    ArAdjustJournal_Update:
      title: ArAdjustJournal
      x-entity: ArAdjustJournal
      type: object
      required:
        - glAcct
        - credit
        - debit
        - arAdjust
      properties:
        arAdjust:
          description: ArAdjust this journal entry came to
          title: ArAdjust
          type: object
          properties:
            id:
              description: ArAdjust id
              example: 954
              type: integer
              format: int64
        arAdjustLine:
          description: ArAdjustLine if journal entry is from arAdjustLine
          title: ArAdjustLine
          type: object
          properties:
            id:
              description: ArAdjustLine id
              example: 954
              type: integer
              format: int64
        credit:
          description: Credit amount
          type: number
          format: money
        debit:
          description: Debit amount
          type: number
          format: money
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        glPostBatch:
          description: >-
            Gl Batch it was posted to GL with, if null then it has not been
            posted to GL yet
          title: GlBatch
          type: object
          properties:
            id:
              description: GlBatch id
              example: 954
              type: integer
              format: int64
    ArAdjustLine_Update:
      title: ArAdjustLine
      x-entity: ArAdjustLine
      type: object
      required:
        - arTran
        - amount
        - arAdjust
      properties:
        amount:
          description: The amount adjusted
          type: number
          format: money
        arAdjust:
          description: The arAdjust this line belongs to
          title: ArAdjust
          type: object
          properties:
            id:
              description: ArAdjust id
              example: 954
              type: integer
              format: int64
        arTran:
          description: The tran that was adjusted
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        discAmount:
          description: The discount amount taken during adjustment
          type: number
          format: money
        isOriginator:
          description: Flag that arTran was cerated/originated with this ArAdjustLine
          type: boolean
    ArAgingBucketSetup:
      title: ArAgingBucketSetup
      x-entity: ArAgingBucketSetup
      type: object
      required:
        - code
        - name
        - description
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: 'Used for column headers, labels'
          example: 1-30
          maxLength: 255
          type: string
        endDay:
          description: >-
            number of days (to be less than) from dueDate to include in the
            aging bucket
          example: '0, 30, 60, 90, 120, 9999'
          type: integer
          format: int64
        isUsed:
          description: If used displayed automatically in filters and columns
          type: boolean
        month:
          description: >-
            Number of months from the dueDate (0 is current month, 1 is future,
            -1 is last month, -2 is two months ago, etc
          example: '-3, -2, -1, -0, 1'
          type: integer
        name:
          description: 'Aging1 .. Aging20, do not change'
          maxLength: 50
          type: string
        startDay:
          description: >-
            number of days  (to be greater than) from dueDate to include in the
            aging bucket
          example: '1, 31, 61, 91, 121'
          type: integer
          format: int64
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    ArAgingBucketSetup_Update:
      title: ArAgingBucketSetup
      x-entity: ArAgingBucketSetup
      type: object
      required:
        - code
        - name
        - description
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: 'Used for column headers, labels'
          example: 1-30
          maxLength: 255
          type: string
        endDay:
          description: >-
            number of days (to be less than) from dueDate to include in the
            aging bucket
          example: '0, 30, 60, 90, 120, 9999'
          type: integer
          format: int64
        isUsed:
          description: If used displayed automatically in filters and columns
          type: boolean
        month:
          description: >-
            Number of months from the dueDate (0 is current month, 1 is future,
            -1 is last month, -2 is two months ago, etc
          example: '-3, -2, -1, -0, 1'
          type: integer
        name:
          description: 'Aging1 .. Aging20, do not change'
          maxLength: 50
          type: string
        startDay:
          description: >-
            number of days  (to be greater than) from dueDate to include in the
            aging bucket
          example: '1, 31, 61, 91, 121'
          type: integer
          format: int64
    Bank_Create:
      title: Bank
      x-entity: Bank
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: 'bank code for ACH, Config and Lockboxes; wells, boa, jpm, usb, citi'
          maxLength: 10
          type: string
        name:
          description: name of the bank
          maxLength: 50
          type: string
    Bank_Update:
      title: Bank
      x-entity: Bank
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: 'bank code for ACH, Config and Lockboxes; wells, boa, jpm, usb, citi'
          maxLength: 10
          type: string
        name:
          description: name of the bank
          maxLength: 50
          type: string
    BankAccount_Create:
      title: BankAccount
      x-entity: BankAccount
      type: object
      required:
        - org
        - code
        - bank
        - name
        - num
      properties:
        bank:
          description: Bank for the account
          title: Bank
          type: object
          properties:
            id:
              description: Bank id
              example: 954
              type: integer
              format: int64
        code:
          description: 'Bank account code, used as primary key'
          maxLength: 10
          type: string
        glAcct:
          description: Gl Account for payments under this batch.
          maxLength: 50
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        num:
          description: 'bank account number, used in ArBatch.lockbox'
          maxLength: 255
          type: string
        org:
          description: >-
            The partition org that this lockbox belongs to, drives the different
            orgs on the ArBatch
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        sourceId:
          description: 'Unique when populated, used for lookups on import keys from bank '
          maxLength: 50
          type: string
        visibleToAutocash:
          description: >-
            Whether this should be shown as an option in the drop down for
            autocash batch
          default: 'false'
          type: boolean
    BankAccount_Update:
      title: BankAccount
      x-entity: BankAccount
      type: object
      required:
        - org
        - code
        - bank
        - name
        - num
      properties:
        bank:
          description: Bank for the account
          title: Bank
          type: object
          properties:
            id:
              description: Bank id
              example: 954
              type: integer
              format: int64
        code:
          description: 'Bank account code, used as primary key'
          maxLength: 10
          type: string
        glAcct:
          description: Gl Account for payments under this batch.
          maxLength: 50
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        num:
          description: 'bank account number, used in ArBatch.lockbox'
          maxLength: 255
          type: string
        org:
          description: >-
            The partition org that this lockbox belongs to, drives the different
            orgs on the ArBatch
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        sourceId:
          description: 'Unique when populated, used for lookups on import keys from bank '
          maxLength: 50
          type: string
        visibleToAutocash:
          description: >-
            Whether this should be shown as an option in the drop down for
            autocash batch
          default: 'false'
          type: boolean
    ArTerm_Create:
      title: ArTerm
      x-entity: ArTerm
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        discountDays:
          description: Number of days discount is valid for from tranDate
          default: '0'
          type: integer
        discountForACH:
          description: Special discount if paid by ACH
          type: number
          format: money
        discountForACHDays:
          description: Number of days discount is valid for if paid by ACH
          type: integer
        discountPercent:
          description: Discount percentage
          default: '0'
          type: number
          format: money
        dueInDays:
          description: Number of days transaction is due from tranDate
          type: integer
        name:
          description: The name for this entity
          maxLength: 50
          type: string
    CustCreditInfo_Create:
      title: CustCreditInfo
      x-entity: CustCreditInfo
      type: object
      properties:
        annualSales:
          type: number
          format: money
        comments1:
          description: Comments 1
          maxLength: 65535
          type: string
        comments2:
          description: Comments 2
          maxLength: 65535
          type: string
        comments3:
          description: Comments 3
          maxLength: 65535
          type: string
        corpGuarExpDate:
          type: string
          format: date
        corpGuarantee:
          type: boolean
        creditApp:
          type: boolean
        creditAppDate:
          type: string
          format: date
        creditClassId:
          type: integer
          format: int64
        creditHoldDate:
          type: string
          format: date
        creditLimit:
          type: number
          format: money
        creditLimit2:
          type: number
          format: money
        creditRating:
          description: Credit Rating
          maxLength: 255
          type: string
        creditScore:
          description: Credit Score
          maxLength: 255
          type: string
        creditStatus:
          description: Credit Status
          maxLength: 255
          type: string
        creditThreshold:
          description: Credit Threshold
          minimum: 0
          type: number
          format: money
        dateOpened:
          type: string
          format: date
        duns:
          description: Dunning
          maxLength: 255
          type: string
        financialsDate:
          type: string
          format: date
        lcExpDate:
          type: string
          format: date
        netWorth:
          type: number
          format: money
        parFinancialsDate:
          type: string
          format: date
        parentNetWorth:
          type: number
          format: money
        peopleEmployed:
          type: integer
          format: int64
        persFinancialsDate:
          type: string
          format: date
        personalGuarantee:
          type: boolean
        personalNetWorth:
          type: number
          format: money
        riskClass:
          description: 'High, Medium or Low'
          maxLength: 255
          type: string
        ticker:
          description: Ticker
          maxLength: 255
          type: string
        uccExpDate:
          type: string
          format: date
        yearStarted:
          type: string
          format: date
    CustAccountLien_Create:
      title: CustAccountLien
      x-entity: CustAccountLien
      type: object
      properties:
        bond:
          description: bond
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        city:
          description: City
          maxLength: 255
          type: string
        contractAmt:
          description: contractAmt
          type: number
          format: money
        contractor:
          description: Contractor Contact domain
          $ref: '#/components/schemas/Contact_Create'
        custJobNum:
          description: customer job num
          maxLength: 255
          type: string
        custPo:
          description: Customer PO
          maxLength: 255
          type: string
        firstShip:
          description: firstShip
          type: string
          format: date
        jobName:
          description: Job name
          maxLength: 255
          type: string
        jobTerms:
          description: Job terms
          maxLength: 255
          type: string
        jobType:
          description: Type of job
          maxLength: 255
          type: string
        lastShip:
          description: lastShip
          type: string
          format: date
        lender:
          description: lender
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        lotNum:
          description: lot number
          maxLength: 255
          type: string
        materialAmt:
          description: materialAmt
          type: number
          format: money
        org:
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        owner:
          description: Owner Contact domain
          $ref: '#/components/schemas/Contact_Create'
        state:
          description: State
          maxLength: 255
          type: string
        street:
          description: Street 1
          maxLength: 255
          type: string
        street2:
          description: Street 2
          maxLength: 255
          type: string
        tenantImprov:
          description: tenantImprov
          type: boolean
        tractNum:
          description: tract number
          maxLength: 255
          type: string
        zipCode:
          description: Zipcode
          maxLength: 255
          type: string
    CustRelated_Create:
      title: CustRelated
      x-entity: CustRelated
      type: object
      properties:
        cashUser:
          description: The user who posted from autocash
          title: AppUser
          type: object
          properties:
            id:
              description: AppUser id
              example: 954
              type: integer
              format: int64
        collector:
          description: Primary collector assigned to this
          title: AppUser
          type: object
          properties:
            id:
              description: AppUser id
              example: 954
              type: integer
              format: int64
        disputeResolver:
          description: The person responsible for the dispute/deduction
          title: AppUser
          type: object
          properties:
            id:
              description: AppUser id
              example: 954
              type: integer
              format: int64
        payFromNum:
          maxLength: 255
          type: string
        salesPerson:
          description: The sales person
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
    CustSetup_Create:
      title: CustSetup
      x-entity: CustSetup
      type: object
      properties:
        arTermsId:
          description: ArTerms Id
          type: integer
          format: int64
        class1:
          description: The CustClass 1
          title: CustClass
          type: object
          properties:
            id:
              description: CustClass id
              example: 954
              type: integer
              format: int64
        class2:
          description: The CustClass 2
          title: CustClass
          type: object
          properties:
            id:
              description: CustClass id
              example: 954
              type: integer
              format: int64
        class3:
          description: The CustClass 3
          title: CustClass
          type: object
          properties:
            id:
              description: CustClass id
              example: 954
              type: integer
              format: int64
        currency:
          description: standard ISO 4217 currency code
          example: USD
          type: string
        deliveryEmail:
          description: >-
            The email to use for statement delivery, comma separated list of
            emails
          maxLength: 255
          type: string
        ediInvoices:
          type: boolean
        emailInvoices:
          type: boolean
        financeChargePct:
          description: >-
            Percentage rate for finance charge. If null of empty then looks in
            ArUsStateRate
          type: number
          format: money
        onlinePayGroupId:
          description: Greenbill payment group
          type: integer
          format: int64
        paperInvoices:
          type: boolean
        recurringPayGroupId:
          description: recurring payment group
          type: integer
          format: int64
        stmtDelivery:
          description: 'How to send the statement - null, Email, Fax, Parcel'
          maxLength: 255
          type: string
        timeZone:
          description: Standard TimeZone
          example: GMT
          type: string
    CustStats_Create:
      title: CustStats
      x-entity: CustStats
      type: object
      properties:
        balanceChangeDate:
          description: Last balance update time
          type: string
          format: date-time
        hasArTransInHistory:
          description: Flag that transactions have been purged to history system
          type: boolean
        historyMessage:
          description: Message to users about transactions moved to history system
          maxLength: 50
          type: string
        lastActBy:
          description: Id of user who had last activity for customer
          type: integer
          format: int64
        lastActDate:
          description: Date of last activity
          type: string
          format: date-time
        lastActId:
          description: Id of last activity
          type: integer
          format: int64
        lastInTran:
          description: Last invoice ArTran
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        lastPaTran:
          description: Last payment ArTran
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        lastShipTran:
          description: Last shipped invoice ArTran
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        nextActDate:
          description: Date of next activity
          type: string
          format: date-time
        nextActId:
          description: Id of next activity
          type: integer
          format: int64
        pastDue:
          description: Past due
          type: number
          format: money
        totalDue:
          description: Total due
          type: number
          format: money
    CustAccount_Create:
      title: CustAccount
      x-entity: CustAccount
      type: object
      required:
        - name
        - customer
        - num
        - arTerms
        - salesReps
      properties:
        arTerms:
          description: List of arTerm
          type: array
          items:
            $ref: '#/components/schemas/ArTerm_Create'
        commentsCollector:
          description: 'Comments for internal collectors only, customer wont see'
          maxLength: 255
          type: string
        creditInfo:
          description: Link to CustCreditInfo domain
          $ref: '#/components/schemas/CustCreditInfo_Create'
        customer:
          description: >
            The Customer this CustAccount belongs to.

            Updating the Customer field is ONLY allowed when there are no
            existing ArTrans (open or closed) for this CustAccount.
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
            num:
              type: string
            sourceId:
              type: string
        inactive:
          description: Is active?
          type: boolean
        isLocationDifferent:
          description: Is Location different from customer
          type: boolean
        lien:
          description: >-
            Link to fiekds associated with materials/construction such as bank,
            contractor, property owner, etc
          $ref: '#/components/schemas/CustAccountLien_Create'
        name:
          description: Full name for this customer
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this entity
          maxLength: 50
          type: string
        org:
          description: >-
            Link to Org fields for this custAccount such as website, phone
            number, fax, etc
          $ref: '#/components/schemas/Org_Create'
        related:
          description: >-
            Link to system fields related to this custAccount such as collector,
            dispute specialist, cash applier, etc
          $ref: '#/components/schemas/CustRelated_Create'
        salesReps:
          description: List of sales reps
          type: array
          items:
            $ref: '#/components/schemas/Contact_Create'
        setup:
          description: >-
            Link to customer setup fileds such as class, statement control,
            finance charge control
          $ref: '#/components/schemas/CustSetup_Create'
        stats:
          description: >-
            Link to dynamic cust account information such as last payment, last
            invoice, etc
          $ref: '#/components/schemas/CustStats_Create'
        tags:
          description: User definable descriptive tage associated with this customer
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
        type:
          description: >-
            User definable field describing custAccout type such as Industial,
            government, secured
          title: CustAccountType
          type: object
          properties:
            id:
              description: CustAccountType id
              example: 954
              type: integer
              format: int64
            code:
              type: string
            name:
              type: string
    CustCreditInfo_Update:
      title: CustCreditInfo
      x-entity: CustCreditInfo
      type: object
      properties:
        annualSales:
          type: number
          format: money
        comments1:
          description: Comments 1
          maxLength: 65535
          type: string
        comments2:
          description: Comments 2
          maxLength: 65535
          type: string
        comments3:
          description: Comments 3
          maxLength: 65535
          type: string
        corpGuarExpDate:
          type: string
          format: date
        corpGuarantee:
          type: boolean
        creditApp:
          type: boolean
        creditAppDate:
          type: string
          format: date
        creditClassId:
          type: integer
          format: int64
        creditHoldDate:
          type: string
          format: date
        creditLimit:
          type: number
          format: money
        creditLimit2:
          type: number
          format: money
        creditRating:
          description: Credit Rating
          maxLength: 255
          type: string
        creditScore:
          description: Credit Score
          maxLength: 255
          type: string
        creditStatus:
          description: Credit Status
          maxLength: 255
          type: string
        creditThreshold:
          description: Credit Threshold
          minimum: 0
          type: number
          format: money
        dateOpened:
          type: string
          format: date
        duns:
          description: Dunning
          maxLength: 255
          type: string
        financialsDate:
          type: string
          format: date
        lcExpDate:
          type: string
          format: date
        netWorth:
          type: number
          format: money
        parFinancialsDate:
          type: string
          format: date
        parentNetWorth:
          type: number
          format: money
        peopleEmployed:
          type: integer
          format: int64
        persFinancialsDate:
          type: string
          format: date
        personalGuarantee:
          type: boolean
        personalNetWorth:
          type: number
          format: money
        riskClass:
          description: 'High, Medium or Low'
          maxLength: 255
          type: string
        ticker:
          description: Ticker
          maxLength: 255
          type: string
        uccExpDate:
          type: string
          format: date
        yearStarted:
          type: string
          format: date
    CustAccountLien_Update:
      title: CustAccountLien
      x-entity: CustAccountLien
      type: object
      properties:
        bond:
          description: bond
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        city:
          description: City
          maxLength: 255
          type: string
        contractAmt:
          description: contractAmt
          type: number
          format: money
        contractor:
          description: Contractor Contact domain
          $ref: '#/components/schemas/Contact_Update'
        custJobNum:
          description: customer job num
          maxLength: 255
          type: string
        custPo:
          description: Customer PO
          maxLength: 255
          type: string
        firstShip:
          description: firstShip
          type: string
          format: date
        jobName:
          description: Job name
          maxLength: 255
          type: string
        jobTerms:
          description: Job terms
          maxLength: 255
          type: string
        jobType:
          description: Type of job
          maxLength: 255
          type: string
        lastShip:
          description: lastShip
          type: string
          format: date
        lender:
          description: lender
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
        lotNum:
          description: lot number
          maxLength: 255
          type: string
        materialAmt:
          description: materialAmt
          type: number
          format: money
        org:
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        owner:
          description: Owner Contact domain
          $ref: '#/components/schemas/Contact_Update'
        state:
          description: State
          maxLength: 255
          type: string
        street:
          description: Street 1
          maxLength: 255
          type: string
        street2:
          description: Street 2
          maxLength: 255
          type: string
        tenantImprov:
          description: tenantImprov
          type: boolean
        tractNum:
          description: tract number
          maxLength: 255
          type: string
        zipCode:
          description: Zipcode
          maxLength: 255
          type: string
    CustRelated_Update:
      title: CustRelated
      x-entity: CustRelated
      type: object
      properties:
        cashUser:
          description: The user who posted from autocash
          title: AppUser
          type: object
          properties:
            id:
              description: AppUser id
              example: 954
              type: integer
              format: int64
        collector:
          description: Primary collector assigned to this
          title: AppUser
          type: object
          properties:
            id:
              description: AppUser id
              example: 954
              type: integer
              format: int64
        disputeResolver:
          description: The person responsible for the dispute/deduction
          title: AppUser
          type: object
          properties:
            id:
              description: AppUser id
              example: 954
              type: integer
              format: int64
        payFromNum:
          maxLength: 255
          type: string
        salesPerson:
          description: The sales person
          title: Contact
          type: object
          properties:
            id:
              description: Contact id
              example: 954
              type: integer
              format: int64
    CustSetup_Update:
      title: CustSetup
      x-entity: CustSetup
      type: object
      properties:
        arTermsId:
          description: ArTerms Id
          type: integer
          format: int64
        class1:
          description: The CustClass 1
          title: CustClass
          type: object
          properties:
            id:
              description: CustClass id
              example: 954
              type: integer
              format: int64
        class2:
          description: The CustClass 2
          title: CustClass
          type: object
          properties:
            id:
              description: CustClass id
              example: 954
              type: integer
              format: int64
        class3:
          description: The CustClass 3
          title: CustClass
          type: object
          properties:
            id:
              description: CustClass id
              example: 954
              type: integer
              format: int64
        currency:
          description: standard ISO 4217 currency code
          example: USD
          type: string
        deliveryEmail:
          description: >-
            The email to use for statement delivery, comma separated list of
            emails
          maxLength: 255
          type: string
        ediInvoices:
          type: boolean
        emailInvoices:
          type: boolean
        financeChargePct:
          description: >-
            Percentage rate for finance charge. If null of empty then looks in
            ArUsStateRate
          type: number
          format: money
        onlinePayGroupId:
          description: Greenbill payment group
          type: integer
          format: int64
        paperInvoices:
          type: boolean
        recurringPayGroupId:
          description: recurring payment group
          type: integer
          format: int64
        stmtDelivery:
          description: 'How to send the statement - null, Email, Fax, Parcel'
          maxLength: 255
          type: string
        timeZone:
          description: Standard TimeZone
          example: GMT
          type: string
    CustStats_Update:
      title: CustStats
      x-entity: CustStats
      type: object
      properties:
        balanceChangeDate:
          description: Last balance update time
          type: string
          format: date-time
        hasArTransInHistory:
          description: Flag that transactions have been purged to history system
          type: boolean
        historyMessage:
          description: Message to users about transactions moved to history system
          maxLength: 50
          type: string
        lastActBy:
          description: Id of user who had last activity for customer
          type: integer
          format: int64
        lastActDate:
          description: Date of last activity
          type: string
          format: date-time
        lastActId:
          description: Id of last activity
          type: integer
          format: int64
        lastInTran:
          description: Last invoice ArTran
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        lastPaTran:
          description: Last payment ArTran
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        lastShipTran:
          description: Last shipped invoice ArTran
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        nextActDate:
          description: Date of next activity
          type: string
          format: date-time
        nextActId:
          description: Id of next activity
          type: integer
          format: int64
        pastDue:
          description: Past due
          type: number
          format: money
        totalDue:
          description: Total due
          type: number
          format: money
    CustAccount_Update:
      title: CustAccount
      x-entity: CustAccount
      type: object
      required:
        - name
        - customer
        - num
        - arTerms
        - salesReps
      properties:
        arTerms:
          description: List of arTerm
          type: array
          items:
            title: ArTerm
            type: object
            properties:
              id:
                description: ArTerm id
                example: 954
                type: integer
                format: int64
        commentsCollector:
          description: 'Comments for internal collectors only, customer wont see'
          maxLength: 255
          type: string
        creditInfo:
          description: Link to CustCreditInfo domain
          $ref: '#/components/schemas/CustCreditInfo_Update'
        customer:
          description: >
            The Customer this CustAccount belongs to.

            Updating the Customer field is ONLY allowed when there are no
            existing ArTrans (open or closed) for this CustAccount.
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        inactive:
          description: Is active?
          type: boolean
        isLocationDifferent:
          description: Is Location different from customer
          type: boolean
        lien:
          description: >-
            Link to fiekds associated with materials/construction such as bank,
            contractor, property owner, etc
          $ref: '#/components/schemas/CustAccountLien_Update'
        name:
          description: Full name for this customer
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this entity
          maxLength: 50
          type: string
        org:
          description: >-
            Link to Org fields for this custAccount such as website, phone
            number, fax, etc
          $ref: '#/components/schemas/Org_Update'
        related:
          description: >-
            Link to system fields related to this custAccount such as collector,
            dispute specialist, cash applier, etc
          $ref: '#/components/schemas/CustRelated_Update'
        salesReps:
          description: List of sales reps
          type: array
          items:
            title: Contact
            type: object
            properties:
              id:
                description: Contact id
                example: 954
                type: integer
                format: int64
        setup:
          description: >-
            Link to customer setup fileds such as class, statement control,
            finance charge control
          $ref: '#/components/schemas/CustSetup_Update'
        stats:
          description: >-
            Link to dynamic cust account information such as last payment, last
            invoice, etc
          $ref: '#/components/schemas/CustStats_Update'
        tags:
          description: User definable descriptive tage associated with this customer
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
        type:
          description: >-
            User definable field describing custAccout type such as Industial,
            government, secured
          title: CustAccountType
          type: object
          properties:
            id:
              description: CustAccountType id
              example: 954
              type: integer
              format: int64
    CustAccountType_Create:
      title: CustAccountType
      x-entity: CustAccountType
      type: object
      properties:
        code:
          description: Code
          maxLength: 10
          type: string
        isJob:
          description: Flag if type is a job
          type: boolean
        name:
          description: Name
          maxLength: 50
          type: string
    CustAccountType_Update:
      title: CustAccountType
      x-entity: CustAccountType
      type: object
      properties:
        code:
          description: Code
          maxLength: 10
          type: string
        isJob:
          description: Flag if type is a job
          type: boolean
        name:
          description: Name
          maxLength: 50
          type: string
    CustClass_Create:
      title: CustClass
      x-entity: CustClass
      type: object
      required:
        - code
        - name
      properties:
        acDiscountGroupId:
          description: >-
            Id of the discount group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        acMatchGroupId:
          description: >-
            Id of the match group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        acMemoGroupId:
          description: >-
            Id of the memo group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        acOffsetGroupId:
          description: >-
            Id of the offset group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        sourceId:
          type: string
        validFor:
          maxLength: 20
          type: string
    CustClass_Update:
      title: CustClass
      x-entity: CustClass
      type: object
      required:
        - code
        - name
      properties:
        acDiscountGroupId:
          description: >-
            Id of the discount group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        acMatchGroupId:
          description: >-
            Id of the match group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        acMemoGroupId:
          description: >-
            Id of the memo group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        acOffsetGroupId:
          description: >-
            Id of the offset group that settings will be applied to customers
            under his class
          type: integer
          format: int64
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        sourceId:
          type: string
        validFor:
          maxLength: 20
          type: string
    CustFamily_Create:
      title: CustFamily
      x-entity: CustFamily
      type: object
      required:
        - child
      properties:
        child:
          description: Child Customer
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
            num:
              type: string
            sourceId:
              type: string
        parent:
          description: Parent Customer
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
            num:
              type: string
            sourceId:
              type: string
    CustFamily:
      title: CustFamily
      x-entity: CustFamily
      type: object
      required:
        - child
      properties:
        child:
          description: Child Customer
          $ref: '#/components/schemas/Customer'
        parent:
          description: Parent Customer
          $ref: '#/components/schemas/Customer'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CustFamily_Update:
      title: CustFamily
      x-entity: CustFamily
      type: object
      required:
        - child
      properties:
        child:
          description: Child Customer
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        parent:
          description: Parent Customer
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
    CustAcSetup_Create:
      title: CustAcSetup
      x-entity: CustAcSetup
      type: object
      properties:
        discPct:
          description: >-
            Allowed discount percentage that overrides setting from discount
            group 
          type: number
          format: money
        discountGroupId:
          description: Id of discount setup group
          type: integer
          format: int64
        graceDays:
          description: 'Allowed grace days that overrides setting from discount group '
          type: integer
        matchGroupId:
          description: Id of match setup group
          type: integer
          format: int64
        memoGroupId:
          description: Id of memo setup group
          type: integer
          format: int64
        offsetGroupId:
          description: Id of offset setup group
          type: integer
          format: int64
    CustExt_Create:
      title: CustExt
      x-entity: CustExt
      type: object
      properties:
        dipDate:
          description: DIP Date
          type: string
          format: date
        dipNum:
          description: DIP Num
          maxLength: 255
          type: string
        freightTerms:
          description: Freight Terms
          maxLength: 255
          type: string
        gln:
          description: GLN number
          maxLength: 255
          type: string
        is850:
          description: Should customer get an EDI 850 invoice
          type: boolean
        payablesWebsite:
          description: URL link for this customers payables website
          maxLength: 255
          type: string
        removedDate:
          description: Date customer was removed
          type: string
          format: date-time
        setupDate:
          description: Date customer was setup
          type: string
          format: date-time
        sic:
          description: SIC code
          maxLength: 255
          type: string
    Customer_Create:
      title: Customer
      x-entity: Customer
      type: object
      required:
        - name
        - partitionOrg
        - num
        - arTerms
        - salesReps
      properties:
        acSetup:
          description: >-
            Link to parameter values controlling cash application for this
            customer
          $ref: '#/components/schemas/CustAcSetup_Create'
        arTerms:
          description: List of arTerm
          type: array
          items:
            $ref: '#/components/schemas/ArTerm_Create'
        commentsCollector:
          description: 'Comments for internal collectors only, customer wont see'
          maxLength: 255
          type: string
        companyId:
          description: 'Company id, denormalized from Org'
          default: '2'
          type: integer
          format: int64
        creditInfo:
          description: Link to CustCreditInfo
          $ref: '#/components/schemas/CustCreditInfo_Create'
        custFamilyType:
          description: Type of customer family
          type: string
          enum:
            - Parent
            - Grandparent
        ext:
          description: >-
            Link to fields such as sic code, DIP number, customer payables
            website
          $ref: '#/components/schemas/CustExt_Create'
        inactive:
          description: Is active?
          type: boolean
        name:
          description: Full name for this customer
          maxLength: 255
          type: string
        name2:
          description: Customer secondary name (or num)
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this entity
          maxLength: 50
          type: string
        org:
          description: Link to Org domain
          $ref: '#/components/schemas/Org_Create'
        partitionOrg:
          description: The partition org customer belongs to
          $ref: '#/components/schemas/PartitionOrg_Create'
        payablesContact:
          description: Accounts payable dept info
          $ref: '#/components/schemas/Contact_Create'
        related:
          description: >-
            Link to syste fields related to this customer such as collector,
            dispute specialist, cash applier, etc
          $ref: '#/components/schemas/CustRelated_Create'
        salesReps:
          description: List of sales reps
          type: array
          items:
            $ref: '#/components/schemas/Contact_Create'
        setup:
          description: >-
            Link to customer setup fields such as class, statement control,
            finance charge control
          $ref: '#/components/schemas/CustSetup_Create'
        stats:
          description: >-
            Link to dynamic customer information such as last payment, last
            invoice, etc
          $ref: '#/components/schemas/CustStats_Create'
        tags:
          description: User definable descriptive tage associated with this customer
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
    CustAcSetup_Update:
      title: CustAcSetup
      x-entity: CustAcSetup
      type: object
      properties:
        discPct:
          description: >-
            Allowed discount percentage that overrides setting from discount
            group 
          type: number
          format: money
        discountGroupId:
          description: Id of discount setup group
          type: integer
          format: int64
        graceDays:
          description: 'Allowed grace days that overrides setting from discount group '
          type: integer
        matchGroupId:
          description: Id of match setup group
          type: integer
          format: int64
        memoGroupId:
          description: Id of memo setup group
          type: integer
          format: int64
        offsetGroupId:
          description: Id of offset setup group
          type: integer
          format: int64
    CustExt_Update:
      title: CustExt
      x-entity: CustExt
      type: object
      properties:
        dipDate:
          description: DIP Date
          type: string
          format: date
        dipNum:
          description: DIP Num
          maxLength: 255
          type: string
        freightTerms:
          description: Freight Terms
          maxLength: 255
          type: string
        gln:
          description: GLN number
          maxLength: 255
          type: string
        is850:
          description: Should customer get an EDI 850 invoice
          type: boolean
        payablesWebsite:
          description: URL link for this customers payables website
          maxLength: 255
          type: string
        removedDate:
          description: Date customer was removed
          type: string
          format: date-time
        setupDate:
          description: Date customer was setup
          type: string
          format: date-time
        sic:
          description: SIC code
          maxLength: 255
          type: string
    Customer_Update:
      title: Customer
      x-entity: Customer
      type: object
      required:
        - name
        - num
        - arTerms
        - salesReps
      properties:
        acSetup:
          description: >-
            Link to parameter values controlling cash application for this
            customer
          $ref: '#/components/schemas/CustAcSetup_Update'
        arTerms:
          description: List of arTerm
          type: array
          items:
            title: ArTerm
            type: object
            properties:
              id:
                description: ArTerm id
                example: 954
                type: integer
                format: int64
        commentsCollector:
          description: 'Comments for internal collectors only, customer wont see'
          maxLength: 255
          type: string
        companyId:
          description: 'Company id, denormalized from Org'
          default: '2'
          type: integer
          format: int64
        creditInfo:
          description: Link to CustCreditInfo
          $ref: '#/components/schemas/CustCreditInfo_Update'
        custFamilyType:
          description: Type of customer family
          type: string
          enum:
            - Parent
            - Grandparent
        ext:
          description: >-
            Link to fields such as sic code, DIP number, customer payables
            website
          $ref: '#/components/schemas/CustExt_Update'
        inactive:
          description: Is active?
          type: boolean
        name:
          description: Full name for this customer
          maxLength: 255
          type: string
        name2:
          description: Customer secondary name (or num)
          maxLength: 255
          type: string
        num:
          description: Unique alpha-numeric identifier for this entity
          maxLength: 50
          type: string
        org:
          description: Link to Org domain
          $ref: '#/components/schemas/Org_Update'
        payablesContact:
          description: Accounts payable dept info
          $ref: '#/components/schemas/Contact_Update'
        related:
          description: >-
            Link to syste fields related to this customer such as collector,
            dispute specialist, cash applier, etc
          $ref: '#/components/schemas/CustRelated_Update'
        salesReps:
          description: List of sales reps
          type: array
          items:
            title: Contact
            type: object
            properties:
              id:
                description: Contact id
                example: 954
                type: integer
                format: int64
        setup:
          description: >-
            Link to customer setup fields such as class, statement control,
            finance charge control
          $ref: '#/components/schemas/CustSetup_Update'
        stats:
          description: >-
            Link to dynamic customer information such as last payment, last
            invoice, etc
          $ref: '#/components/schemas/CustStats_Update'
        tags:
          description: User definable descriptive tage associated with this customer
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
    GlAccount_Create:
      title: GlAccount
      x-entity: GlAccount
      type: object
      required:
        - name
        - num
      properties:
        description:
          description: The description of this GlAccount
          maxLength: 255
          type: string
        name:
          description: The name for this GlAccount
          maxLength: 50
          type: string
        num:
          description: 'Unique alpha-numeric num for this GlAccount, Used as primary key'
          maxLength: 50
          type: string
    GlAccount:
      title: GlAccount
      x-entity: GlAccount
      type: object
      required:
        - name
        - num
      properties:
        description:
          description: The description of this GlAccount
          maxLength: 255
          type: string
        name:
          description: The name for this GlAccount
          maxLength: 50
          type: string
        num:
          description: 'Unique alpha-numeric num for this GlAccount, Used as primary key'
          maxLength: 50
          type: string
        id:
          type: string
          description: unique id
          example: 954
          readOnly: true
    GlAccount_Update:
      title: GlAccount
      x-entity: GlAccount
      type: object
      required:
        - name
        - num
      properties:
        description:
          description: The description of this GlAccount
          maxLength: 255
          type: string
        name:
          description: The name for this GlAccount
          maxLength: 50
          type: string
        num:
          description: 'Unique alpha-numeric num for this GlAccount, Used as primary key'
          maxLength: 50
          type: string
    GlJournalFlex_Create:
      title: GlJournalFlex
      x-entity: GlJournalFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    GlJournalOrgMember_Create:
      title: GlJournalOrgMember
      x-entity: GlJournalOrgMember
      type: object
      properties:
        branch:
          description: Link to org branch domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        business:
          description: Link to org business domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        division:
          description: Link to org division domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        factory:
          description: Link to org factory domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        region:
          description: Link to org region domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        sales:
          description: Link to org sales domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    GlJournal_Create:
      title: GlJournal
      x-entity: GlJournal
      type: object
      required:
        - glPostDate
        - debit
        - glPostPeriod
        - glPostBatch
        - glAcct
        - credit
      properties:
        credit:
          description: Credit amount
          type: number
          format: money
        debit:
          description: Debit amount
          type: number
          format: money
        flex:
          description: Link to GlJournalFlex
          $ref: '#/components/schemas/GlJournalFlex_Create'
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        glPostBatch:
          description: Gl Batch it was posted to GL with
          title: GlBatch
          type: object
          properties:
            id:
              description: GlBatch id
              example: 954
              type: integer
              format: int64
        glPostDate:
          description: The date glJournal was posted to GL
          type: string
          format: date
        glPostPeriod:
          description: Gl Period glJournal was posted to GL
          maxLength: 7
          type: string
        linkedEntity:
          description: Name of linked entity this gl entry came from
          example: 'ArAdjustLineJournal, ArAdjustJournal, ArTranJournal'
          type: string
          enum:
            - ArTranJournal
            - ArAdjustLineJournal
            - ArAdjustJournal
        member:
          description: Link to GlJournalMember
          $ref: '#/components/schemas/GlJournalOrgMember_Create'
        source:
          description: source of gl entries
          example: 'Autocash, InApi'
          maxLength: 50
          type: string
    GlBatch_Create:
      title: GlBatch
      x-entity: GlBatch
      type: object
      required:
        - org
        - glPostDate
        - glPostPeriod
        - batchStatus
        - journals
      properties:
        arBatch:
          description: ArBatch that this glbatch has data for
          title: ArBatch
          type: object
          properties:
            id:
              description: ArBatch id
              example: 954
              type: integer
              format: int64
        batchStatus:
          description: 'Failed 0, Success 1, In Progress 2, Void 3'
          type: string
          enum:
            - Failed
            - Success
            - InProcess
            - Void
        controlAmount:
          description: Sum of credit amount (debit amount)
          type: number
          format: money
        description:
          description: Description of posting failures
          maxLength: 4000
          type: string
        glPostDate:
          description: The gl posting date
          type: string
          format: date
        glPostPeriod:
          description: The gl posting period
          maxLength: 7
          type: string
        jobId:
          description: id of SyncJob that exported GlBatch to ERP
          type: integer
          format: int64
        journals:
          description: List of glJournals
          type: array
          items:
            $ref: '#/components/schemas/GlJournal_Create'
        org:
          description: org from appConfig.partitionOrgType
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        source:
          description: >-
            Source of data this glBatch has gl journals for; for example App,
            Erp
          maxLength: 50
          type: string
    GlBatch_Update:
      title: GlBatch
      x-entity: GlBatch
      type: object
      required:
        - org
        - glPostDate
        - glPostPeriod
        - batchStatus
        - journals
      properties:
        arBatch:
          description: ArBatch that this glbatch has data for
          title: ArBatch
          type: object
          properties:
            id:
              description: ArBatch id
              example: 954
              type: integer
              format: int64
        batchStatus:
          description: 'Failed 0, Success 1, In Progress 2, Void 3'
          type: string
          enum:
            - Failed
            - Success
            - InProcess
            - Void
        controlAmount:
          description: Sum of credit amount (debit amount)
          type: number
          format: money
        description:
          description: Description of posting failures
          maxLength: 4000
          type: string
        glPostDate:
          description: The gl posting date
          type: string
          format: date
        glPostPeriod:
          description: The gl posting period
          maxLength: 7
          type: string
        jobId:
          description: id of SyncJob that exported GlBatch to ERP
          type: integer
          format: int64
        journals:
          description: List of glJournals
          type: array
          items:
            title: GlJournal
            type: object
            properties:
              id:
                description: GlJournal id
                example: 954
                type: integer
                format: int64
        org:
          description: org from appConfig.partitionOrgType
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        source:
          description: >-
            Source of data this glBatch has gl journals for; for example App,
            Erp
          maxLength: 50
          type: string
    GlJournalFlex_Update:
      title: GlJournalFlex
      x-entity: GlJournalFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    GlJournalOrgMember_Update:
      title: GlJournalOrgMember
      x-entity: GlJournalOrgMember
      type: object
      properties:
        branch:
          description: Link to org branch domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        business:
          description: Link to org business domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        division:
          description: Link to org division domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        factory:
          description: Link to org factory domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        region:
          description: Link to org region domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        sales:
          description: Link to org sales domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    GlJournal_Update:
      title: GlJournal
      x-entity: GlJournal
      type: object
      required:
        - glPostDate
        - debit
        - glPostPeriod
        - glPostBatch
        - glAcct
        - credit
      properties:
        credit:
          description: Credit amount
          type: number
          format: money
        debit:
          description: Debit amount
          type: number
          format: money
        flex:
          description: Link to GlJournalFlex
          $ref: '#/components/schemas/GlJournalFlex_Update'
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        glPostBatch:
          description: Gl Batch it was posted to GL with
          title: GlBatch
          type: object
          properties:
            id:
              description: GlBatch id
              example: 954
              type: integer
              format: int64
        glPostDate:
          description: The date glJournal was posted to GL
          type: string
          format: date
        glPostPeriod:
          description: Gl Period glJournal was posted to GL
          maxLength: 7
          type: string
        linkedEntity:
          description: Name of linked entity this gl entry came from
          example: 'ArAdjustLineJournal, ArAdjustJournal, ArTranJournal'
          type: string
          enum:
            - ArTranJournal
            - ArAdjustLineJournal
            - ArAdjustJournal
        member:
          description: Link to GlJournalMember
          $ref: '#/components/schemas/GlJournalOrgMember_Update'
        source:
          description: source of gl entries
          example: 'Autocash, InApi'
          maxLength: 50
          type: string
    GlPostPeriod_Create:
      title: GlPostPeriod
      x-entity: GlPostPeriod
      type: object
      required:
        - endDate
        - begDate
        - name
        - closingDate
      properties:
        begDate:
          description: Period's start date
          type: string
          format: date
        closingDate:
          description: Date when period is closed (usually same as endDate)
          type: string
          format: date
        description:
          type: string
        endDate:
          description: Period's end date
          type: string
          format: date
        finYear:
          description: Fin year
          maxLength: 4
          type: string
        half:
          description: Year's half
          maxLength: 3
          type: string
        isClosed:
          description: Flag if period is closed
          type: boolean
        monthNumber:
          description: Month number
          type: integer
        name:
          description: Name of the monthly period; in YYYYMM format
          maxLength: 7
          type: string
        period:
          description: Year's period
          maxLength: 4
          type: string
        quarter:
          description: Year's quarter
          maxLength: 3
          type: string
        statementDate:
          description: >-
            Date when the statements are sent and when we run finance charge
            (FinanceChargeService), could be on 25th of the month
          type: string
          format: date
        trimester:
          description: Year's trimester
          maxLength: 3
          type: string
    GlPostPeriod:
      title: GlPostPeriod
      x-entity: GlPostPeriod
      type: object
      required:
        - endDate
        - begDate
        - name
        - closingDate
      properties:
        begDate:
          description: Period's start date
          type: string
          format: date
        closingDate:
          description: Date when period is closed (usually same as endDate)
          type: string
          format: date
        description:
          type: string
        endDate:
          description: Period's end date
          type: string
          format: date
        finYear:
          description: Fin year
          maxLength: 4
          type: string
        half:
          description: Year's half
          maxLength: 3
          type: string
        isClosed:
          description: Flag if period is closed
          type: boolean
        monthNumber:
          description: Month number
          type: integer
        name:
          description: Name of the monthly period; in YYYYMM format
          maxLength: 7
          type: string
        period:
          description: Year's period
          maxLength: 4
          type: string
        quarter:
          description: Year's quarter
          maxLength: 3
          type: string
        statementDate:
          description: >-
            Date when the statements are sent and when we run finance charge
            (FinanceChargeService), could be on 25th of the month
          type: string
          format: date
        trimester:
          description: Year's trimester
          maxLength: 3
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    GlPostPeriod_Update:
      title: GlPostPeriod
      x-entity: GlPostPeriod
      type: object
      required:
        - endDate
        - begDate
        - name
        - closingDate
      properties:
        begDate:
          description: Period's start date
          type: string
          format: date
        closingDate:
          description: Date when period is closed (usually same as endDate)
          type: string
          format: date
        description:
          type: string
        endDate:
          description: Period's end date
          type: string
          format: date
        finYear:
          description: Fin year
          maxLength: 4
          type: string
        half:
          description: Year's half
          maxLength: 3
          type: string
        isClosed:
          description: Flag if period is closed
          type: boolean
        monthNumber:
          description: Month number
          type: integer
        name:
          description: Name of the monthly period; in YYYYMM format
          maxLength: 7
          type: string
        period:
          description: Year's period
          maxLength: 4
          type: string
        quarter:
          description: Year's quarter
          maxLength: 3
          type: string
        statementDate:
          description: >-
            Date when the statements are sent and when we run finance charge
            (FinanceChargeService), could be on 25th of the month
          type: string
          format: date
        trimester:
          description: Year's trimester
          maxLength: 3
          type: string
    Lockbox_Create:
      title: Lockbox
      x-entity: Lockbox
      type: object
      required:
        - org
        - name
        - num
      properties:
        accountType:
          description: Type of account
          maxLength: 50
          type: string
        bankAccount:
          description: The bankAccount for this Lockbox
          title: BankAccount
          type: object
          properties:
            id:
              description: BankAccount id
              example: 954
              type: integer
              format: int64
        bankName:
          description: Name of bank
          maxLength: 50
          type: string
        bankNumber:
          description: 'Bank number, used for lookup lockbox from batch.source'
          maxLength: 50
          type: string
        excludeFromOutApi:
          type: boolean
        glAcct:
          description: Gl Account for payments under this batch.
          maxLength: 50
          type: string
        name:
          description: Full name for this entity
          maxLength: 50
          type: string
        num:
          description: 'Lockbox number, used in ArBatch.lockbox'
          maxLength: 50
          type: string
        org:
          description: >-
            The partition org that this lockbox belongs to, drives the different
            orgs on the ArBatch
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        tranType:
          description: >-
            ArTranType assigned on Payment.arTranType for all the payments under
            ArBatch with this lockbox
          title: ArTranType
          type: object
          properties:
            id:
              description: ArTranType id
              example: 954
              type: integer
              format: int64
        visibleToAutocash:
          type: boolean
    Lockbox:
      title: Lockbox
      x-entity: Lockbox
      type: object
      required:
        - org
        - name
        - num
      properties:
        accountType:
          description: Type of account
          maxLength: 50
          type: string
        bankAccount:
          description: The bankAccount for this Lockbox
          $ref: '#/components/schemas/BankAccount'
        bankName:
          description: Name of bank
          maxLength: 50
          type: string
        bankNumber:
          description: 'Bank number, used for lookup lockbox from batch.source'
          maxLength: 50
          type: string
        excludeFromOutApi:
          type: boolean
        glAcct:
          description: Gl Account for payments under this batch.
          maxLength: 50
          type: string
        name:
          description: Full name for this entity
          maxLength: 50
          type: string
        num:
          description: 'Lockbox number, used in ArBatch.lockbox'
          maxLength: 50
          type: string
        org:
          description: >-
            The partition org that this lockbox belongs to, drives the different
            orgs on the ArBatch
          $ref: '#/components/schemas/Org'
        tranType:
          description: >-
            ArTranType assigned on Payment.arTranType for all the payments under
            ArBatch with this lockbox
          $ref: '#/components/schemas/ArTranType'
        visibleToAutocash:
          type: boolean
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Lockbox_Update:
      title: Lockbox
      x-entity: Lockbox
      type: object
      required:
        - org
        - name
        - num
      properties:
        accountType:
          description: Type of account
          maxLength: 50
          type: string
        bankAccount:
          description: The bankAccount for this Lockbox
          title: BankAccount
          type: object
          properties:
            id:
              description: BankAccount id
              example: 954
              type: integer
              format: int64
        bankName:
          description: Name of bank
          maxLength: 50
          type: string
        bankNumber:
          description: 'Bank number, used for lookup lockbox from batch.source'
          maxLength: 50
          type: string
        excludeFromOutApi:
          type: boolean
        glAcct:
          description: Gl Account for payments under this batch.
          maxLength: 50
          type: string
        name:
          description: Full name for this entity
          maxLength: 50
          type: string
        num:
          description: 'Lockbox number, used in ArBatch.lockbox'
          maxLength: 50
          type: string
        org:
          description: >-
            The partition org that this lockbox belongs to, drives the different
            orgs on the ArBatch
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        tranType:
          description: >-
            ArTranType assigned on Payment.arTranType for all the payments under
            ArBatch with this lockbox
          title: ArTranType
          type: object
          properties:
            id:
              description: ArTranType id
              example: 954
              type: integer
              format: int64
        visibleToAutocash:
          type: boolean
    ArReasonGroup_Create:
      title: ArReasonGroup
      x-entity: ArReasonGroup
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
    ArReason_Create:
      title: ArReason
      x-entity: ArReason
      type: object
      required:
        - name
        - code
      properties:
        clearAccount:
          description: GL Account that goes on ArTranLine when reason assigned
          maxLength: 50
          type: string
        clearSubAcct:
          description: GL Account that goes on ArTran header record when reason assigned
          maxLength: 50
          type: string
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        group:
          description: Reason Grouping
          $ref: '#/components/schemas/ArReasonGroup_Create'
        inactive:
          description: Inactive flag
          type: boolean
        modules:
          description: >-
            Specifies whether the ArReason should be visible/selectable in
            Autocash/ArTran screens or not
          type: string
          enum:
            - Autocash
            - Collection
            - IPay
            - None
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this reason code
          maxLength: 255
          type: string
    ArReasonGroup_Update:
      title: ArReasonGroup
      x-entity: ArReasonGroup
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
    ArReason_Update:
      title: ArReason
      x-entity: ArReason
      type: object
      required:
        - name
        - code
      properties:
        clearAccount:
          description: GL Account that goes on ArTranLine when reason assigned
          maxLength: 50
          type: string
        clearSubAcct:
          description: GL Account that goes on ArTran header record when reason assigned
          maxLength: 50
          type: string
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        group:
          description: Reason Grouping
          $ref: '#/components/schemas/ArReasonGroup_Update'
        inactive:
          description: Inactive flag
          type: boolean
        modules:
          description: >-
            Specifies whether the ArReason should be visible/selectable in
            Autocash/ArTran screens or not
          type: string
          enum:
            - Autocash
            - Collection
            - IPay
            - None
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this reason code
          maxLength: 255
          type: string
    NewRefnumGenerator_Create:
      title: NewRefnumGenerator
      x-entity: NewRefnumGenerator
      type: object
      required:
        - keyName
        - nextId
      properties:
        description:
          description: Information or note on what its for
          maxLength: 255
          type: string
        keyName:
          description: the key name for the refnumGenerator
          maxLength: 255
          type: string
        nextId:
          description: the nextId for the pool
          type: integer
          format: int64
        rangeMax:
          type: integer
          format: int64
        rangeMin:
          type: integer
          format: int64
    NewRefnumGenerator:
      title: NewRefnumGenerator
      x-entity: NewRefnumGenerator
      type: object
      required:
        - keyName
        - nextId
      properties:
        description:
          description: Information or note on what its for
          maxLength: 255
          type: string
        keyName:
          description: the key name for the refnumGenerator
          maxLength: 255
          type: string
        nextId:
          description: the nextId for the pool
          type: integer
          format: int64
        rangeMax:
          type: integer
          format: int64
        rangeMin:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    NewRefnumGenerator_Update:
      title: NewRefnumGenerator
      x-entity: NewRefnumGenerator
      type: object
      required:
        - keyName
        - nextId
      properties:
        description:
          description: Information or note on what its for
          maxLength: 255
          type: string
        keyName:
          description: the key name for the refnumGenerator
          maxLength: 255
          type: string
        nextId:
          description: the nextId for the pool
          type: integer
          format: int64
        rangeMax:
          type: integer
          format: int64
        rangeMin:
          type: integer
          format: int64
    ArStatus_Create:
      title: ArStatus
      x-entity: ArStatus
      type: object
      required:
        - code
        - name
      properties:
        baseStatus:
          type: string
          enum:
            - Open
            - PastDue
            - Sent
            - Dispute
            - Research
            - Denied
            - Pending
            - Exclude
            - PayPlan
            - Promise
            - BrokenPromise
            - Closed
            - Paid
            - Draft
            - Reversal
            - Void
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        inactive:
          description: Is inactive?
          type: boolean
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        requireReason:
          description: Is reason code required?
          type: boolean
        sourceId:
          description: The source identifier for this status
          maxLength: 50
          type: string
    ArStatus_Update:
      title: ArStatus
      x-entity: ArStatus
      type: object
      required:
        - code
        - name
      properties:
        baseStatus:
          type: string
          enum:
            - Open
            - PastDue
            - Sent
            - Dispute
            - Research
            - Denied
            - Pending
            - Exclude
            - PayPlan
            - Promise
            - BrokenPromise
            - Closed
            - Paid
            - Draft
            - Reversal
            - Void
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        inactive:
          description: Is inactive?
          type: boolean
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        requireReason:
          description: Is reason code required?
          type: boolean
        sourceId:
          description: The source identifier for this status
          maxLength: 50
          type: string
    ArTerm_Update:
      title: ArTerm
      x-entity: ArTerm
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        discountDays:
          description: Number of days discount is valid for from tranDate
          default: '0'
          type: integer
        discountForACH:
          description: Special discount if paid by ACH
          type: number
          format: money
        discountForACHDays:
          description: Number of days discount is valid for if paid by ACH
          type: integer
        discountPercent:
          description: Discount percentage
          default: '0'
          type: number
          format: money
        dueInDays:
          description: Number of days transaction is due from tranDate
          type: integer
        name:
          description: The name for this entity
          maxLength: 50
          type: string
    ArTranBillShip_Create:
      title: ArTranBillShip
      x-entity: ArTranBillShip
      type: object
      properties:
        billCity:
          description: Bill to city
          maxLength: 255
          type: string
        billCountry:
          description: Bill to country
          maxLength: 255
          type: string
        billCounty:
          description: Bill to county
          maxLength: 255
          type: string
        billIns1:
          description: 'Bill Instructions 1, flexible field'
          maxLength: 255
          type: string
        billIns2:
          description: 'Bill Instructions 2, flexible field'
          maxLength: 255
          type: string
        billIns3:
          description: 'Bill Instructions 3, flexible field'
          maxLength: 255
          type: string
        billIns4:
          description: 'Bill Instructions 4, flexible field'
          maxLength: 255
          type: string
        billName:
          description: Bill to name
          maxLength: 255
          type: string
        billState:
          description: Bill to state
          maxLength: 255
          type: string
        billStreet1:
          description: Bill to street1
          maxLength: 255
          type: string
        billStreet2:
          description: Bill to street2
          maxLength: 255
          type: string
        billZipCode:
          description: Bill to zipcode
          maxLength: 255
          type: string
        shipCity:
          description: Ship to city
          maxLength: 255
          type: string
        shipCountry:
          description: Ship to country
          maxLength: 255
          type: string
        shipCounty:
          description: Ship to county
          maxLength: 255
          type: string
        shipIns1:
          description: 'Ship Instructions 1, flexible field'
          maxLength: 255
          type: string
        shipIns2:
          description: 'Ship Instructions 2, flexible field'
          maxLength: 255
          type: string
        shipIns3:
          description: 'Ship Instructions 3, flexible field'
          maxLength: 255
          type: string
        shipIns4:
          description: 'Ship Instructions 4, flexible field'
          maxLength: 255
          type: string
        shipName:
          description: Ship to name
          maxLength: 255
          type: string
        shipPhone:
          description: Ship to phone
          maxLength: 255
          type: string
        shipState:
          description: Ship to state
          maxLength: 255
          type: string
        shipStreet1:
          description: Ship to street1
          maxLength: 255
          type: string
        shipStreet2:
          description: Ship to street2
          maxLength: 255
          type: string
        shipVia:
          description: Ship via
          maxLength: 255
          type: string
        shipZipCode:
          description: Ship to zipcode
          maxLength: 255
          type: string
    ArTranDispute_Create:
      title: ArTranDispute
      x-entity: ArTranDispute
      type: object
      required:
        - amount
      properties:
        amount:
          description: Dispute or deduction amount
          type: number
          format: money
        comments:
          description: Comments about this dispute
          maxLength: 1000
          type: string
        disputeDate:
          description: Date disputed
          type: string
          format: date
        reason:
          description: Dispute reason
          title: ArReason
          type: object
          properties:
            id:
              description: ArReason id
              example: 954
              type: integer
              format: int64
            name:
              type: string
            sourceId:
              type: string
        reasonChangedDate:
          description: Date reason was assigned
          type: string
          format: date
        splitFromArTranId:
          description: Id of orig arTran the dispute was split from
          type: integer
          format: int64
    ArTranExt_Create:
      title: ArTranExt
      x-entity: ArTranExt
      type: object
      properties:
        bolNum:
          description: Bill of lading number
          maxLength: 50
          type: string
        crossRefnum:
          description: Cross reference number
          maxLength: 50
          type: string
        masterTranAmount:
          description: >-
            Amount of arTran that came in from ERP when it's different from 9ci
            amount
          type: number
          format: money
        masterTranDate:
          description: >-
            Transaction date of arTran that came in from ERP when it's different
            from 9ci transaction date
          type: string
          format: date
        masterTranNum:
          description: >-
            Refnum of arTran that came in from ERP when it's different from 9ci
            refnum
          maxLength: 50
          type: string
        masterTranType:
          description: >-
            TranType of arTran that came in from ERP when it's different from
            9ci tranType
          maxLength: 50
          type: string
        orderNum:
          description: Order number
          maxLength: 50
          type: string
        origCurrencyAmount:
          description: Original Amount in original currency
          type: number
          format: money
        poAmount:
          description: Purchase Order amount
          type: number
          format: money
        poDate:
          description: Purchase Order date
          type: string
          format: date
        reasonSubId:
          description: 'id of additional reason code, reasonSub'
          type: integer
          format: int64
        rmaNum:
          description: Rma num
          maxLength: 50
          type: string
        shipDate:
          description: Shipping date
          type: string
          format: date
        shipToAttn:
          description: Ship to Attn
          maxLength: 255
          type: string
        shipToName:
          description: Ship to name
          maxLength: 50
          type: string
        statusChangeDate:
          description: Date the status was changed
          type: string
          format: date-time
        statusRemarkId:
          description: 'Id of additional status assigned, remark status'
          type: integer
          format: int64
        storeNum:
          description: Store number
          maxLength: 50
          type: string
        syncDateReentered:
          description: Date when transaction was re opened with sync process
          type: string
          format: date-time
        syncMasterAmount:
          description: >-
            Amount transaction was reopened with, amount from the master system
            (ERP)
          type: number
          format: money
        syncOldAmount:
          description: Original amount before transaction was reopened
          type: number
          format: money
        xferOrg:
          description: >-
            partition Org assigned on inter company transactions from autocash
            (ICCM, ICDM and ICPA)
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    ArTranFlex_Create:
      title: ArTranFlex
      x-entity: ArTranFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    ArTranLineSum_Create:
      title: ArTranLineSum
      x-entity: ArTranLineSum
      type: object
      properties:
        discAmount:
          description: >-
            Dicount amount or the sum where lineKind is Discount, should be
            positive
          type: number
          format: money
        discPct:
          description: Discount percentage
          type: number
          format: money
        shippingAmount:
          description: Shipping amount or the sum where itemKind is Shipping
          type: number
          format: money
        svcChargeAmount:
          description: Service Charge amount or the sum where itemKind is svcCharge
          type: number
          format: money
        taxAmount:
          description: Tax amount or the sum where itemKind is tax
          type: number
          format: money
        taxCode:
          description: Tax code if applies to all the lines
          maxLength: 255
          type: string
        taxPct:
          description: Tax percentage if applies to all the lines
          type: number
          format: money
    ArTranLineFlex_Create:
      title: ArTranLineFlex
      x-entity: ArTranLineFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    ArTranLineItem_Create:
      title: ArTranLineItem
      x-entity: ArTranLineItem
      type: object
      required:
        - unitPrice
        - qty
        - item
        - kind
      properties:
        code:
          description: >-
            Code of the item. Denormalized from item, overridden at creation
            time or imported from source system
          maxLength: 10
          type: string
        costAmount:
          description: >-
            The cogs (cost of goods sold) for the line used to calculate the
            gross margin for the ArTran
          default: '0'
          type: number
          format: money
        discAmount:
          description: 'The discount for the line, flat amount'
          type: number
          format: money
        discPct:
          description: 'the discount percent, discAmount = discPct * (units * unitPrice) '
          type: number
          format: money
        item:
          description: 'Invoiced item, must exist in items if imported, default to Product'
          title: Item
          type: object
          properties:
            id:
              description: Item id
              example: 954
              type: integer
              format: int64
        kind:
          description: The kind from item
          type: string
          enum:
            - Service
            - Product
            - Shipping
            - SvcCharge
            - FinCharge
            - Other
        name:
          description: The name of the item. Denormalized from Item.name
          maxLength: 255
          type: string
        num:
          description: The num of the item. Denormalized from item
          maxLength: 255
          type: string
        orderNum:
          description: the order number this line came from
          maxLength: 50
          type: string
        qty:
          description: Unit quantity.  amount should equal units * unitPrice
          type: number
          format: money
        taxAmount:
          description: 'The tax for the line, flat amount'
          type: number
          format: money
        taxCode:
          description: Imported tax code
          maxLength: 10
          type: string
        taxPct:
          description: >-
            Set to 0 if it should be exempt but want to show the tax code its
            from
          type: number
          format: money
        unitOfMeasure:
          description: >-
            Unit of measure. ex. each, hour, case, pound, etc... can just be
            null if not needed or imported
          maxLength: 50
          type: string
        unitPrice:
          description: The price or rate per unit in qty
          type: number
          format: money
    ArTranLine_Create:
      title: ArTranLine
      x-entity: ArTranLine
      type: object
      required:
        - arTran
        - lineType
        - kind
        - amount
      properties:
        amount:
          description: Line amount
          type: number
          format: money
        arTran:
          description: Transaction this line belongs to
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        comments:
          description: Comments with no impact
          maxLength: 255
          type: string
        description:
          type: string
        flex:
          description: Link to ArTranLineFlex
          $ref: '#/components/schemas/ArTranLineFlex_Create'
        glAcct:
          description: >-
            Gl account, from ArTran.tranType, reason, lineType, Item, imported
            or manually entered
          maxLength: 50
          type: string
        invisible:
          description: if true then don't show on invoice print or view by default
          type: boolean
        kind:
          description: kind of line
          example: 'Memo, Item'
          type: string
          enum:
            - Memo
            - Item
            - Discount
            - Tax
            - Journal
            - Comments
        lineItem:
          description: Link to ArTranLineItem for additional line info
          $ref: '#/components/schemas/ArTranLineItem_Create'
        lineSequence:
          description: Optional line sequence to order the lines on a invoice or report
          type: integer
        lineType:
          description: >-
            The type of line item, The 2 most common types will be Memo and
            Item. They can drive GL
          title: ArTranLineType
          type: object
          properties:
            id:
              description: ArTranLineType id
              example: 954
              type: integer
              format: int64
            name:
              type: string
            code:
              type: string
        sourceId:
          description: The source identifier for this line
          maxLength: 50
          type: string
    ArTranOrgMember_Create:
      title: ArTranOrgMember
      x-entity: ArTranOrgMember
      type: object
      properties:
        branch:
          description: Link to org branch domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        business:
          description: Link to org business domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        company:
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        division:
          description: Link to org division domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        factory:
          description: Link to org factory domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        region:
          description: Link to org region domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        sales:
          description: Link to org sales domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    ArTranStats_Create:
      title: ArTranStats
      x-entity: ArTranStats
      type: object
      properties:
        bucketLastNight:
          description: Name of aging bucket last night
          maxLength: 255
          type: string
        bucketOnStatement:
          description: Name of aging bucket transaction was at the time of statement run
          maxLength: 255
          type: string
        hasActivity:
          description: 'If transaction has activities, used for screen visibility'
          type: boolean
        hasAttachments:
          description: 'If transaction has attachments, used for screen visibility'
          type: boolean
        hasNotes:
          description: 'If transaction has notes, used for screen visibility'
          type: boolean
        lastInJobId:
          description: Id of the last SyncJob this arTran was imported or updated with
          type: integer
          format: int64
        lastOutJobId:
          description: Id of the last SyncJob this arTran was sent out with
          type: integer
          format: int64
        lastStatementDate:
          description: Date of last statement
          type: string
          format: date-time
    ArTran_Create:
      title: ArTran
      x-entity: ArTran
      type: object
      required:
        - tranType
        - tranDate
        - glPostDate
        - refnum
        - customer
        - amount
        - lines
      properties:
        amount:
          description: >-
            Transaction balance or open amount. For new trans will be equal to
            origAmount.

            If docType is PA or CM then must be < 0.
          type: number
          format: money
        billShip:
          description: Billing and Shipping info
          $ref: '#/components/schemas/ArTranBillShip_Create'
        closedDate:
          description: The date transaction was closed on
          type: string
          format: date-time
        comments:
          description: 'Comments left on transaction, by collector or customer'
          maxLength: 255
          type: string
        currency:
          description: >-
            Standard ISO 4217 currency code. Defaults to USD or the Customers
            default currency
          example: USD
          default: USD
          type: string
        custAccount:
          title: CustAccount
          type: object
          properties:
            id:
              description: CustAccount id
              example: 954
              type: integer
              format: int64
            num:
              type: string
            sourceId:
              type: string
        customer:
          description: Customer
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
            num:
              type: string
            sourceId:
              type: string
        discAmount:
          description: Discount amount
          type: number
          format: money
        discDate:
          description: >-
            The date discount is valid until, can be extended by grace days
            period
          type: string
          format: date
        dispute:
          $ref: '#/components/schemas/ArTranDispute_Create'
        docType:
          description: 'Document type - PA, IN, CM, DM, DD. 9ci Controlled based on TranType'
          default: '=tranType.docType'
          maxLength: 5
          type: string
        dueDate:
          description: Transaction due date
          default: '=tranDate'
          type: string
          format: date
        ext:
          description: Link to transaction fields not commonly used
          $ref: '#/components/schemas/ArTranExt_Create'
        flex:
          description: Link to transaction fields that may be customer defined
          $ref: '#/components/schemas/ArTranFlex_Create'
        glPostDate:
          description: The gl posting date in the gl period
          type: string
          format: date
        lineSum:
          description: >-
            Collection of select fields typically found on transaction lines,
            such as tax, freight, etc
          $ref: '#/components/schemas/ArTranLineSum_Create'
        lines:
          description: List of lines
          type: array
          items:
            $ref: '#/components/schemas/ArTranLine_Create'
        member:
          description: >-
            Link to transactions associated non-customer Org records such as
            branch, region, business unit
          $ref: '#/components/schemas/ArTranOrgMember_Create'
        origAmount:
          description: Transaction original amount
          default: '=amount'
          type: number
          format: money
        ponum:
          description: Purchase order number
          maxLength: 50
          type: string
        refnum:
          description: 'Transaction ref num, invoice number or check number'
          maxLength: 50
          type: string
        refnum2:
          description: Second reference number
          maxLength: 50
          type: string
        source:
          description: Link to string uniquely identifying this transaction
          title: ArTranSource
          type: object
          properties:
            source:
              type: string
            sourceType:
              type: string
            sourceId:
              type: string
        stats:
          $ref: '#/components/schemas/ArTranStats_Create'
        status:
          description: >-
            User definable status indicator, such as open, closed, void,
            disputed, approved. Defaults to 'Open', status.id=1.
          default: '1'
          title: ArStatus
          type: object
          properties:
            id:
              description: ArStatus id
              example: 954
              type: integer
              format: int64
            code:
              type: string
            sourceId:
              type: string
        tags:
          description: the tags for this item
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
        term:
          description: Transaction arTerms reference
          title: ArTerm
          type: object
          properties:
            id:
              description: ArTerm id
              example: 954
              type: integer
              format: int64
            code:
              type: string
            sourceId:
              type: string
        tranDate:
          description: 'Transaction date, invoice date, check date'
          type: string
          format: date
        tranType:
          description: The transaction type. Drives docType and logic on amount sign.
          title: ArTranType
          type: object
          properties:
            id:
              description: ArTranType id
              example: 954
              type: integer
              format: int64
            code:
              type: string
            sourceId:
              type: string
    ArTranBillShip_Update:
      title: ArTranBillShip
      x-entity: ArTranBillShip
      type: object
      properties:
        billCity:
          description: Bill to city
          maxLength: 255
          type: string
        billCountry:
          description: Bill to country
          maxLength: 255
          type: string
        billCounty:
          description: Bill to county
          maxLength: 255
          type: string
        billIns1:
          description: 'Bill Instructions 1, flexible field'
          maxLength: 255
          type: string
        billIns2:
          description: 'Bill Instructions 2, flexible field'
          maxLength: 255
          type: string
        billIns3:
          description: 'Bill Instructions 3, flexible field'
          maxLength: 255
          type: string
        billIns4:
          description: 'Bill Instructions 4, flexible field'
          maxLength: 255
          type: string
        billName:
          description: Bill to name
          maxLength: 255
          type: string
        billState:
          description: Bill to state
          maxLength: 255
          type: string
        billStreet1:
          description: Bill to street1
          maxLength: 255
          type: string
        billStreet2:
          description: Bill to street2
          maxLength: 255
          type: string
        billZipCode:
          description: Bill to zipcode
          maxLength: 255
          type: string
        shipCity:
          description: Ship to city
          maxLength: 255
          type: string
        shipCountry:
          description: Ship to country
          maxLength: 255
          type: string
        shipCounty:
          description: Ship to county
          maxLength: 255
          type: string
        shipIns1:
          description: 'Ship Instructions 1, flexible field'
          maxLength: 255
          type: string
        shipIns2:
          description: 'Ship Instructions 2, flexible field'
          maxLength: 255
          type: string
        shipIns3:
          description: 'Ship Instructions 3, flexible field'
          maxLength: 255
          type: string
        shipIns4:
          description: 'Ship Instructions 4, flexible field'
          maxLength: 255
          type: string
        shipName:
          description: Ship to name
          maxLength: 255
          type: string
        shipPhone:
          description: Ship to phone
          maxLength: 255
          type: string
        shipState:
          description: Ship to state
          maxLength: 255
          type: string
        shipStreet1:
          description: Ship to street1
          maxLength: 255
          type: string
        shipStreet2:
          description: Ship to street2
          maxLength: 255
          type: string
        shipVia:
          description: Ship via
          maxLength: 255
          type: string
        shipZipCode:
          description: Ship to zipcode
          maxLength: 255
          type: string
    ArTranDispute_Update:
      title: ArTranDispute
      x-entity: ArTranDispute
      type: object
      required:
        - amount
      properties:
        amount:
          description: Dispute or deduction amount
          type: number
          format: money
        comments:
          description: Comments about this dispute
          maxLength: 1000
          type: string
        disputeDate:
          description: Date disputed
          type: string
          format: date
        reason:
          description: Dispute reason
          title: ArReason
          type: object
          properties:
            id:
              description: ArReason id
              example: 954
              type: integer
              format: int64
        reasonChangedDate:
          description: Date reason was assigned
          type: string
          format: date
        splitFromArTranId:
          description: Id of orig arTran the dispute was split from
          type: integer
          format: int64
    ArTranExt_Update:
      title: ArTranExt
      x-entity: ArTranExt
      type: object
      properties:
        bolNum:
          description: Bill of lading number
          maxLength: 50
          type: string
        crossRefnum:
          description: Cross reference number
          maxLength: 50
          type: string
        masterTranAmount:
          description: >-
            Amount of arTran that came in from ERP when it's different from 9ci
            amount
          type: number
          format: money
        masterTranDate:
          description: >-
            Transaction date of arTran that came in from ERP when it's different
            from 9ci transaction date
          type: string
          format: date
        masterTranNum:
          description: >-
            Refnum of arTran that came in from ERP when it's different from 9ci
            refnum
          maxLength: 50
          type: string
        masterTranType:
          description: >-
            TranType of arTran that came in from ERP when it's different from
            9ci tranType
          maxLength: 50
          type: string
        orderNum:
          description: Order number
          maxLength: 50
          type: string
        origCurrencyAmount:
          description: Original Amount in original currency
          type: number
          format: money
        poAmount:
          description: Purchase Order amount
          type: number
          format: money
        poDate:
          description: Purchase Order date
          type: string
          format: date
        reasonSubId:
          description: 'id of additional reason code, reasonSub'
          type: integer
          format: int64
        rmaNum:
          description: Rma num
          maxLength: 50
          type: string
        shipDate:
          description: Shipping date
          type: string
          format: date
        shipToAttn:
          description: Ship to Attn
          maxLength: 255
          type: string
        shipToName:
          description: Ship to name
          maxLength: 50
          type: string
        statusChangeDate:
          description: Date the status was changed
          type: string
          format: date-time
        statusRemarkId:
          description: 'Id of additional status assigned, remark status'
          type: integer
          format: int64
        storeNum:
          description: Store number
          maxLength: 50
          type: string
        syncDateReentered:
          description: Date when transaction was re opened with sync process
          type: string
          format: date-time
        syncMasterAmount:
          description: >-
            Amount transaction was reopened with, amount from the master system
            (ERP)
          type: number
          format: money
        syncOldAmount:
          description: Original amount before transaction was reopened
          type: number
          format: money
        xferOrg:
          description: >-
            partition Org assigned on inter company transactions from autocash
            (ICCM, ICDM and ICPA)
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    ArTranFlex_Update:
      title: ArTranFlex
      x-entity: ArTranFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    ArTranLineSum_Update:
      title: ArTranLineSum
      x-entity: ArTranLineSum
      type: object
      properties:
        discAmount:
          description: >-
            Dicount amount or the sum where lineKind is Discount, should be
            positive
          type: number
          format: money
        discPct:
          description: Discount percentage
          type: number
          format: money
        shippingAmount:
          description: Shipping amount or the sum where itemKind is Shipping
          type: number
          format: money
        svcChargeAmount:
          description: Service Charge amount or the sum where itemKind is svcCharge
          type: number
          format: money
        taxAmount:
          description: Tax amount or the sum where itemKind is tax
          type: number
          format: money
        taxCode:
          description: Tax code if applies to all the lines
          maxLength: 255
          type: string
        taxPct:
          description: Tax percentage if applies to all the lines
          type: number
          format: money
    ArTranOrgMember_Update:
      title: ArTranOrgMember
      x-entity: ArTranOrgMember
      type: object
      properties:
        branch:
          description: Link to org branch domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        business:
          description: Link to org business domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        company:
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        division:
          description: Link to org division domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        factory:
          description: Link to org factory domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        region:
          description: Link to org region domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
        sales:
          description: Link to org sales domain
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    ArTranStats_Update:
      title: ArTranStats
      x-entity: ArTranStats
      type: object
      properties:
        bucketLastNight:
          description: Name of aging bucket last night
          maxLength: 255
          type: string
        bucketOnStatement:
          description: Name of aging bucket transaction was at the time of statement run
          maxLength: 255
          type: string
        hasActivity:
          description: 'If transaction has activities, used for screen visibility'
          type: boolean
        hasAttachments:
          description: 'If transaction has attachments, used for screen visibility'
          type: boolean
        hasNotes:
          description: 'If transaction has notes, used for screen visibility'
          type: boolean
        lastInJobId:
          description: Id of the last SyncJob this arTran was imported or updated with
          type: integer
          format: int64
        lastOutJobId:
          description: Id of the last SyncJob this arTran was sent out with
          type: integer
          format: int64
        lastStatementDate:
          description: Date of last statement
          type: string
          format: date-time
    ArTran_Update:
      title: ArTran
      x-entity: ArTran
      type: object
      required:
        - tranType
        - tranDate
        - glPostDate
        - refnum
        - amount
        - lines
      properties:
        amount:
          description: >-
            Transaction balance or open amount. For new trans will be equal to
            origAmount.

            If docType is PA or CM then must be < 0.
          type: number
          format: money
        billShip:
          description: Billing and Shipping info
          $ref: '#/components/schemas/ArTranBillShip_Update'
        closedDate:
          description: The date transaction was closed on
          type: string
          format: date-time
        comments:
          description: 'Comments left on transaction, by collector or customer'
          maxLength: 255
          type: string
        currency:
          description: >-
            Standard ISO 4217 currency code. Defaults to USD or the Customers
            default currency
          example: USD
          default: USD
          type: string
        discAmount:
          description: Discount amount
          type: number
          format: money
        discDate:
          description: >-
            The date discount is valid until, can be extended by grace days
            period
          type: string
          format: date
        dispute:
          $ref: '#/components/schemas/ArTranDispute_Update'
        docType:
          description: 'Document type - PA, IN, CM, DM, DD. 9ci Controlled based on TranType'
          default: '=tranType.docType'
          maxLength: 5
          type: string
        dueDate:
          description: Transaction due date
          default: '=tranDate'
          type: string
          format: date
        ext:
          description: Link to transaction fields not commonly used
          $ref: '#/components/schemas/ArTranExt_Update'
        flex:
          description: Link to transaction fields that may be customer defined
          $ref: '#/components/schemas/ArTranFlex_Update'
        glPostDate:
          description: The gl posting date in the gl period
          type: string
          format: date
        lineSum:
          description: >-
            Collection of select fields typically found on transaction lines,
            such as tax, freight, etc
          $ref: '#/components/schemas/ArTranLineSum_Update'
        lines:
          description: List of lines
          type: array
          items:
            title: ArTranLine
            type: object
            properties:
              id:
                description: ArTranLine id
                example: 954
                type: integer
                format: int64
        member:
          description: >-
            Link to transactions associated non-customer Org records such as
            branch, region, business unit
          $ref: '#/components/schemas/ArTranOrgMember_Update'
        origAmount:
          description: Transaction original amount
          default: '=amount'
          type: number
          format: money
        ponum:
          description: Purchase order number
          maxLength: 50
          type: string
        refnum:
          description: 'Transaction ref num, invoice number or check number'
          maxLength: 50
          type: string
        refnum2:
          description: Second reference number
          maxLength: 50
          type: string
        source:
          description: Link to string uniquely identifying this transaction
          title: ArTranSource
          type: object
          properties:
            id:
              description: ArTranSource id
              example: 954
              type: integer
              format: int64
        stats:
          $ref: '#/components/schemas/ArTranStats_Update'
        status:
          description: >-
            User definable status indicator, such as open, closed, void,
            disputed, approved. Defaults to 'Open', status.id=1.
          default: '1'
          title: ArStatus
          type: object
          properties:
            id:
              description: ArStatus id
              example: 954
              type: integer
              format: int64
        tags:
          description: the tags for this item
          type: array
          items:
            title: Tag
            type: object
            properties:
              id:
                description: Tag id
                example: 954
                type: integer
                format: int64
        term:
          description: Transaction arTerms reference
          title: ArTerm
          type: object
          properties:
            id:
              description: ArTerm id
              example: 954
              type: integer
              format: int64
        tranDate:
          description: 'Transaction date, invoice date, check date'
          type: string
          format: date
        tranType:
          description: The transaction type. Drives docType and logic on amount sign.
          title: ArTranType
          type: object
          properties:
            id:
              description: ArTranType id
              example: 954
              type: integer
              format: int64
    ArTranJournal_Create:
      title: ArTranJournal
      x-entity: ArTranJournal
      type: object
      required:
        - arTran
        - glAcct
        - credit
        - debit
      properties:
        arTran:
          description: ArTran this journal entry came to
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        credit:
          description: Credit amount
          type: number
          format: money
        debit:
          description: Debit amount
          type: number
          format: money
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        glPostBatch:
          description: >-
            Gl Batch it was posted to GL with, if null then it has not been
            posted to GL yet
          title: GlBatch
          type: object
          properties:
            id:
              description: GlBatch id
              example: 954
              type: integer
              format: int64
    ArTranJournal:
      title: ArTranJournal
      x-entity: ArTranJournal
      type: object
      required:
        - arTran
        - glAcct
        - credit
        - debit
      properties:
        arTran:
          description: ArTran this journal entry came to
          $ref: '#/components/schemas/ArTran'
        credit:
          description: Credit amount
          type: number
          format: money
        debit:
          description: Debit amount
          type: number
          format: money
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        glPostBatch:
          description: >-
            Gl Batch it was posted to GL with, if null then it has not been
            posted to GL yet
          $ref: '#/components/schemas/GlBatch'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
    ArTranJournal_Update:
      title: ArTranJournal
      x-entity: ArTranJournal
      type: object
      required:
        - arTran
        - glAcct
        - credit
        - debit
      properties:
        arTran:
          description: ArTran this journal entry came to
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        credit:
          description: Credit amount
          type: number
          format: money
        debit:
          description: Debit amount
          type: number
          format: money
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        glPostBatch:
          description: >-
            Gl Batch it was posted to GL with, if null then it has not been
            posted to GL yet
          title: GlBatch
          type: object
          properties:
            id:
              description: GlBatch id
              example: 954
              type: integer
              format: int64
    ArTranLineFlex_Update:
      title: ArTranLineFlex
      x-entity: ArTranLineFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    ArTranLineItem_Update:
      title: ArTranLineItem
      x-entity: ArTranLineItem
      type: object
      required:
        - unitPrice
        - qty
        - item
        - kind
      properties:
        code:
          description: >-
            Code of the item. Denormalized from item, overridden at creation
            time or imported from source system
          maxLength: 10
          type: string
        costAmount:
          description: >-
            The cogs (cost of goods sold) for the line used to calculate the
            gross margin for the ArTran
          default: '0'
          type: number
          format: money
        discAmount:
          description: 'The discount for the line, flat amount'
          type: number
          format: money
        discPct:
          description: 'the discount percent, discAmount = discPct * (units * unitPrice) '
          type: number
          format: money
        item:
          description: 'Invoiced item, must exist in items if imported, default to Product'
          title: Item
          type: object
          properties:
            id:
              description: Item id
              example: 954
              type: integer
              format: int64
        kind:
          description: The kind from item
          type: string
          enum:
            - Service
            - Product
            - Shipping
            - SvcCharge
            - FinCharge
            - Other
        name:
          description: The name of the item. Denormalized from Item.name
          maxLength: 255
          type: string
        num:
          description: The num of the item. Denormalized from item
          maxLength: 255
          type: string
        orderNum:
          description: the order number this line came from
          maxLength: 50
          type: string
        qty:
          description: Unit quantity.  amount should equal units * unitPrice
          type: number
          format: money
        taxAmount:
          description: 'The tax for the line, flat amount'
          type: number
          format: money
        taxCode:
          description: Imported tax code
          maxLength: 10
          type: string
        taxPct:
          description: >-
            Set to 0 if it should be exempt but want to show the tax code its
            from
          type: number
          format: money
        unitOfMeasure:
          description: >-
            Unit of measure. ex. each, hour, case, pound, etc... can just be
            null if not needed or imported
          maxLength: 50
          type: string
        unitPrice:
          description: The price or rate per unit in qty
          type: number
          format: money
    ArTranLine_Update:
      title: ArTranLine
      x-entity: ArTranLine
      type: object
      required:
        - arTran
        - lineType
        - kind
        - amount
      properties:
        amount:
          description: Line amount
          type: number
          format: money
        arTran:
          description: Transaction this line belongs to
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        comments:
          description: Comments with no impact
          maxLength: 255
          type: string
        description:
          type: string
        flex:
          description: Link to ArTranLineFlex
          $ref: '#/components/schemas/ArTranLineFlex_Update'
        glAcct:
          description: >-
            Gl account, from ArTran.tranType, reason, lineType, Item, imported
            or manually entered
          maxLength: 50
          type: string
        invisible:
          description: if true then don't show on invoice print or view by default
          type: boolean
        kind:
          description: kind of line
          example: 'Memo, Item'
          type: string
          enum:
            - Memo
            - Item
            - Discount
            - Tax
            - Journal
            - Comments
        lineItem:
          description: Link to ArTranLineItem for additional line info
          $ref: '#/components/schemas/ArTranLineItem_Update'
        lineSequence:
          description: Optional line sequence to order the lines on a invoice or report
          type: integer
        lineType:
          description: >-
            The type of line item, The 2 most common types will be Memo and
            Item. They can drive GL
          title: ArTranLineType
          type: object
          properties:
            id:
              description: ArTranLineType id
              example: 954
              type: integer
              format: int64
        sourceId:
          description: The source identifier for this line
          maxLength: 50
          type: string
    ArTranType_Create:
      title: ArTranType
      x-entity: ArTranType
      type: object
      required:
        - baseTranType
        - name
        - docType
        - code
      properties:
        baseTranType:
          description: The base system tran type this inherits from
          type: string
          enum:
            - IN
            - PA
            - PAM
            - CM
            - DM
            - DD
            - oCM
            - oDM
            - cCM
            - cDM
            - rCM
            - rDM
            - OA
            - RET
            - RPA
            - RD
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        docType:
          description: DocType behind this tranType. Should be driven by the baseTranType
          maxLength: 2
          type: string
        glAcct:
          description: >

            When GL is enabled this is the account that will be Debited for
            DM,IN & DD and Credited for CM & PA types.

            e.g. for a PA this will either be AR or an Unaaplied cash account.
            For an DM or IN this will normally be the AR account.
          maxLength: 50
          type: string
        glDetailAcct:
          description: >

            If the tran type is driving the detail, and a transaction is created
            without lines, then this will be what balances the GL.

            This is the account that will be Credited for DM,IN & DD and Debited
            for CM & PA types.

            e.g. for a PA this will be the Cash/Bank GL. For an DM this might be
            a balancing account.

            For a Write-off this would be the write off expense account.
          maxLength: 50
          type: string
        hideForClosed:
          description: >

            When true will be hidden by default when viewing closed
            transactions.

            Can be used to hide the opposing and behind the scenes transactions
            (used primarily for accounting) from customers.
          default: 'false'
          type: boolean
        isOpposingTran:
          type: boolean
        movedTranTypeId:
          type: integer
          format: int64
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        newRefnumGeneratorId:
          type: integer
          format: int64
        opposing:
          title: ArTranType
          type: object
          properties:
            id:
              description: ArTranType id
              example: 954
              type: integer
              format: int64
        reversingTranTypeId:
          type: integer
          format: int64
        source:
          type: string
        sourceId:
          type: string
        useReasonGL:
          description: >-
            Used primarily in Autocash posting, mostly used for write offs, as
            write offs usually requires reason code. 
          default: 'false'
          type: boolean
        visibleToAutocash:
          description: >-
            Whether this should be shown as an option in the drop down for
            autocash payment detail
          default: 'false'
          type: boolean
    ArTranType_Update:
      title: ArTranType
      x-entity: ArTranType
      type: object
      required:
        - baseTranType
        - name
        - docType
        - code
      properties:
        baseTranType:
          description: The base system tran type this inherits from
          type: string
          enum:
            - IN
            - PA
            - PAM
            - CM
            - DM
            - DD
            - oCM
            - oDM
            - cCM
            - cDM
            - rCM
            - rDM
            - OA
            - RET
            - RPA
            - RD
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        docType:
          description: DocType behind this tranType. Should be driven by the baseTranType
          maxLength: 2
          type: string
        glAcct:
          description: >

            When GL is enabled this is the account that will be Debited for
            DM,IN & DD and Credited for CM & PA types.

            e.g. for a PA this will either be AR or an Unaaplied cash account.
            For an DM or IN this will normally be the AR account.
          maxLength: 50
          type: string
        glDetailAcct:
          description: >

            If the tran type is driving the detail, and a transaction is created
            without lines, then this will be what balances the GL.

            This is the account that will be Credited for DM,IN & DD and Debited
            for CM & PA types.

            e.g. for a PA this will be the Cash/Bank GL. For an DM this might be
            a balancing account.

            For a Write-off this would be the write off expense account.
          maxLength: 50
          type: string
        hideForClosed:
          description: >

            When true will be hidden by default when viewing closed
            transactions.

            Can be used to hide the opposing and behind the scenes transactions
            (used primarily for accounting) from customers.
          default: 'false'
          type: boolean
        isOpposingTran:
          type: boolean
        movedTranTypeId:
          type: integer
          format: int64
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        newRefnumGeneratorId:
          type: integer
          format: int64
        opposing:
          title: ArTranType
          type: object
          properties:
            id:
              description: ArTranType id
              example: 954
              type: integer
              format: int64
        reversingTranTypeId:
          type: integer
          format: int64
        source:
          type: string
        sourceId:
          type: string
        useReasonGL:
          description: >-
            Used primarily in Autocash posting, mostly used for write offs, as
            write offs usually requires reason code. 
          default: 'false'
          type: boolean
        visibleToAutocash:
          description: >-
            Whether this should be shown as an option in the drop down for
            autocash payment detail
          default: 'false'
          type: boolean
    PaymentFlex_Create:
      title: PaymentFlex
      x-entity: PaymentFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    PaymentDetailFlex_Create:
      title: PaymentDetailFlex
      x-entity: PaymentDetailFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    PaymentDetail_Create:
      title: PaymentDetail
      x-entity: PaymentDetail
      type: object
      required:
        - payment
      properties:
        amount:
          description: Amount that applies to arTran (payAmount + discAmount)
          type: number
          format: money
        arTranType:
          description: >
            Ar tran type name, usually assigned in correction process but it can
            be predefined for deductions or credits

            - '*' for matched invoice (or any arTran), can only be assigned in
            correction

            - 'ER' for error, no match or customer validation

            - ar tran type name for new created records; for example DD, CM, OA,
            WOC.
          maxLength: 50
          type: string
        comments:
          description: >-
            Customer's or cash applier's comments that are posted to the new
            created arTran
          maxLength: 255
          type: string
        currency:
          description: Standard ISO 4217 currency code
          example: USD
          type: string
        custAccountId:
          description: Cust Account id
          type: integer
          format: int64
        custAccountNum:
          description: >-
            Cust Account number, if valid number - custAccountId is assigned
            based on it
          maxLength: 50
          type: string
        custId:
          description: Customer id
          type: integer
          format: int64
        custNum:
          description: >-
            Customer number, if valid number - customerId is assigned based on
            it
          maxLength: 50
          type: string
        customer:
          description: Payment detail's customer
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        discAmount:
          description: >-
            Disc date from matched arTran or new assigned disc date for new
            created arTran
          type: number
          format: money
        discDate:
          description: Discount date from matched arTran
          type: string
          format: date
        dueDate:
          description: >-
            Due date from matched arTran or new assigned due date for new
            created arTran
          type: string
          format: date
        flex:
          description: Link to paymentDetail flex
          $ref: '#/components/schemas/PaymentDetailFlex_Create'
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        isCorrected:
          description: >-
            True if corrected, if set and ar tran type is predefined it skips
            correction process (uauslaly used for known DD or CM
          type: boolean
        payAmount:
          description: Amount applied from the payment (payAmount = amount - discAmount)
          type: number
          format: money
        payment:
          description: Payment detail's payment
          title: Payment
          type: object
          properties:
            id:
              description: Payment id
              example: 954
              type: integer
              format: int64
        ponum:
          description: Matched arTran ponum or new assigned ponum on new created arTran
          maxLength: 50
          type: string
        reasonCode:
          description: Reason code provided by customer
          maxLength: 50
          type: string
        reasonId:
          description: >-
            Reason id assigned based on reasonCode or assigned in correction or
            by cash applier
          type: integer
          format: int64
        refnum:
          description: 'Reference number, invoice number'
          maxLength: 50
          type: string
        rmaNum:
          description: Matched arTran rmaNum or new assigned rmaNum on new created arTran
          maxLength: 50
          type: string
        source:
          description: Source of paymentDetail
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this paymentDetail
          maxLength: 50
          type: string
        storeNum:
          description: >-
            Matched arTran storeNum or new assigned storeNum on new created
            arTran
          maxLength: 50
          type: string
        tranDate:
          description: >-
            Transaction date of matched arTran or tranDate assigned on new
            created arTran
          type: string
          format: date
        xferOrg:
          description: >-
            partition Org assigned on inter company transactions from autocash
            (ICCM, ICDM and ICPA)
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    Payment_Create:
      title: Payment
      x-entity: Payment
      type: object
      required:
        - batch
        - amount
        - paymentDetails
      properties:
        accountNum:
          description: >-
            Bank account number to identify Customer from Customer Micr table,
            if routing num is null it is using account number

            for unique match.
          maxLength: 50
          type: string
        amount:
          description: Check amount
          type: number
          format: money
        applyCode:
          description: >
            Apply code that is used by Autopay. You can enable ATOB funcion by
            applyCode or use list of applyCodes to exclude payment

            from running autopay function.

            - to enable use of applyCode - acMatchSetup.autoPayApplyCodeMatch;
            for ATOB match - applyCode is `ATOB` (with regex) or contains  word
            `old`

            - to specify list of applyCodes to be excluded from autopay -
            acMatchSetup.autoPayExcludeApplyCode
          maxLength: 255
          type: string
        applyComments:
          description: >-
            Comments from customer how to apply payment or cash applier comment
            how payment was applied
          maxLength: 255
          type: string
        arAdjustPostedDate:
          description: >-
            Date that can override glPostDate (does not have to be in current
            open period)
          type: string
          format: date-time
        arTranType:
          description: >-
            Code for ArTranType; for example PA,PAM,RD,CC,ACH. It can also be
            assigned from arBatch.lockbox.tranType
          default: PA
          maxLength: 50
          type: string
        bankSequence:
          description: The banks sequence number
          maxLength: 50
          type: string
        batch:
          description: Batch of the payment
          title: Batch
          type: object
          properties:
            id:
              description: Batch id
              example: 954
              type: integer
              format: int64
        comments:
          description: >-
            Customer's or cash applier's comments, no special logic for this
            field in automated functions.
          maxLength: 255
          type: string
        currency:
          description: Standard ISO 4217 currency code
          example: USD
          type: string
        cust:
          description: Customer on the payment - Customer domain
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        custAccountNum:
          description: >-
            CustAccount number, when matched to custAccount record it can be
            used to assign customer
          maxLength: 50
          type: string
        custNum:
          description: Customer number
          maxLength: 50
          type: string
        errorCodeId:
          description: >-
            CorCode id if payment failed in correction on payment level; for
            example duplicate payment or customer not found
          type: integer
          format: int64
        errorDesc:
          description: Error message from payment reconcile process
          maxLength: 4000
          type: string
        flex:
          description: Link to PaymentFlex
          $ref: '#/components/schemas/PaymentFlex_Create'
        glAcct:
          description: GL account that overrides arTranType.glAcct
          maxLength: 50
          type: string
        glPostDate:
          description: The GL posting date in the gl period
          type: string
          format: date
        imageFileName:
          description: Name or path to check image
          maxLength: 255
          type: string
        isCorrected:
          description: >-
            True if payment was corrected. When true it skips initial correction
            process.
          type: boolean
        origCustAmount:
          description: Amount in original currency before conversion
          type: number
          format: money
        payDate:
          description: Check date
          type: string
          format: date
        paymentDetails:
          description: The paymentDetail in the payment
          type: array
          items:
            $ref: '#/components/schemas/PaymentDetail_Create'
        refnum:
          description: Check number
          maxLength: 50
          type: string
        routingNum:
          description: 'Bank routing num from the check used to match '
          maxLength: 255
          type: string
        source:
          description: The source for this payment
          maxLength: 255
          type: string
        sourceId:
          description: The source identifier for this payment
          maxLength: 255
          type: string
        status:
          description: 'status of the payment, status of completed processes'
          default: OPEN
          type: string
          enum:
            - OPEN
            - CORRECTED
            - RECONCILED
            - POSTED
            - OCR_PENDING
            - OCR_FAILED
            - OCR_PROCESSED
    Batch_Create:
      title: Batch
      x-entity: Batch
      type: object
      required:
        - controlAmount
        - batchType
        - batchDate
      properties:
        bankAccount:
          description: The bankAccount (Lockbox) for this batch
          title: BankAccount
          type: object
          properties:
            id:
              description: BankAccount id
              example: 954
              type: integer
              format: int64
        bankAccountNum:
          description: The bank account number assigned during import
          maxLength: 50
          type: string
        bankSequence:
          description: The bank sequence number
          type: integer
          format: int64
        batchDate:
          description: Date of the batch
          type: string
          format: date
        batchType:
          description: Type of batch
          type: string
          enum:
            - Lockbox
            - Manual
            - Merge
            - ACH
            - IACH
            - Card
            - Wire
        companyId:
          type: integer
          format: int64
        controlAmount:
          description: Control Amount should equal the sum of payments amount
          type: number
          format: money
        divisionId:
          type: integer
          format: int64
        fileName:
          description: >-
            File name the batch was imported from or the ACH file generated for
            this batch
          maxLength: 255
          type: string
        flex:
          description: link to ArBatchFlex
          title: ArBatchFlex
          type: object
          properties:
            id:
              description: ArBatchFlex id
              example: 954
              type: integer
              format: int64
        glPostDate:
          description: The gl posting date in the gl period
          type: string
          format: date
        glPostPeriod:
          description: GL Post Period in YYYYMM format for the glPostDate
          maxLength: 7
          type: string
        lockbox:
          description: 'The bank lockbox, should be entry from Lockbox name resource'
          maxLength: 50
          type: string
        name:
          description: A descriptive name for this batch
          maxLength: 50
          type: string
        partitionOrg:
          description: The partition org this batch belongs to
          title: PartitionOrg
          type: object
          properties:
            id:
              description: PartitionOrg id
              example: 954
              type: integer
              format: int64
        payments:
          description: The payments in the batch
          type: array
          items:
            $ref: '#/components/schemas/Payment_Create'
        source:
          description: The lockbox.bankNumber to lookup
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this batch
          maxLength: 50
          type: string
    Batch_Update:
      title: Batch
      x-entity: Batch
      type: object
      required:
        - controlAmount
        - batchType
        - batchDate
      properties:
        bankAccount:
          description: The bankAccount (Lockbox) for this batch
          title: BankAccount
          type: object
          properties:
            id:
              description: BankAccount id
              example: 954
              type: integer
              format: int64
        bankAccountNum:
          description: The bank account number assigned during import
          maxLength: 50
          type: string
        bankSequence:
          description: The bank sequence number
          type: integer
          format: int64
        batchDate:
          description: Date of the batch
          type: string
          format: date
        batchType:
          description: Type of batch
          type: string
          enum:
            - Lockbox
            - Manual
            - Merge
            - ACH
            - IACH
            - Card
            - Wire
        companyId:
          type: integer
          format: int64
        controlAmount:
          description: Control Amount should equal the sum of payments amount
          type: number
          format: money
        divisionId:
          type: integer
          format: int64
        fileName:
          description: >-
            File name the batch was imported from or the ACH file generated for
            this batch
          maxLength: 255
          type: string
        flex:
          description: link to ArBatchFlex
          title: ArBatchFlex
          type: object
          properties:
            id:
              description: ArBatchFlex id
              example: 954
              type: integer
              format: int64
        glPostDate:
          description: The gl posting date in the gl period
          type: string
          format: date
        glPostPeriod:
          description: GL Post Period in YYYYMM format for the glPostDate
          maxLength: 7
          type: string
        lockbox:
          description: 'The bank lockbox, should be entry from Lockbox name resource'
          maxLength: 50
          type: string
        name:
          description: A descriptive name for this batch
          maxLength: 50
          type: string
        partitionOrg:
          description: The partition org this batch belongs to
          title: PartitionOrg
          type: object
          properties:
            id:
              description: PartitionOrg id
              example: 954
              type: integer
              format: int64
        payments:
          description: The payments in the batch
          type: array
          items:
            title: Payment
            type: object
            properties:
              id:
                description: Payment id
                example: 954
                type: integer
                format: int64
        source:
          description: The lockbox.bankNumber to lookup
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this batch
          maxLength: 50
          type: string
    CorCode:
      title: CorCode
      x-entity: CorCode
      type: object
      required:
        - name
        - code
      properties:
        arTranType:
          type: string
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        confidenceLevel:
          type: integer
        corCodeType:
          type: integer
          format: int64
        corCodeTypeDesc:
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        reasonId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    CorCode_Update:
      title: CorCode
      x-entity: CorCode
      type: object
      required:
        - name
        - code
      properties:
        arTranType:
          type: string
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        confidenceLevel:
          type: integer
        corCodeType:
          type: integer
          format: int64
        corCodeTypeDesc:
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        reasonId:
          type: integer
          format: int64
    AcLayoutField_Create:
      title: AcLayoutField
      x-entity: AcLayoutField
      type: object
      required:
        - name
      properties:
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        fieldFormat:
          description: >-
            Formatting for the field, for example date can be 'yyMMdd' and
            amount '0000000000000.00#' 
          example: yyMMdd
          maxLength: 255
          type: string
        fieldFormula:
          description: Formula to run between amount fields
          maxLength: 255
          type: string
        fieldLength:
          description: Length of fixed field
          type: integer
        fieldName:
          description: Domain field name
          maxLength: 50
          type: string
        fieldSequence:
          description: Field sequence to read the line
          type: integer
        isIndicator:
          description: >-
            Indicator for the line to be imported, for example B for ArBatch, C
            for Payments and D for PaymentDetails 
          type: boolean
        isUnique:
          description: >-
            Flag to create new record if field has unique value (continue to the
            next line if value is the same) 
          type: boolean
        layoutRecord:
          title: AcLayoutRecord
          type: object
          properties:
            id:
              description: AcLayoutRecord id
              example: 954
              type: integer
              format: int64
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        positionEnd:
          description: 'Position of end of the field for fixed length field '
          type: integer
        positionStart:
          description: 'Position of start of the field for fixed length field '
          type: integer
        tableName:
          description: Domain name
          maxLength: 255
          type: string
    AcLayoutField:
      title: AcLayoutField
      x-entity: AcLayoutField
      type: object
      required:
        - name
      properties:
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        fieldFormat:
          description: >-
            Formatting for the field, for example date can be 'yyMMdd' and
            amount '0000000000000.00#' 
          example: yyMMdd
          maxLength: 255
          type: string
        fieldFormula:
          description: Formula to run between amount fields
          maxLength: 255
          type: string
        fieldLength:
          description: Length of fixed field
          type: integer
        fieldName:
          description: Domain field name
          maxLength: 50
          type: string
        fieldSequence:
          description: Field sequence to read the line
          type: integer
        isIndicator:
          description: >-
            Indicator for the line to be imported, for example B for ArBatch, C
            for Payments and D for PaymentDetails 
          type: boolean
        isUnique:
          description: >-
            Flag to create new record if field has unique value (continue to the
            next line if value is the same) 
          type: boolean
        layoutRecord:
          $ref: '#/components/schemas/AcLayoutRecord'
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        positionEnd:
          description: 'Position of end of the field for fixed length field '
          type: integer
        positionStart:
          description: 'Position of start of the field for fixed length field '
          type: integer
        tableName:
          description: Domain name
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    AcLayoutRecord:
      title: AcLayoutRecord
      x-entity: AcLayoutRecord
      type: object
      required:
        - name
      properties:
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        layoutFields:
          type: array
          items:
            $ref: '#/components/schemas/AcLayoutField'
        layoutImport:
          $ref: '#/components/schemas/AcLayoutImport'
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        recordGroup:
          maxLength: 50
          type: string
        recordSequence:
          type: integer
        recordType:
          description: 'Record type, for example H for ArBatch'
          maxLength: 255
          type: string
        startFromLineNumber:
          description: Specify if you want to skip some lines
          type: integer
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    AcLayoutImport:
      title: AcLayoutImport
      x-entity: AcLayoutImport
      type: object
      required:
        - code
        - name
      properties:
        batchType:
          description: Type of the batch to be set
          type: string
          enum:
            - Lockbox
            - Manual
            - Merge
            - ACH
            - IACH
            - Card
            - Wire
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        deleteEmptyBatch:
          description: Delete empty batches after import
          type: boolean
        delimiter:
          description: Delimiter in csv file
          maxLength: 100
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        discountGroupId:
          description: >-
            Discount group to be used in correction process for the imported
            batch
          type: integer
          format: int64
        isPreReconciled:
          description: If true sets all payments reconciled
          default: '0'
          type: boolean
        isSetCustomer:
          description: If true sets customers on all payments after import
          default: '0'
          type: boolean
        isSumControlAmount:
          type: boolean
        isSumPayAmount:
          type: boolean
        isUniqueByFileName:
          type: boolean
        layoutFormat:
          description: Layout format
          maxLength: 255
          type: string
        layoutRecords:
          type: array
          items:
            $ref: '#/components/schemas/AcLayoutRecord'
        layoutType:
          description: Layout type
          type: integer
        lookupBatchType:
          description: Type of batch to lookup; for example coupon file for bank files
          maxLength: 100
          type: string
        matchGroupId:
          description: Match group to be used in correction process for the imported batch
          type: integer
          format: int64
        memoGroupId:
          description: Memo group to be used in correction process for the imported batch
          type: integer
          format: int64
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        offsetGroupId:
          description: Offset group to be used in correction process for the imported batch
          type: integer
          format: int64
        quoteChar:
          description: Quote for character field
          maxLength: 100
          type: string
        scanDirectory:
          description: Name of directory to be scanned
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    AcLayoutField_Update:
      title: AcLayoutField
      x-entity: AcLayoutField
      type: object
      required:
        - name
      properties:
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        fieldFormat:
          description: >-
            Formatting for the field, for example date can be 'yyMMdd' and
            amount '0000000000000.00#' 
          example: yyMMdd
          maxLength: 255
          type: string
        fieldFormula:
          description: Formula to run between amount fields
          maxLength: 255
          type: string
        fieldLength:
          description: Length of fixed field
          type: integer
        fieldName:
          description: Domain field name
          maxLength: 50
          type: string
        fieldSequence:
          description: Field sequence to read the line
          type: integer
        isIndicator:
          description: >-
            Indicator for the line to be imported, for example B for ArBatch, C
            for Payments and D for PaymentDetails 
          type: boolean
        isUnique:
          description: >-
            Flag to create new record if field has unique value (continue to the
            next line if value is the same) 
          type: boolean
        layoutRecord:
          title: AcLayoutRecord
          type: object
          properties:
            id:
              description: AcLayoutRecord id
              example: 954
              type: integer
              format: int64
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        positionEnd:
          description: 'Position of end of the field for fixed length field '
          type: integer
        positionStart:
          description: 'Position of start of the field for fixed length field '
          type: integer
        tableName:
          description: Domain name
          maxLength: 255
          type: string
    AcLayoutRecord_Create:
      title: AcLayoutRecord
      x-entity: AcLayoutRecord
      type: object
      required:
        - name
      properties:
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        layoutFields:
          type: array
          items:
            $ref: '#/components/schemas/AcLayoutField_Create'
        layoutImport:
          title: AcLayoutImport
          type: object
          properties:
            id:
              description: AcLayoutImport id
              example: 954
              type: integer
              format: int64
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        recordType:
          description: 'Record type, for example H for ArBatch'
          maxLength: 255
          type: string
        startFromLineNumber:
          description: Specify if you want to skip some lines
          type: integer
    AcLayoutImport_Create:
      title: AcLayoutImport
      x-entity: AcLayoutImport
      type: object
      required:
        - code
        - name
      properties:
        batchType:
          description: Type of the batch to be set
          type: string
          enum:
            - Lockbox
            - Manual
            - Merge
            - ACH
            - IACH
            - Card
            - Wire
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        deleteEmptyBatch:
          description: Delete empty batches after import
          type: boolean
        delimiter:
          description: Delimiter in csv file
          maxLength: 100
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        discountGroupId:
          description: >-
            Discount group to be used in correction process for the imported
            batch
          type: integer
          format: int64
        isPreReconciled:
          description: If true sets all payments reconciled
          default: '0'
          type: boolean
        isSetCustomer:
          description: If true sets customers on all payments after import
          default: '0'
          type: boolean
        isSumControlAmount:
          type: boolean
        isSumPayAmount:
          type: boolean
        isUniqueByFileName:
          type: boolean
        layoutFormat:
          description: Layout format
          maxLength: 255
          type: string
        layoutRecords:
          type: array
          items:
            $ref: '#/components/schemas/AcLayoutRecord_Create'
        layoutType:
          description: Layout type
          type: integer
        lookupBatchType:
          description: Type of batch to lookup; for example coupon file for bank files
          maxLength: 100
          type: string
        matchGroupId:
          description: Match group to be used in correction process for the imported batch
          type: integer
          format: int64
        memoGroupId:
          description: Memo group to be used in correction process for the imported batch
          type: integer
          format: int64
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        offsetGroupId:
          description: Offset group to be used in correction process for the imported batch
          type: integer
          format: int64
        quoteChar:
          description: Quote for character field
          maxLength: 100
          type: string
    AcLayoutRecord_Update:
      title: AcLayoutRecord
      x-entity: AcLayoutRecord
      type: object
      required:
        - name
      properties:
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        layoutFields:
          type: array
          items:
            $ref: '#/components/schemas/AcLayoutField_Update'
        layoutImport:
          title: AcLayoutImport
          type: object
          properties:
            id:
              description: AcLayoutImport id
              example: 954
              type: integer
              format: int64
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        recordType:
          description: 'Record type, for example H for ArBatch'
          maxLength: 255
          type: string
        startFromLineNumber:
          description: Specify if you want to skip some lines
          type: integer
    AcLayoutImport_Update:
      title: AcLayoutImport
      x-entity: AcLayoutImport
      type: object
      required:
        - code
        - name
      properties:
        batchType:
          description: Type of the batch to be set
          type: string
          enum:
            - Lockbox
            - Manual
            - Merge
            - ACH
            - IACH
            - Card
            - Wire
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        deleteEmptyBatch:
          description: Delete empty batches after import
          type: boolean
        delimiter:
          description: Delimiter in csv file
          maxLength: 100
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        discountGroupId:
          description: >-
            Discount group to be used in correction process for the imported
            batch
          type: integer
          format: int64
        isPreReconciled:
          description: If true sets all payments reconciled
          default: '0'
          type: boolean
        isSetCustomer:
          description: If true sets customers on all payments after import
          default: '0'
          type: boolean
        isSumControlAmount:
          type: boolean
        isSumPayAmount:
          type: boolean
        isUniqueByFileName:
          type: boolean
        layoutFormat:
          description: Layout format
          maxLength: 255
          type: string
        layoutRecords:
          type: array
          items:
            $ref: '#/components/schemas/AcLayoutRecord_Update'
        layoutType:
          description: Layout type
          type: integer
        lookupBatchType:
          description: Type of batch to lookup; for example coupon file for bank files
          maxLength: 100
          type: string
        matchGroupId:
          description: Match group to be used in correction process for the imported batch
          type: integer
          format: int64
        memoGroupId:
          description: Memo group to be used in correction process for the imported batch
          type: integer
          format: int64
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        offsetGroupId:
          description: Offset group to be used in correction process for the imported batch
          type: integer
          format: int64
        quoteChar:
          description: Quote for character field
          maxLength: 100
          type: string
    AcMicrBlacklist_Create:
      title: AcMicrBlacklist
      x-entity: AcMicrBlacklist
      type: object
      required:
        - routingNum
        - accountNum
      properties:
        accountNum:
          description: Holder accountNum
          maxLength: 50
          type: string
        name:
          description: The name
          maxLength: 50
          type: string
        routingNum:
          description: Bank routingNum
          maxLength: 50
          type: string
    AcMicrBlacklist:
      title: AcMicrBlacklist
      x-entity: AcMicrBlacklist
      type: object
      required:
        - routingNum
        - accountNum
      properties:
        accountNum:
          description: Holder accountNum
          maxLength: 50
          type: string
        name:
          description: The name
          maxLength: 50
          type: string
        routingNum:
          description: Bank routingNum
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    AcMicrBlacklist_Update:
      title: AcMicrBlacklist
      x-entity: AcMicrBlacklist
      type: object
      required:
        - routingNum
        - accountNum
      properties:
        accountNum:
          description: Holder accountNum
          maxLength: 50
          type: string
        name:
          description: The name
          maxLength: 50
          type: string
        routingNum:
          description: Bank routingNum
          maxLength: 50
          type: string
    PaymentFlex:
      title: PaymentFlex
      x-entity: PaymentFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    Payment:
      title: Payment
      x-entity: Payment
      type: object
      required:
        - batch
        - amount
      properties:
        accountNum:
          description: >-
            Bank account number to identify Customer from Customer Micr table,
            if routing num is null it is using account number

            for unique match.
          maxLength: 50
          type: string
        amount:
          description: Check amount
          type: number
          format: money
        apiSynced:
          description: True if it is synced from PaymentApi
          type: boolean
        applyCode:
          description: >
            Apply code that is used by Autopay. You can enable ATOB funcion by
            applyCode or use list of applyCodes to exclude payment

            from running autopay function.

            - to enable use of applyCode - acMatchSetup.autoPayApplyCodeMatch;
            for ATOB match - applyCode is `ATOB` (with regex) or contains  word
            `old`

            - to specify list of applyCodes to be excluded from autopay -
            acMatchSetup.autoPayExcludeApplyCode
          maxLength: 255
          type: string
        applyComments:
          description: >-
            Comments from customer how to apply payment or cash applier comment
            how payment was applied
          maxLength: 255
          type: string
        arAdjustPostedDate:
          description: >-
            Date that can override glPostDate (does not have to be in current
            open period)
          type: string
          format: date-time
        arPostedDate:
          description: Date payment was posted to ar
          type: string
          format: date-time
        arTranId:
          description: Id of arTran created by posting the payment
          type: integer
          format: int64
        arTranType:
          description: >-
            Code for ArTranType; for example PA,PAM,RD,CC,ACH. It can also be
            assigned from arBatch.lockbox.tranType
          default: PA
          maxLength: 50
          type: string
        bankSequence:
          description: The banks sequence number
          maxLength: 50
          type: string
        batch:
          description: Batch of the payment
          $ref: '#/components/schemas/Batch'
        comments:
          description: >-
            Customer's or cash applier's comments, no special logic for this
            field in automated functions.
          maxLength: 255
          type: string
        corCode:
          description: >-
            Cor code of matched payment details in correction, used to assign
            confidence level
          $ref: '#/components/schemas/CorCode'
        currency:
          description: Standard ISO 4217 currency code
          example: USD
          type: string
        cust:
          description: Customer on the payment - Customer domain
          $ref: '#/components/schemas/Customer'
        custAccountId:
          description: 'CustAccount id, can be used to assign customer on the payment'
          type: integer
          format: int64
        custAccountNum:
          description: >-
            CustAccount number, when matched to custAccount record it can be
            used to assign customer
          maxLength: 50
          type: string
        custNum:
          description: Customer number
          maxLength: 50
          type: string
        errorCodeId:
          description: >-
            CorCode id if payment failed in correction on payment level; for
            example duplicate payment or customer not found
          type: integer
          format: int64
        errorDesc:
          description: Error message from payment reconcile process
          maxLength: 4000
          type: string
        flex:
          description: Link to PaymentFlex
          $ref: '#/components/schemas/PaymentFlex'
        glAcct:
          description: GL account that overrides arTranType.glAcct
          maxLength: 50
          type: string
        glPostDate:
          description: The GL posting date in the gl period
          type: string
          format: date
        imageFileName:
          description: Name or path to check image
          maxLength: 255
          type: string
        isCorrected:
          description: >-
            True if payment was corrected. When true it skips initial correction
            process.
          type: boolean
        isError:
          description: >
            True if payment cannot be reconciled and has errors or
            paymentDetails have errors.

            errorDesc field may provide more information here or in the
            paymentDetail for this payment.
          type: boolean
        isMerged:
          description: >-
            True if payment under batchType.Merge is merged with Lockbox
            payment. Once Merge payment is merged it cannot be merged again

            to different Lockbox payment
          type: boolean
        isOcr:
          description: true if check image was processed by OCR
          type: boolean
        isReconciled:
          description: True if payment passed reconcile validation
          type: boolean
        oldCustNum:
          description: Old customer number before correction assigned custNum
          maxLength: 50
          type: string
        origCustAmount:
          description: Amount in original currency before conversion
          type: number
          format: money
        payDate:
          description: Check date
          type: string
          format: date
        refnum:
          description: Check number
          maxLength: 50
          type: string
        routingNum:
          description: 'Bank routing num from the check used to match '
          maxLength: 255
          type: string
        source:
          description: The source for this payment
          maxLength: 255
          type: string
        sourceId:
          description: The source identifier for this payment
          maxLength: 255
          type: string
        status:
          description: 'status of the payment, status of completed processes'
          default: OPEN
          type: string
          enum:
            - OPEN
            - CORRECTED
            - RECONCILED
            - POSTED
            - OCR_PENDING
            - OCR_FAILED
            - OCR_PROCESSED
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    PaymentFlex_Update:
      title: PaymentFlex
      x-entity: PaymentFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    Payment_Update:
      title: Payment
      x-entity: Payment
      type: object
      required:
        - batch
        - amount
        - paymentDetails
      properties:
        accountNum:
          description: >-
            Bank account number to identify Customer from Customer Micr table,
            if routing num is null it is using account number

            for unique match.
          maxLength: 50
          type: string
        amount:
          description: Check amount
          type: number
          format: money
        applyCode:
          description: >
            Apply code that is used by Autopay. You can enable ATOB funcion by
            applyCode or use list of applyCodes to exclude payment

            from running autopay function.

            - to enable use of applyCode - acMatchSetup.autoPayApplyCodeMatch;
            for ATOB match - applyCode is `ATOB` (with regex) or contains  word
            `old`

            - to specify list of applyCodes to be excluded from autopay -
            acMatchSetup.autoPayExcludeApplyCode
          maxLength: 255
          type: string
        applyComments:
          description: >-
            Comments from customer how to apply payment or cash applier comment
            how payment was applied
          maxLength: 255
          type: string
        arAdjustPostedDate:
          description: >-
            Date that can override glPostDate (does not have to be in current
            open period)
          type: string
          format: date-time
        arTranType:
          description: >-
            Code for ArTranType; for example PA,PAM,RD,CC,ACH. It can also be
            assigned from arBatch.lockbox.tranType
          default: PA
          maxLength: 50
          type: string
        bankSequence:
          description: The banks sequence number
          maxLength: 50
          type: string
        batch:
          description: Batch of the payment
          title: Batch
          type: object
          properties:
            id:
              description: Batch id
              example: 954
              type: integer
              format: int64
        comments:
          description: >-
            Customer's or cash applier's comments, no special logic for this
            field in automated functions.
          maxLength: 255
          type: string
        currency:
          description: Standard ISO 4217 currency code
          example: USD
          type: string
        cust:
          description: Customer on the payment - Customer domain
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        custAccountNum:
          description: >-
            CustAccount number, when matched to custAccount record it can be
            used to assign customer
          maxLength: 50
          type: string
        custNum:
          description: Customer number
          maxLength: 50
          type: string
        errorCodeId:
          description: >-
            CorCode id if payment failed in correction on payment level; for
            example duplicate payment or customer not found
          type: integer
          format: int64
        errorDesc:
          description: Error message from payment reconcile process
          maxLength: 4000
          type: string
        flex:
          description: Link to PaymentFlex
          $ref: '#/components/schemas/PaymentFlex_Update'
        glAcct:
          description: GL account that overrides arTranType.glAcct
          maxLength: 50
          type: string
        glPostDate:
          description: The GL posting date in the gl period
          type: string
          format: date
        imageFileName:
          description: Name or path to check image
          maxLength: 255
          type: string
        isCorrected:
          description: >-
            True if payment was corrected. When true it skips initial correction
            process.
          type: boolean
        origCustAmount:
          description: Amount in original currency before conversion
          type: number
          format: money
        payDate:
          description: Check date
          type: string
          format: date
        paymentDetails:
          description: The paymentDetail in the payment
          type: array
          items:
            title: PaymentDetail
            type: object
            properties:
              id:
                description: PaymentDetail id
                example: 954
                type: integer
                format: int64
        refnum:
          description: Check number
          maxLength: 50
          type: string
        routingNum:
          description: 'Bank routing num from the check used to match '
          maxLength: 255
          type: string
        source:
          description: The source for this payment
          maxLength: 255
          type: string
        sourceId:
          description: The source identifier for this payment
          maxLength: 255
          type: string
        status:
          description: 'status of the payment, status of completed processes'
          default: OPEN
          type: string
          enum:
            - OPEN
            - CORRECTED
            - RECONCILED
            - POSTED
            - OCR_PENDING
            - OCR_FAILED
            - OCR_PROCESSED
    PaymentDeleted:
      title: PaymentDeleted
      x-entity: PaymentDeleted
      type: object
      properties:
        amount:
          description: Amount of deleted payment
          type: number
          format: money
        arBatchId:
          description: Batch id of deleted payment
          type: integer
          format: int64
        custNum:
          description: CustNum of deleted payment
          maxLength: 255
          type: string
        deletedBy:
          description: 'Id of user who deleted the payment '
          type: integer
          format: int64
        deletedDate:
          description: Date when payment was deleted
          type: string
          format: date-time
        payDate:
          description: PayDate of deleted payment
          type: string
          format: date
        refnum:
          description: Refnum of deleted payment
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
    PaymentDetailFlex:
      title: PaymentDetailFlex
      x-entity: PaymentDetailFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    PaymentDetail:
      title: PaymentDetail
      x-entity: PaymentDetail
      type: object
      required:
        - payment
      properties:
        amount:
          description: Amount that applies to arTran (payAmount + discAmount)
          type: number
          format: money
        arTranId:
          description: Id of matched arTran or id of created arTran after post
          type: integer
          format: int64
        arTranType:
          description: >
            Ar tran type name, usually assigned in correction process but it can
            be predefined for deductions or credits

            - '*' for matched invoice (or any arTran), can only be assigned in
            correction

            - 'ER' for error, no match or customer validation

            - ar tran type name for new created records; for example DD, CM, OA,
            WOC.
          maxLength: 50
          type: string
        comments:
          description: >-
            Customer's or cash applier's comments that are posted to the new
            created arTran
          maxLength: 255
          type: string
        corCodeId:
          description: Cor code id after correction
          type: integer
          format: int64
        createdCodeId:
          description: >-
            Cor code id after correction for created paymentDetail with reason
            why record was created
          type: integer
          format: int64
        createdDiscCodeId:
          description: >-
            Cor code id after correction for created paymentDetail with mismatch
            disocunt reason why record was created
          type: integer
          format: int64
        currency:
          description: Standard ISO 4217 currency code
          example: USD
          type: string
        custAccountId:
          description: Cust Account id
          type: integer
          format: int64
        custAccountNum:
          description: >-
            Cust Account number, if valid number - custAccountId is assigned
            based on it
          maxLength: 50
          type: string
        custId:
          description: Customer id
          type: integer
          format: int64
        custNum:
          description: >-
            Customer number, if valid number - customerId is assigned based on
            it
          maxLength: 50
          type: string
        customer:
          description: Payment detail's customer
          $ref: '#/components/schemas/Customer'
        discAmount:
          description: >-
            Disc date from matched arTran or new assigned disc date for new
            created arTran
          type: number
          format: money
        discDate:
          description: Discount date from matched arTran
          type: string
          format: date
        dueDate:
          description: >-
            Due date from matched arTran or new assigned due date for new
            created arTran
          type: string
          format: date
        errorCodeId:
          description: Cor code id after correction failed with reason why it failed
          type: integer
          format: int64
        errorDesc:
          description: Error message from reconcile process
          maxLength: 4000
          type: string
        flex:
          description: Link to paymentDetail flex
          $ref: '#/components/schemas/PaymentDetailFlex'
        foundCodeId:
          description: >-
            Cor code id after correction found a match with info how the match
            was found
          type: integer
          format: int64
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        isCorrected:
          description: >-
            True if corrected, if set and ar tran type is predefined it skips
            correction process (uauslaly used for known DD or CM
          type: boolean
        isError:
          description: >-
            True if paymentDetail cannot be reconciled, errorDesc field may
            provide more information here
          type: boolean
        isOriginalCorrection:
          description: True if correction runs the first time
          type: boolean
        isSystemGenerated:
          description: True if created by system during correction process
          type: boolean
        match:
          description: ArTranMatch for matched arTran
          type: string
        misMatchAmount:
          description: Amount mismatched to matched arTran
          type: number
          format: money
        misMatchDiscAmount:
          description: Disc amount mismatched to matched arTran
          type: number
          format: money
        oldAmount:
          description: Amount before correction that came with remittance advise
          type: number
          format: money
        oldCustNum:
          description: Customer number before correction that came with remittance advise
          maxLength: 50
          type: string
        oldDiscAmount:
          description: Disc amount before correction that came with remittance advise
          type: number
          format: money
        oldPayAmount:
          description: Pay amount before correction that came with remittance advise
          type: number
          format: money
        oldReasonCode:
          description: Reason code before correction that came with remittance advise
          maxLength: 50
          type: string
        oldRefnum:
          description: Ref num before correction that came with remittance advise
          maxLength: 50
          type: string
        oldTranDate:
          description: Tran date before correction that came with remittance advise
          type: string
          format: date-time
        origArTranId:
          description: >-
            Assigned on new created arTrans, id of original arTran; for example
            original invoice id on new created write off
          type: integer
          format: int64
        payAmount:
          description: Amount applied from the payment (payAmount = amount - discAmount)
          type: number
          format: money
        payment:
          description: Payment detail's payment
          $ref: '#/components/schemas/Payment'
        ponum:
          description: Matched arTran ponum or new assigned ponum on new created arTran
          maxLength: 50
          type: string
        reasonCode:
          description: Reason code provided by customer
          maxLength: 50
          type: string
        reasonId:
          description: >-
            Reason id assigned based on reasonCode or assigned in correction or
            by cash applier
          type: integer
          format: int64
        refnum:
          description: 'Reference number, invoice number'
          maxLength: 50
          type: string
        rmaNum:
          description: Matched arTran rmaNum or new assigned rmaNum on new created arTran
          maxLength: 50
          type: string
        shortPay:
          description: >-
            Set to true in processing if this is intentionally short paid. like
            in apply to oldest balance
          type: boolean
        source:
          description: Source of paymentDetail
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this paymentDetail
          maxLength: 50
          type: string
        storeNum:
          description: >-
            Matched arTran storeNum or new assigned storeNum on new created
            arTran
          maxLength: 50
          type: string
        tranDate:
          description: >-
            Transaction date of matched arTran or tranDate assigned on new
            created arTran
          type: string
          format: date
        xferOrg:
          description: >-
            partition Org assigned on inter company transactions from autocash
            (ICCM, ICDM and ICPA)
          $ref: '#/components/schemas/Org'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    PaymentDetailFlex_Update:
      title: PaymentDetailFlex
      x-entity: PaymentDetailFlex
      type: object
      properties:
        date1:
          description: Flexible date field
          type: string
          format: date-time
        date2:
          description: Flexible date field
          type: string
          format: date-time
        date3:
          description: Flexible date field
          type: string
          format: date-time
        date4:
          description: Flexible date field
          type: string
          format: date-time
        num1:
          description: Flexible numeric field 1
          type: number
          format: money
        num2:
          description: Flexible numeric field 2
          type: number
          format: money
        num3:
          description: Flexible numeric field 3
          type: number
          format: money
        num4:
          description: Flexible numeric field 4
          type: number
          format: money
        num5:
          description: Flexible numeric field 5
          type: number
          format: money
        num6:
          description: Flexible numeric field 6
          type: number
          format: money
        text1:
          description: Flexible text field 1
          maxLength: 255
          type: string
        text10:
          description: Flexible text field 10
          maxLength: 255
          type: string
        text2:
          description: Flexible text field 2
          maxLength: 255
          type: string
        text3:
          description: Flexible text field 3
          maxLength: 255
          type: string
        text4:
          description: Flexible text field 4
          maxLength: 255
          type: string
        text5:
          description: Flexible text field 5
          maxLength: 255
          type: string
        text6:
          description: Flexible text field 6
          maxLength: 255
          type: string
        text7:
          description: Flexible text field 7
          maxLength: 255
          type: string
        text8:
          description: Flexible text field 8
          maxLength: 255
          type: string
        text9:
          description: Flexible text field 9
          maxLength: 255
          type: string
    PaymentDetail_Update:
      title: PaymentDetail
      x-entity: PaymentDetail
      type: object
      required:
        - payment
      properties:
        amount:
          description: Amount that applies to arTran (payAmount + discAmount)
          type: number
          format: money
        arTranType:
          description: >
            Ar tran type name, usually assigned in correction process but it can
            be predefined for deductions or credits

            - '*' for matched invoice (or any arTran), can only be assigned in
            correction

            - 'ER' for error, no match or customer validation

            - ar tran type name for new created records; for example DD, CM, OA,
            WOC.
          maxLength: 50
          type: string
        comments:
          description: >-
            Customer's or cash applier's comments that are posted to the new
            created arTran
          maxLength: 255
          type: string
        currency:
          description: Standard ISO 4217 currency code
          example: USD
          type: string
        custAccountId:
          description: Cust Account id
          type: integer
          format: int64
        custAccountNum:
          description: >-
            Cust Account number, if valid number - custAccountId is assigned
            based on it
          maxLength: 50
          type: string
        custId:
          description: Customer id
          type: integer
          format: int64
        custNum:
          description: >-
            Customer number, if valid number - customerId is assigned based on
            it
          maxLength: 50
          type: string
        customer:
          description: Payment detail's customer
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        discAmount:
          description: >-
            Disc date from matched arTran or new assigned disc date for new
            created arTran
          type: number
          format: money
        discDate:
          description: Discount date from matched arTran
          type: string
          format: date
        dueDate:
          description: >-
            Due date from matched arTran or new assigned due date for new
            created arTran
          type: string
          format: date
        flex:
          description: Link to paymentDetail flex
          $ref: '#/components/schemas/PaymentDetailFlex_Update'
        glAcct:
          description: Gl Account
          maxLength: 50
          type: string
        isCorrected:
          description: >-
            True if corrected, if set and ar tran type is predefined it skips
            correction process (uauslaly used for known DD or CM
          type: boolean
        payAmount:
          description: Amount applied from the payment (payAmount = amount - discAmount)
          type: number
          format: money
        payment:
          description: Payment detail's payment
          title: Payment
          type: object
          properties:
            id:
              description: Payment id
              example: 954
              type: integer
              format: int64
        ponum:
          description: Matched arTran ponum or new assigned ponum on new created arTran
          maxLength: 50
          type: string
        reasonCode:
          description: Reason code provided by customer
          maxLength: 50
          type: string
        reasonId:
          description: >-
            Reason id assigned based on reasonCode or assigned in correction or
            by cash applier
          type: integer
          format: int64
        refnum:
          description: 'Reference number, invoice number'
          maxLength: 50
          type: string
        rmaNum:
          description: Matched arTran rmaNum or new assigned rmaNum on new created arTran
          maxLength: 50
          type: string
        source:
          description: Source of paymentDetail
          maxLength: 50
          type: string
        sourceId:
          description: The source identifier for this paymentDetail
          maxLength: 50
          type: string
        storeNum:
          description: >-
            Matched arTran storeNum or new assigned storeNum on new created
            arTran
          maxLength: 50
          type: string
        tranDate:
          description: >-
            Transaction date of matched arTran or tranDate assigned on new
            created arTran
          type: string
          format: date
        xferOrg:
          description: >-
            partition Org assigned on inter company transactions from autocash
            (ICCM, ICDM and ICPA)
          title: Org
          type: object
          properties:
            id:
              description: Org id
              example: 954
              type: integer
              format: int64
    PaymentDetailArTran_Create:
      title: PaymentDetailArTran
      x-entity: PaymentDetailArTran
      type: object
      properties:
        custAccountId:
          type: integer
          format: int64
        custAccountNum:
          type: string
        custId:
          type: integer
          format: int64
        custNum:
          type: string
        date1:
          type: string
          format: date-time
        date2:
          type: string
          format: date-time
        date3:
          type: string
          format: date-time
        date4:
          type: string
          format: date-time
        divisionId:
          type: integer
          format: int64
        isPending:
          type: boolean
        num1:
          type: number
          format: money
        num2:
          type: number
          format: money
        num3:
          type: number
          format: money
        num4:
          type: number
          format: money
        num5:
          type: number
          format: money
        num6:
          type: number
          format: money
        parentId:
          type: integer
          format: int64
        paymentId:
          type: integer
          format: int64
        pdAmount:
          type: number
          format: money
        pdArTranType:
          type: string
        pdDiscAmount:
          type: number
          format: money
        pdId:
          type: integer
          format: int64
        pdPayAmount:
          type: number
          format: money
        refnum:
          type: string
        state:
          type: integer
        tAmount:
          type: number
          format: money
        tDiscAmount:
          type: number
          format: money
        tDiscDate:
          type: string
          format: date
        tDueDate:
          type: string
          format: date
        tNetAmount:
          type: number
          format: money
        tOrigAmount:
          type: number
          format: money
        tPonum:
          type: string
        tRefnum2:
          type: string
        tTranDate:
          type: string
          format: date
        tTranType:
          type: string
        text1:
          type: string
        text10:
          type: string
        text2:
          type: string
        text3:
          type: string
        text4:
          type: string
        text5:
          type: string
        text6:
          type: string
        text7:
          type: string
        text8:
          type: string
        text9:
          type: string
        tranId:
          type: integer
          format: int64
    PaymentDetailArTran:
      title: PaymentDetailArTran
      x-entity: PaymentDetailArTran
      type: object
      properties:
        custAccountId:
          type: integer
          format: int64
        custAccountNum:
          type: string
        custId:
          type: integer
          format: int64
        custNum:
          type: string
        date1:
          type: string
          format: date-time
        date2:
          type: string
          format: date-time
        date3:
          type: string
          format: date-time
        date4:
          type: string
          format: date-time
        divisionId:
          type: integer
          format: int64
        isPending:
          type: boolean
        num1:
          type: number
          format: money
        num2:
          type: number
          format: money
        num3:
          type: number
          format: money
        num4:
          type: number
          format: money
        num5:
          type: number
          format: money
        num6:
          type: number
          format: money
        parentId:
          type: integer
          format: int64
        paymentId:
          type: integer
          format: int64
        pdAmount:
          type: number
          format: money
        pdArTranType:
          type: string
        pdDiscAmount:
          type: number
          format: money
        pdId:
          type: integer
          format: int64
        pdPayAmount:
          type: number
          format: money
        refnum:
          type: string
        state:
          type: integer
        tAmount:
          type: number
          format: money
        tDiscAmount:
          type: number
          format: money
        tDiscDate:
          type: string
          format: date
        tDueDate:
          type: string
          format: date
        tNetAmount:
          type: number
          format: money
        tOrigAmount:
          type: number
          format: money
        tPonum:
          type: string
        tRefnum2:
          type: string
        tTranDate:
          type: string
          format: date
        tTranType:
          type: string
        text1:
          type: string
        text10:
          type: string
        text2:
          type: string
        text3:
          type: string
        text4:
          type: string
        text5:
          type: string
        text6:
          type: string
        text7:
          type: string
        text8:
          type: string
        text9:
          type: string
        tranId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
    PaymentDetailArTran_Update:
      title: PaymentDetailArTran
      x-entity: PaymentDetailArTran
      type: object
      properties:
        custAccountId:
          type: integer
          format: int64
        custAccountNum:
          type: string
        custId:
          type: integer
          format: int64
        custNum:
          type: string
        date1:
          type: string
          format: date-time
        date2:
          type: string
          format: date-time
        date3:
          type: string
          format: date-time
        date4:
          type: string
          format: date-time
        divisionId:
          type: integer
          format: int64
        isPending:
          type: boolean
        num1:
          type: number
          format: money
        num2:
          type: number
          format: money
        num3:
          type: number
          format: money
        num4:
          type: number
          format: money
        num5:
          type: number
          format: money
        num6:
          type: number
          format: money
        parentId:
          type: integer
          format: int64
        paymentId:
          type: integer
          format: int64
        pdAmount:
          type: number
          format: money
        pdArTranType:
          type: string
        pdDiscAmount:
          type: number
          format: money
        pdId:
          type: integer
          format: int64
        pdPayAmount:
          type: number
          format: money
        refnum:
          type: string
        state:
          type: integer
        tAmount:
          type: number
          format: money
        tDiscAmount:
          type: number
          format: money
        tDiscDate:
          type: string
          format: date
        tDueDate:
          type: string
          format: date
        tNetAmount:
          type: number
          format: money
        tOrigAmount:
          type: number
          format: money
        tPonum:
          type: string
        tRefnum2:
          type: string
        tTranDate:
          type: string
          format: date
        tTranType:
          type: string
        text1:
          type: string
        text10:
          type: string
        text2:
          type: string
        text3:
          type: string
        text4:
          type: string
        text5:
          type: string
        text6:
          type: string
        text7:
          type: string
        text8:
          type: string
        text9:
          type: string
        tranId:
          type: integer
          format: int64
    PaymentMultiHit_Create:
      title: PaymentMultiHit
      x-entity: PaymentMultiHit
      type: object
      required:
        - payment
      properties:
        corCodeId:
          description: >-
            Correction code it that was used in autopay function as potential
            match
          type: integer
          format: int64
        isGross:
          description: 'True if match on gross amount, false if match on net amount'
          type: boolean
        payment:
          description: Link to payment domain
          title: Payment
          type: object
          properties:
            id:
              description: Payment id
              example: 954
              type: integer
              format: int64
    PaymentMultiHit:
      title: PaymentMultiHit
      x-entity: PaymentMultiHit
      type: object
      required:
        - payment
      properties:
        corCodeId:
          description: >-
            Correction code it that was used in autopay function as potential
            match
          type: integer
          format: int64
        isGross:
          description: 'True if match on gross amount, false if match on net amount'
          type: boolean
        payment:
          description: Link to payment domain
          $ref: '#/components/schemas/Payment'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    PaymentMultiHit_Update:
      title: PaymentMultiHit
      x-entity: PaymentMultiHit
      type: object
      required:
        - payment
      properties:
        corCodeId:
          description: >-
            Correction code it that was used in autopay function as potential
            match
          type: integer
          format: int64
        isGross:
          description: 'True if match on gross amount, false if match on net amount'
          type: boolean
        payment:
          description: Link to payment domain
          title: Payment
          type: object
          properties:
            id:
              description: Payment id
              example: 954
              type: integer
              format: int64
    PaymentMultiHitArTrans_Create:
      title: PaymentMultiHitArTrans
      x-entity: PaymentMultiHitArTrans
      type: object
      required:
        - paymentMultiHit
        - arTranId
      properties:
        arTranId:
          description: Id of arTran that was used in autopay function as potential match
          type: integer
          format: int64
        paymentMultiHit:
          description: Link to paymentMultiHit domain
          title: PaymentMultiHit
          type: object
          properties:
            id:
              description: PaymentMultiHit id
              example: 954
              type: integer
              format: int64
    PaymentMultiHitArTrans:
      title: PaymentMultiHitArTrans
      x-entity: PaymentMultiHitArTrans
      type: object
      required:
        - paymentMultiHit
        - arTranId
      properties:
        arTranId:
          description: Id of arTran that was used in autopay function as potential match
          type: integer
          format: int64
        paymentMultiHit:
          description: Link to paymentMultiHit domain
          $ref: '#/components/schemas/PaymentMultiHit'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    PaymentMultiHitArTrans_Update:
      title: PaymentMultiHitArTrans
      x-entity: PaymentMultiHitArTrans
      type: object
      required:
        - paymentMultiHit
        - arTranId
      properties:
        arTranId:
          description: Id of arTran that was used in autopay function as potential match
          type: integer
          format: int64
        paymentMultiHit:
          description: Link to paymentMultiHit domain
          title: PaymentMultiHit
          type: object
          properties:
            id:
              description: PaymentMultiHit id
              example: 954
              type: integer
              format: int64
    AcReasonTolerance_Create:
      title: AcReasonTolerance
      x-entity: AcReasonTolerance
      type: object
      properties:
        custGroupId:
          description: Ac memo group id
          type: integer
          format: int64
        newReasonId:
          description: New ArReason that will be assigned
          type: integer
          format: int64
        newTranTypeId:
          description: New ArTranType that will be assigned
          type: integer
          format: int64
        reasonId:
          description: Old ArReason
          type: integer
          format: int64
        tolAmount:
          description: Tolerance amount that reason can be changed
          type: number
          format: money
    AcReasonTolerance:
      title: AcReasonTolerance
      x-entity: AcReasonTolerance
      type: object
      properties:
        custGroupId:
          description: Ac memo group id
          type: integer
          format: int64
        newReasonId:
          description: New ArReason that will be assigned
          type: integer
          format: int64
        newTranTypeId:
          description: New ArTranType that will be assigned
          type: integer
          format: int64
        reasonId:
          description: Old ArReason
          type: integer
          format: int64
        tolAmount:
          description: Tolerance amount that reason can be changed
          type: number
          format: money
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    AcReasonTolerance_Update:
      title: AcReasonTolerance
      x-entity: AcReasonTolerance
      type: object
      properties:
        custGroupId:
          description: Ac memo group id
          type: integer
          format: int64
        newReasonId:
          description: New ArReason that will be assigned
          type: integer
          format: int64
        newTranTypeId:
          description: New ArTranType that will be assigned
          type: integer
          format: int64
        reasonId:
          description: Old ArReason
          type: integer
          format: int64
        tolAmount:
          description: Tolerance amount that reason can be changed
          type: number
          format: money
    AcSetupGroup_Create:
      title: AcSetupGroup
      x-entity: AcSetupGroup
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        groupType:
          description: Type of the group
          type: string
          enum:
            - Memo
            - Match
            - Discount
            - Offset
        name:
          description: The name for this entity
          maxLength: 50
          type: string
    AcSetupGroup:
      title: AcSetupGroup
      x-entity: AcSetupGroup
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        groupType:
          description: Type of the group
          type: string
          enum:
            - Memo
            - Match
            - Discount
            - Offset
        name:
          description: The name for this entity
          maxLength: 50
          type: string
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    AcSetupGroup_Update:
      title: AcSetupGroup
      x-entity: AcSetupGroup
      type: object
      required:
        - code
        - name
      properties:
        code:
          description: >-
            Short code, alphanumeric with no special characters except dash (for
            space) and underscore
          maxLength: 10
          type: string
        description:
          description: The description for this entity
          maxLength: 255
          type: string
        groupType:
          description: Type of the group
          type: string
          enum:
            - Memo
            - Match
            - Discount
            - Offset
        name:
          description: The name for this entity
          maxLength: 50
          type: string
    PaySchedule_Create:
      title: PaySchedule
      x-entity: PaySchedule
      type: object
      required:
        - wallet
        - customer
      properties:
        customer:
          description: 'Customer Bill To, will be populated if only wallet is provided'
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        dayInPeriod:
          description: >-
            Weekly; day in the period to process, 1-5 where 1=Monday and
            5=Friday. Monthy; day from start of month
          type: integer
        inactive:
          type: boolean
        invoicesToPay:
          description: >

            Filter to use to pick up the transactions to pay.

            `All` - Pay all open, includes and pay all open transactions,
            regardless of due date;

            `Due` - Pay when due, includes transactions with a due date equal to
            or less than today;
          type: string
          enum:
            - All
            - Due
        period:
          description: >

            The frequency to run and check for transactions to pay.

            `Daily` - Run once a day and pay based on

            `Weekly` - Pay all open, includes and pay all open transactions,
            regardless of due date;

            `Monthly` - Pay when due, includes transactions with a due date
            equal to or less than today;
          type: string
          enum:
            - Weekly
            - Monthly
            - Daily
        wallet:
          description: Customer wallet to use
          title: Wallet
          type: object
          properties:
            id:
              description: Wallet id
              example: 954
              type: integer
              format: int64
    PaySchedule:
      title: PaySchedule
      x-entity: PaySchedule
      type: object
      required:
        - wallet
        - customer
      properties:
        customer:
          description: 'Customer Bill To, will be populated if only wallet is provided'
          $ref: '#/components/schemas/Customer'
        dayInPeriod:
          description: >-
            Weekly; day in the period to process, 1-5 where 1=Monday and
            5=Friday. Monthy; day from start of month
          type: integer
        inactive:
          type: boolean
        invoicesToPay:
          description: >

            Filter to use to pick up the transactions to pay.

            `All` - Pay all open, includes and pay all open transactions,
            regardless of due date;

            `Due` - Pay when due, includes transactions with a due date equal to
            or less than today;
          type: string
          enum:
            - All
            - Due
        period:
          description: >

            The frequency to run and check for transactions to pay.

            `Daily` - Run once a day and pay based on

            `Weekly` - Pay all open, includes and pay all open transactions,
            regardless of due date;

            `Monthly` - Pay when due, includes transactions with a due date
            equal to or less than today;
          type: string
          enum:
            - Weekly
            - Monthly
            - Daily
        wallet:
          description: Customer wallet to use
          $ref: '#/components/schemas/Wallet'
        id:
          type: integer
          format: int64
          description: unique id
          example: 954
          readOnly: true
        version:
          type: integer
          description: 'version of the edit, incremented on each change'
          example: 0
          readOnly: true
    PaySchedule_Update:
      title: PaySchedule
      x-entity: PaySchedule
      type: object
      required:
        - wallet
        - customer
      properties:
        customer:
          description: 'Customer Bill To, will be populated if only wallet is provided'
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        dayInPeriod:
          description: >-
            Weekly; day in the period to process, 1-5 where 1=Monday and
            5=Friday. Monthy; day from start of month
          type: integer
        inactive:
          type: boolean
        invoicesToPay:
          description: >

            Filter to use to pick up the transactions to pay.

            `All` - Pay all open, includes and pay all open transactions,
            regardless of due date;

            `Due` - Pay when due, includes transactions with a due date equal to
            or less than today;
          type: string
          enum:
            - All
            - Due
        period:
          description: >

            The frequency to run and check for transactions to pay.

            `Daily` - Run once a day and pay based on

            `Weekly` - Pay all open, includes and pay all open transactions,
            regardless of due date;

            `Monthly` - Pay when due, includes transactions with a due date
            equal to or less than today;
          type: string
          enum:
            - Weekly
            - Monthly
            - Daily
        wallet:
          description: Customer wallet to use
          title: Wallet
          type: object
          properties:
            id:
              description: Wallet id
              example: 954
              type: integer
              format: int64
    PayTranLine_Create:
      title: PayTranLine
      x-entity: PayTranLine
      type: object
      required:
        - applyAmount
        - arTran
      properties:
        applyAmount:
          description: >-
            the amount to pay on the Tran. If less then tran.amount then
            shortAmount and shortReason are required
          type: number
          format: money
        arTran:
          description: The ArTran being paid
          title: ArTran
          type: object
          properties:
            id:
              description: ArTran id
              example: 954
              type: integer
              format: int64
        comments:
          description: Any special comment about this application
          maxLength: 500
          type: string
        disputeLines:
          description: JSON array with info on invoice lines being shorted or disputed
          type: array
          items:
            type: object
        isOriginator:
          description: >-
            Will be true if this tran was created for and during this payment
            application, sush as for FEECC
          type: boolean
        payTran:
          title: PayTran
          type: object
          properties:
            id:
              description: PayTran id
              example: 954
              type: integer
              format: int64
        shortAmount:
          description: The amount shorted.
          type: number
          format: money
        shortReasonId:
          description: The reason Tran is not being paid in full
          type: integer
          format: int64
    PayTran_Create:
      title: PayTran
      x-entity: PayTran
      type: object
      required:
        - applyAmount
        - customer
        - surcharge
        - payType
        - amount
        - lines
      properties:
        amount:
          description: >

            Calculated. applyAmount is prefered for when creating new PayTrans.

            If only amount is set, applyAmount will be assigned from amount
            first before any calculations

            : amount = applyAmount + surcharge fee
          type: number
          format: money
        applyAmount:
          description: >-
            Amount to apply to invoices. applyAmount = amount - surcharge. Same
            as amount when no fees
          type: number
          format: money
        comments:
          description: Comments
          maxLength: 500
          type: string
        currency:
          description: >-
            ISO 4217 currency (ex "USD") if Company is setup for multiple
            currencies
          type: string
        customer:
          description: 'Customer for payment, on create pass its id at minimum'
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        instrument:
          description: >-
            Payment instrument and billing used for the payment. The token from
            the iframe Tokenizer will submited here.
                              If coming from a wallet then its data is kept here for historical purposes.
          type: string
        isPrepay:
          description: >
            If this is a pre-payment it will not validate the lines and use
            logic to create an on-account open credit memo using the

            default tranType that has been configured for the payment type.
          default: 'false'
          type: boolean
        lines:
          description: 'The lines for instruction on how to apply payment '
          type: array
          items:
            $ref: '#/components/schemas/PayTranLine_Create'
        payDate:
          description: >-
            The payment date, defaults to the day its created unless its
            scheduled for future.
          default: now
          type: string
          format: date
        payType:
          description: 'ACH, Card or RD (Returns)'
          type: string
          enum:
            - ACH
            - Card
            - RD
        processorResponse:
          description: >-
            The last response from the credit card gateway or bank for ACH. See
            examples as the format will vary depending on the gateway
          type: string
        refnum:
          description: Payment reference number.
          maxLength: 50
          type: string
        sendRecieptTo:
          description: >
            Send a receipt (and a problem email if it gets returned) to this
            email address, can be any ISO valid email or comma seperated emails.

            To disable sending for this paytran, set this to FALSE or NO. If
            this is empty and nine.ipay.
          example: 'sarah123@gmail.com, "Blow, Joe" <joe@9ci.com>'
          maxLength: 1000
          type: string
        surcharge:
          description: >-
            Surcharges or Convenience Fee for payment (normally only for credit
            cards)
          type: number
          format: money
        wallet:
          description: >-
            The saved payment instrument to use, can be null if its a one off.
            Can be thought of as a template for token
          title: Wallet
          type: object
          properties:
            id:
              description: Wallet id
              example: 954
              type: integer
              format: int64
    PayTran_Update:
      title: PayTran
      x-entity: PayTran
      type: object
      required:
        - applyAmount
        - surcharge
        - lines
      properties:
        applyAmount:
          description: >-
            Amount to apply to invoices. applyAmount = amount - surcharge. Same
            as amount when no fees
          type: number
          format: money
        comments:
          description: Comments
          maxLength: 500
          type: string
        instrument:
          description: >-
            Payment instrument and billing used for the payment. The token from
            the iframe Tokenizer will submited here.
                              If coming from a wallet then its data is kept here for historical purposes.
          type: string
        lines:
          description: 'The lines for instruction on how to apply payment '
          type: array
          items:
            title: PayTranLine
            type: object
            properties:
              id:
                description: PayTranLine id
                example: 954
                type: integer
                format: int64
        payDate:
          description: >-
            The payment date, defaults to the day its created unless its
            scheduled for future.
          default: now
          type: string
          format: date
        processorResponse:
          description: >-
            The last response from the credit card gateway or bank for ACH. See
            examples as the format will vary depending on the gateway
          type: string
        refnum:
          description: Payment reference number.
          maxLength: 50
          type: string
        surcharge:
          description: >-
            Surcharges or Convenience Fee for payment (normally only for credit
            cards)
          type: number
          format: money
    Wallet_Create:
      title: Wallet
      x-entity: Wallet
      type: object
      required:
        - customer
      properties:
        bankName:
          description: Name of bank
          maxLength: 50
          type: string
        billingInfo:
          description: Billing info object
          type: string
        ccBrand:
          description: 'Credit card brand description. Visa, Mastercard, Amex, etc..'
          maxLength: 50
          type: string
        ccExpireMonth:
          description: >-
            Credit card expiry month. If payType=Card then this is required as a
            valid numeric field.
          maxLength: 2
          type: string
        ccExpireYear:
          description: >-
            Credit card expiry year. If payType=Card then this is required as a
            valid numeric field.
          maxLength: 4
          type: string
        ccHolderName:
          description: Credit card holder
          maxLength: 255
          type: string
        customer:
          description: >-
            The Customer this wallet is valid for. May be a parent or
            grandparent.
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        isPrimary:
          description: >-
            Flag for primary form of payment. Only one wallet under a customer
            may be primary
          type: boolean
        isSaved:
          description: >-
            If true then owner approved for future use vs false where wallet is
            a one time usage.
                           Wallets marked with isSaved=false will be periodically purged (normally once per day).
                           To list saved wallets for a customer the criteira should normally include isSaved=true
          default: 'true'
          type: boolean
        last4:
          description: Last 4 numbers for account or credit card num
          maxLength: 255
          type: string
        name:
          description: >-
            Assigned by user to name a saved wallet. Defaults to '{payType}
            ending with {last4}'
          maxLength: 50
          type: string
        payType:
          description: Billing info object
          type: string
          enum:
            - ACH
            - Card
            - RD
        routingNum:
          description: Bank routing number
          maxLength: 10
          type: string
        token:
          description: The saved gateway token for this wallet
          maxLength: 255
          type: string
    Wallet_Update:
      title: Wallet
      x-entity: Wallet
      type: object
      required:
        - customer
      properties:
        bankName:
          description: Name of bank
          maxLength: 50
          type: string
        billingInfo:
          description: Billing info object
          type: string
        ccBrand:
          description: 'Credit card brand description. Visa, Mastercard, Amex, etc..'
          maxLength: 50
          type: string
        ccExpireMonth:
          description: >-
            Credit card expiry month. If payType=Card then this is required as a
            valid numeric field.
          maxLength: 2
          type: string
        ccExpireYear:
          description: >-
            Credit card expiry year. If payType=Card then this is required as a
            valid numeric field.
          maxLength: 4
          type: string
        ccHolderName:
          description: Credit card holder
          maxLength: 255
          type: string
        customer:
          description: >-
            The Customer this wallet is valid for. May be a parent or
            grandparent.
          title: Customer
          type: object
          properties:
            id:
              description: Customer id
              example: 954
              type: integer
              format: int64
        isPrimary:
          description: >-
            Flag for primary form of payment. Only one wallet under a customer
            may be primary
          type: boolean
        isSaved:
          description: >-
            If true then owner approved for future use vs false where wallet is
            a one time usage.
                           Wallets marked with isSaved=false will be periodically purged (normally once per day).
                           To list saved wallets for a customer the criteira should normally include isSaved=true
          default: 'true'
          type: boolean
        last4:
          description: Last 4 numbers for account or credit card num
          maxLength: 255
          type: string
        name:
          description: >-
            Assigned by user to name a saved wallet. Defaults to '{payType}
            ending with {last4}'
          maxLength: 50
          type: string
        payType:
          description: Billing info object
          type: string
          enum:
            - ACH
            - Card
            - RD
        routingNum:
          description: Bank routing number
          maxLength: 10
          type: string
        token:
          description: The saved gateway token for this wallet
          maxLength: 255
          type: string
  securitySchemes:
    main_auth:
      description: |
        Get access to data while protecting your account credentials.
        OAuth2 is also a safer and more secure way to give you access.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://9ci.io/api/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      description: >
        For this sample, you can use the api key `special-key` to test the
        authorization filters.
      type: apiKey
      name: api_key
      in: header
  parameters:
    id:
      name: id
      in: path
      description: id for entity
      required: true
      schema:
        type: integer
        format: int64
    async:
      name: async
      in: query
      description: >
        <small>(default: true)</small> Whether it should run async in background
        thread and return the job immediately.

        SyncJob can then be polled and checked for Finished status.
      schema:
        type: string
    q:
      name: q
      in: query
      description: >-
        the string to search for or a mango query json object, see docs for
        details on mango format
      schema:
        type: object
    source:
      name: source/jobSource
      in: query
      required: true
      description: >
        Specify a consistent source name for the job, for example "Oracle ERP",
        "California" etc..
      schema:
        type: string
    page:
      name: page
      in: query
      description: page number of list to retrieve
      schema:
        type: integer
    max:
      name: max
      in: query
      description: 'number of items to show per page, defaults to 20'
      schema:
        type: integer
    sort:
      name: sort
      in: query
      description: 'the field name to sort on, use the **q** param for multi sorts'
      schema:
        type: string
    bindId:
      name: bindId
      in: query
      description: Use the id passed in body as id for new entity
      required: false
      schema:
        type: boolean
  responses:
    403_Forbidden:
      description: Access forbidden. Permission denied.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    404_NotFound:
      description: Resource was not found.
    400_Problem:
      description: Invalid data was sent. Problem response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
    200_Result:
      description: Result of process or rpc call.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    422_ValidationError:
      description: Invalid data was sent. Validation Error(s)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    201_SyncJobBatch:
      description: >-
        Batch Job resource. When finished will have data field with the Batch
        results.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyncJob'
            properties:
              data:
                description: Data will be an array of Batches created
                type: array
                items:
                  title: AR Batch Skinny
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      description: Resource id
                      example: 954
                      readOnly: true
                    org:
                      description: >-
                        The partition Org for the batch. If partionOrgType is
                        Division then this will be the division id.
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: resource id
                          readOnly: true
                        num:
                          description: >-
                            Unique alpha-numeric identifier for this
                            organization
                          example: SPX-321
                          maxLength: 50
                          type: string
                        type:
                          description: The type of org
                          example: Customer
                          type: string
                    source:
                      description: The value of the `source` property
                      type: string
                    lockbox:
                      description: 'The bank lockbox, the num from Lockbox resource'
                      maxLength: 50
                      type: string
                    controlAmount:
                      description: Control Amount should equal the sum of payments amount
                      type: number
                      format: money
              problems:
                description: >-
                  Problems will be an array of problems with batchId under
                  Payload array
                type: array
                items:
                  $ref: ../schemas/Problem.yaml
    402_PaymentDeclined:
      description: Payment was declined
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayDeclinedProblem'
    204_NoContent:
      description: 'Request was accepted, but no response body is returned.'
  requestBodies:
    batchAutoMatchPostBody:
      description: Offset Batch Instructions
      required: true
      content:
        application/json:
          schema:
            title: Match Instructions
            type: object
            required:
              - orgs
            properties:
              matchClause:
                type: string
                description: condition arTran and credit should match on
              orgs:
                description: >
                  Only required when data is segmented by multiple partition
                  Orgs.

                  The list of ids for the partition Orgs (Company, Division,
                  etc..) A batch will be created for each partition org.
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      description: Partition Org Id
              correct:
                description: Run correction on the resulting batches
                type: boolean
              post:
                description: >
                  <small>(default: false)</small> When true will post the
                  batches
                type: boolean
              q:
                description: |
                  <small>(default: false)</small> q filter on tran level
                type: object
    batchWriteOffPostBody:
      description: Write-off Batch Instructions
      required: true
      content:
        application/json:
          schema:
            title: Write-off Instructions
            type: object
            required:
              - orgs
            properties:
              orgs:
                description: >
                  Only required when data is segmented by multiple partition
                  Orgs.

                  The list of ids for the partition Orgs (Company, Division,
                  etc..) A batch will be created for each partition org.
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      description: Partition Org Id
              correct:
                description: Run correction on the resulting batches
                type: boolean
              post:
                description: >
                  <small>(default: false)</small> When true will post the
                  batches
                type: boolean
              q:
                description: |
                  <small>(default: false)</small> q filter on tran level
                type: object
    payScheduleProcessPostBody:
      description: PaySchedule Instructions
      required: true
      content:
        application/json:
          schema:
            title: PaySchedule Instructions
            type: object
            required:
              - orgs
            properties:
              type:
                description: >-
                  The type to run, either ACH or Card (if credit card gateway is
                  setup)
                type: string
                enum:
                  - ACH
                  - Card
              bank:
                description: >-
                  When payType=ACH, the code for the bank this is for (wells,
                  jpm, boa, etc..)
                type: string
              orgs:
                description: >
                  Only required when data is segmented by multiple partition
                  Orgs.

                  The list of ids for the partition Orgs (Company, Division,
                  etc..) A batch will be created for each partition org.
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      description: Partition Org Id
    achPostBody:
      description: ACH Batch Instructions
      required: true
      content:
        application/json:
          schema:
            title: Batch Instructions
            type: object
            required:
              - bank
              - orgs
            properties:
              bank:
                description: 'The code for the bank this is for (wells, jpm, boa)'
                type: string
              push:
                description: >
                  <small>(default: false)</small> When true will push to a
                  supported bank's sftp after batch generation.
                type: boolean
              orgs:
                description: >
                  Only required when data is segmented by multiple partition
                  Orgs.

                  The list of ids for the partition Orgs (Company, Division,
                  etc..) A batch will be created for each partition org.
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      description: Partition Org Id
    cardsPostBody:
      description: ACH Batch Instructions
      required: true
      content:
        application/json:
          schema:
            title: Batch Instructions
            type: object
            required:
              - orgs
            properties:
              orgs:
                description: >
                  Only required when data is segmented by multiple partition
                  Orgs.

                  The list of ids for the partition Orgs (Company, Division,
                  etc..) A batch will be created for each partition org.
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      description: Partition Org Id
x-taggroups:
  - name: Core / Rally
    description: Rally
    tags:
      - activity
      - activityNote
      - appParam
      - attachment
      - company
      - contact
      - org
      - orgTypeSetup
      - partitionOrg
      - role
      - roleUser
      - syncJob
      - tag
      - user
  - name: Receivables/Collections
    description: Receivables/Collections
    tags:
      - adjust
      - adjustJournal
      - adjustLine
      - agingSetup
      - bank
      - bankAccount
      - custAccount
      - custAccountType
      - custClass
      - custFamily
      - custSetup
      - customer
      - gl
      - glAccount
      - glBatch
      - glJournal
      - glPostPeriod
      - lockbox
      - reason
      - reasonGroup
      - refnumGen
      - status
      - term
      - tran
      - tranJournal
      - tranLine
      - tranType
  - name: Autocash
    description: Autocash
    tags:
      - batch
      - corCode
      - layoutField
      - layoutImport
      - layoutRecord
      - micrBlacklist
      - payment
      - paymentDeleted
      - paymentDetail
      - paymentDetailArTran
      - paymentMultiHit
      - paymentMultiHitArTrans
      - reasonTolerance
      - setupGroup
  - name: iPay/Payments
    description: iPay/Payments
    tags:
      - paySchedule
      - payTran
      - wallet
  - name: Banks
    description: Banks
    tags:
      - ach
      - cards
      - inbound
  - name: Reports
    description: Reports
    tags:
      - statement